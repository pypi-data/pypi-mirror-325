Metadata-Version: 2.1
Name: flashcommit
Version: 0.2.7
Summary: 
Author: Michael Lahr
Author-email: michael.lahr@gmail.com
Requires-Python: >=3.12,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: argparse (>=1.4.0,<2.0.0)
Requires-Dist: beautifulsoup4 (>=4.13.3,<5.0.0)
Requires-Dist: gitpython (>=3.1.44,<4.0.0)
Requires-Dist: html5lib (>=1.1,<2.0)
Requires-Dist: lxml (>=5.3.0,<6.0.0)
Requires-Dist: menschmachine (>=0.1.84,<0.2.0)
Requires-Dist: prompt-toolkit (>=3.0.50,<4.0.0)
Requires-Dist: pyaml (>=24.12.1,<25.0.0)
Requires-Dist: pydantic (>=2.10.6,<3.0.0)
Requires-Dist: pydriller (>=2.7,<3.0)
Requires-Dist: pytest (>=8.3.4,<9.0.0)
Requires-Dist: python-dotenv (>=1.0.1,<2.0.0)
Requires-Dist: requests (>=2.32.3,<3.0.0)
Requires-Dist: rich (>=13.9.4,<14.0.0)
Requires-Dist: ripgrepy (>=2.1.0,<3.0.0)
Requires-Dist: textual (>=1.0.0,<2.0.0)
Requires-Dist: websocket-client (>=1.8.0,<2.0.0)
Description-Content-Type: text/markdown

# Flash Commit

Make it great.
Test the demand with this before making the plugin.

This has changed the way I am developing software.
At least for me this tool is revolutionary.

## How to build

Build a python package
```poetry build```

## Problems

## TODO

- ensure backup is working
- add .flashcommit.rc with linter, additional coding rules
- add shell_command callback support

make full flash mode:

1. apply diff
2. ask 'is it good'
3. if yes commit while let user edit the commit message.
4. if no cancel or try again

## Feature Ideas

- internal loop to break down the problem into 'shallow problems'
- builtin api key management like --generate-key or better spin up dialog if starting without a key
- get rid of the prompting. Who is the prompter? Better not me -> pull the jira issue and iterate until its clear
- make it review an github PR and push selected comments to gh
- save all answers like ignore perm
- make the user control the config via remote settings (which config?)

## Developer Documentation

- install git hooks

## Enduser Documentation

- use `git rebase --onto HEAD~1 HEAD` if in full flash mode to drop the latest change

