name: Run tests

env:
  # enable colored output
  # https://github.com/pytest-dev/pytest/issues/7443
  PY_COLORS: 1

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    # use `bash` as shell, as in default mode GH Actions don't use -o pipefail leading to missing errors
    shell: bash

jobs:
  run_tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        # python-version: ['3.9', '3.10', '3.11', '3.12']
        python-version: ["3.10", "3.12"]

    runs-on: ${{ matrix.os }}
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || github.base_ref == 'main' && 'prod' || github.ref == 'refs/heads/staging' && 'staging' || github.base_ref == 'staging' && 'staging' || github.ref == 'refs/heads/dev' && 'dev' || github.base_ref == 'dev' && 'dev' }}

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_API_BASE_URL: ${{ secrets.OPENAI_API_BASE_URL }}
      OPENAI_API_MODEL: meta-llama/Llama-3.3-70B-Instruct
      SLOW_MODE_SLEEP: 30

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: download uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies
        run: uv pip install --system -e . && uv pip install --system ".[tests]" && uv pip install -U httpcore --system 

      - name: Run tests
        run: pytest -vv tests/
        if: ${{ !(github.event.pull_request.head.repo.fork) }}
