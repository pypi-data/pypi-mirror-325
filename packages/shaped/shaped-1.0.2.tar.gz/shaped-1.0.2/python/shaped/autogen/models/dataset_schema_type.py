# coding: utf-8

"""
    Shaped API

    Welcome to Shaped's API reference docs. These provide a detailed view of the endpoints and CLI commands that Shaped provides and brief explanations of how they should be used.   Shaped's API is composed of 3 components:   1. **Dataset** - used to provision and manage 'Shaped Datasets', which are persisted     data views of external data. Shaped Datasets can be created from any of our     'Shaped connectors' (e.g. S3, Segment, Snowflake, etc.) and support both batch     ingestion (up to a 15min delay) and stream ingestion (up to a 30 second     delay) depending on the specific connector used. Shaped datasets can also be     created from local files, which is particularly useful for getting started     with a snapshot of data.    2. **Model Management** - used to provision and manage 'Shaped Models', which     represent a system of data pipelines, training and serving infrastructure for     your ranking use-case.    3. **Model Inference** - a high performance API that's used to make     user-understanding requests or ranking inferences to your 'Shaped Models'. For     example, the 'rank' endpoint can be used to determine for a given user id     query, what is the content that is most engaging to that user.    The recommended workflow to interact with the Shaped API is as follows:   1. First create 'Shaped Datasets' to sync over data that your Shaped     understanding models will need. The models at the minimum need interaction     data to understand behavior of your users, so start with that and add your item     and user catalog data later.   2. Then create 'Shaped Models' that use your created 'Shaped Datasets' as     input. Your Shaped Model will will start streaming, processing and training     from your connected data immediately. After a few hours your model will have     tuned all parameters based on your data and will deploy an active model.   3. You can now use the 'Model Inference' endpoints to make real-time     inferences to your model based on your use-case. 

    The version of the OpenAPI document: 1.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class DatasetSchemaType(str, Enum):
    """
    The schema type defines the type of the dataset. This is used to provision the correct data ingestion pipeline for the dataset. 
    """

    """
    allowed enum values
    """
    BIGQUERY = 'BIGQUERY'
    MONGODB = 'MONGODB'
    SNOWFLAKE = 'SNOWFLAKE'
    POSTGRES = 'POSTGRES'
    MYSQL = 'MYSQL'
    SEGMENT = 'SEGMENT'
    RUDDERSTACK = 'RUDDERSTACK'
    AMPLITUDE = 'AMPLITUDE'
    AWS_PINPOINT = 'AWS_PINPOINT'
    REDSHIFT = 'REDSHIFT'
    KINESIS = 'KINESIS'
    CUSTOM = 'CUSTOM'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of DatasetSchemaType from a JSON string"""
        return cls(json.loads(json_str))


