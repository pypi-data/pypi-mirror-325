import ctypes
from _typeshed import Incomplete

FILE_ATTRIBUTE_HIDDEN: int
FILE_ATTRIBUTE_READONLY: int
FILE_ATTRIBUTE_ARCHIVE: int
FILE_ATTRIBUTE_SYSTEM: int
FILE_ATTRIBUTE_COMPRESSED: int

def attributes(file_path, hidden: bool = False, readonly: bool = False, archive: bool = False, system: bool = False, compressed: bool = False) -> None: ...

K: Incomplete
H: Incomplete

def right_rotate(x, n): ...
def sha256(message): ...
def file_hash(file_path): ...
def open_url(url: str = '', browser: str = 'msedge') -> None: ...
def download(url, destination, Savelocation, Sen: str = 'get') -> None: ...
def system(none: Incomplete | None = None): ...
def username(): ...
def increase(file_extension: Incomplete | None = None, file_type: Incomplete | None = None, icon_path: Incomplete | None = None, associated_program: Incomplete | None = None) -> None: ...
def delete(file_extension, file_type) -> None: ...
def modify(old_file_extension: Incomplete | None = None, old_file_type: Incomplete | None = None, new_file_extension: Incomplete | None = None, new_file_type: Incomplete | None = None, new_icon_path: Incomplete | None = None, new_associated_program: Incomplete | None = None) -> None: ...
def desktop(): ...
def path(path): ...
def obtain(): ...
def menu_app(entry_name, exe_path) -> None: ...
def add_menu(file_extension, file_description) -> None: ...
def menu_icon(menu_key_name, icon_path) -> None: ...
def variable(variable, value) -> None: ...
def Systemtime(wYear, wMonth, wDay, wHour, wMinute, wSecond, wMilliseconds) -> None: ...
def association(file_extension, program_path) -> None: ...
def systemkey(): ...
def way(): ...
def exvironment(): ...
def SystemTime(): ...
def read(file_extension, file_path): ...
def read_file(file_extension): ...
def shortcut(target_path, shortcut_path, run_as_admin: bool = False) -> None: ...
def add_drivers(exe_path, icon_path, display_name, GUID: str = '{20D04FE0-3AEA-1069-A2D8-08002B30309D}') -> None: ...
def getregedit(root_key, sub_key, target_name, target_value): ...
def afterdef(func): ...
def driver(): ...
def winagent(proxy_server, proxy_port) -> None: ...
def winprohibt() -> None: ...

kernel32: Incomplete

class STARTUPINFO(ctypes.Structure): ...
class PROCESS_INFORMATION(ctypes.Structure): ...

def create_process(command): ...
def delete_process(pid) -> None: ...
def backend(file) -> None: ...
def split(path): ...
def dirname(path): ...
def copy(src, dst) -> None: ...
def delete_file(file_path) -> None: ...
def filehash(file_path): ...
def copy2(source_file, destination_file, TrueorFalse: bool = False) -> None: ...
def ctrlc(text) -> None: ...
def curani(cursor_path) -> None: ...
def size(): ...

user32: Incomplete
gdi32: Incomplete
gdiplus: Incomplete

def screenshot(image_path, format) -> None: ...

class Email:
    def image_attachment(sender, password, receivers, subject, text_content, image_path) -> None: ...
    def image_html(sender, password, receivers, subject, html_content, image_path) -> None: ...
    def html(sender, password, receivers, subject, html_content, smtp_server: str = 'smtp.example.com', smtp_port: int = 587) -> None: ...
    def text(sender, password, receivers, subject, text_content, smtp_server: str = 'smtp.example.com', smtp_port: int = 587) -> None: ...
    def repeat_text(sender, password, receivers, subject, text_content, smtp_server: str = 'smtp.example.com', smtp_port: int = 587) -> None: ...
    def repeat_html(sender, password, receivers, subject, html_content, smtp_server: str = 'smtp.example.com', smtp_port: int = 587) -> None: ...
    def repeat_image_html(sender, password, receivers, subject, html_content, image_path, smtp_server: str = 'smtp.example.com', smtp_port: int = 587) -> None: ...
    def repeat_image_attachment(sender, password, receivers, subject, text_content, image_path, smtp_server: str = 'smtp.example.com', smtp_port: int = 587) -> None: ...
