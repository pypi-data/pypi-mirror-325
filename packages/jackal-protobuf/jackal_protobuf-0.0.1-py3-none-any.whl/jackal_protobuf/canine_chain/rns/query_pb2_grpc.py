# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from jackal_protobuf.canine_chain.rns import query_pb2 as canine__chain_dot_rns_dot_query__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in canine_chain/rns/query_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class QueryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/canine_chain.rns.Query/Params',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryParams.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryParamsResponse.FromString,
                _registered_method=True)
        self.Name = channel.unary_unary(
                '/canine_chain.rns.Query/Name',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryName.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryNameResponse.FromString,
                _registered_method=True)
        self.ListOwnedNames = channel.unary_unary(
                '/canine_chain.rns.Query/ListOwnedNames',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryListOwnedNames.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryListOwnedNamesResponse.FromString,
                _registered_method=True)
        self.AllNames = channel.unary_unary(
                '/canine_chain.rns.Query/AllNames',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryAllNames.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryAllNamesResponse.FromString,
                _registered_method=True)
        self.Bid = channel.unary_unary(
                '/canine_chain.rns.Query/Bid',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryBid.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryBidResponse.FromString,
                _registered_method=True)
        self.AllBids = channel.unary_unary(
                '/canine_chain.rns.Query/AllBids',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryAllBids.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryAllBidsResponse.FromString,
                _registered_method=True)
        self.ForSale = channel.unary_unary(
                '/canine_chain.rns.Query/ForSale',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryForSale.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryForSaleResponse.FromString,
                _registered_method=True)
        self.AllForSale = channel.unary_unary(
                '/canine_chain.rns.Query/AllForSale',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryAllForSale.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryAllForSaleResponse.FromString,
                _registered_method=True)
        self.Init = channel.unary_unary(
                '/canine_chain.rns.Query/Init',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryInit.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryInitResponse.FromString,
                _registered_method=True)
        self.AllInits = channel.unary_unary(
                '/canine_chain.rns.Query/AllInits',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryAllInits.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryAllInitsResponse.FromString,
                _registered_method=True)
        self.PrimaryName = channel.unary_unary(
                '/canine_chain.rns.Query/PrimaryName',
                request_serializer=canine__chain_dot_rns_dot_query__pb2.QueryPrimaryName.SerializeToString,
                response_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryPrimaryNameResponse.FromString,
                _registered_method=True)


class QueryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Params(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Name(self, request, context):
        """Queries a Name by name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOwnedNames(self, request, context):
        """Queries a list of Name items by address.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllNames(self, request, context):
        """Queries a list of Name items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Bid(self, request, context):
        """Queries a Bid by name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllBids(self, request, context):
        """Queries a list of Bid items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForSale(self, request, context):
        """Queries a ForSale by name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllForSale(self, request, context):
        """Queries a list of ForSale items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Init(self, request, context):
        """Queries an Init by address.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllInits(self, request, context):
        """Queries a list of Init items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrimaryName(self, request, context):
        """Queries a list of Init items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryParams.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'Name': grpc.unary_unary_rpc_method_handler(
                    servicer.Name,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryName.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryNameResponse.SerializeToString,
            ),
            'ListOwnedNames': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOwnedNames,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryListOwnedNames.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryListOwnedNamesResponse.SerializeToString,
            ),
            'AllNames': grpc.unary_unary_rpc_method_handler(
                    servicer.AllNames,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryAllNames.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryAllNamesResponse.SerializeToString,
            ),
            'Bid': grpc.unary_unary_rpc_method_handler(
                    servicer.Bid,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryBid.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryBidResponse.SerializeToString,
            ),
            'AllBids': grpc.unary_unary_rpc_method_handler(
                    servicer.AllBids,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryAllBids.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryAllBidsResponse.SerializeToString,
            ),
            'ForSale': grpc.unary_unary_rpc_method_handler(
                    servicer.ForSale,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryForSale.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryForSaleResponse.SerializeToString,
            ),
            'AllForSale': grpc.unary_unary_rpc_method_handler(
                    servicer.AllForSale,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryAllForSale.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryAllForSaleResponse.SerializeToString,
            ),
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryInit.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryInitResponse.SerializeToString,
            ),
            'AllInits': grpc.unary_unary_rpc_method_handler(
                    servicer.AllInits,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryAllInits.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryAllInitsResponse.SerializeToString,
            ),
            'PrimaryName': grpc.unary_unary_rpc_method_handler(
                    servicer.PrimaryName,
                    request_deserializer=canine__chain_dot_rns_dot_query__pb2.QueryPrimaryName.FromString,
                    response_serializer=canine__chain_dot_rns_dot_query__pb2.QueryPrimaryNameResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'canine_chain.rns.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('canine_chain.rns.Query', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/Params',
            canine__chain_dot_rns_dot_query__pb2.QueryParams.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryParamsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Name(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/Name',
            canine__chain_dot_rns_dot_query__pb2.QueryName.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListOwnedNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/ListOwnedNames',
            canine__chain_dot_rns_dot_query__pb2.QueryListOwnedNames.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryListOwnedNamesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AllNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/AllNames',
            canine__chain_dot_rns_dot_query__pb2.QueryAllNames.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryAllNamesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Bid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/Bid',
            canine__chain_dot_rns_dot_query__pb2.QueryBid.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryBidResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AllBids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/AllBids',
            canine__chain_dot_rns_dot_query__pb2.QueryAllBids.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryAllBidsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ForSale(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/ForSale',
            canine__chain_dot_rns_dot_query__pb2.QueryForSale.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryForSaleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AllForSale(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/AllForSale',
            canine__chain_dot_rns_dot_query__pb2.QueryAllForSale.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryAllForSaleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/Init',
            canine__chain_dot_rns_dot_query__pb2.QueryInit.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryInitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AllInits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/AllInits',
            canine__chain_dot_rns_dot_query__pb2.QueryAllInits.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryAllInitsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PrimaryName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/canine_chain.rns.Query/PrimaryName',
            canine__chain_dot_rns_dot_query__pb2.QueryPrimaryName.SerializeToString,
            canine__chain_dot_rns_dot_query__pb2.QueryPrimaryNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
