[project]
name = "starlette_dispatch"
description = "Dependency injection and routing extensions for Starlette."
dynamic = ["version"]
authors = [
    { name = "Alex Oleshkevich", email = "alex.oleshkevich@gmail.com" }
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/alex-oleshkevich/starlette_dispatch"
repository = "https://github.com/alex-oleshkevich/starlette_dispatch"
documentation = "https://github.com/alex-oleshkevich/starlette_dispatch"
keywords = []
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[dependency-groups]
dev = [
    "starlette>=0.41",
    "pytest>=8.0",
    "pytest-asyncio>=0.23",
    "pytest-cov>=4.0",
    "mypy>=1",
    "uvicorn >= 0.19",
    "jinja2 >= 3",
    "starception >= 1.0",
    "httpx >= 0.27.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "starlette_dispatch/__init__.py"

[tool.coverage.run]
branch = true
source = ["starlette_dispatch"]
omit = ["tests/*", ".venv/*", ".git/*", "*/__main__.py", "examples"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError"
]

[tool.mypy]
files = ["starlette_dispatch", "examples", "tests"]
pretty = true
strict = true
show_error_context = true
show_column_numbers = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "8.0"
asyncio_mode = 'auto'
python_files = ["tests.py", "test_*.py", "*_tests.py"]
norecursedirs = [
    "node_modules", "frontend", "storage", "dist", ".git",
    "*/migrations/*", "*/static/*", "docs", ".venv"
]
addopts = "--tb=short -s --no-cov-on-fail"
testpaths = ["tests"]
filterwarnings = []

[tool.ruff]
exclude = [
    ".egg",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".tox",
    ".venv",
]
line-length = 120
indent-width = 4

[tool.ruff.lint]
fixable = ["ALL"]

[tool.ruff.format]
skip-magic-trailing-comma = false
