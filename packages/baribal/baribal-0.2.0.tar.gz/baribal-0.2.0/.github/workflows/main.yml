name: CI/CD Workflow
on:
  push:
    branches: 
      - main
      - dev
  pull_request:
    branches: 
      - main
      - dev
  release:
    types: [published]
  workflow_dispatch:  
    inputs:
      python-version:
        description: 'Python version to test'
        required: false
        default: '3.11'
        type: choice
        options:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Install dependencies
      run: |
        uv venv
        . .venv/bin/activate
        uv pip install -e .[dev]
    
    - name: Run linters
      run: |
        . .venv/bin/activate
        ruff check .
    
    - name: Run tests with coverage
      run: |
        . .venv/bin/activate
        pytest --cov=baribal --cov-report=xml
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  publish:
      needs: [test-and-lint]
      runs-on: ubuntu-latest
      permissions:
        id-token: write
        contents: write
      if: github.event_name == 'release' && github.event.action == 'published'
      
      steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
      
      - name: Build package
        run: |
          python -m build
      
      - name: Verify package
        run: |
          twine check dist/*
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true