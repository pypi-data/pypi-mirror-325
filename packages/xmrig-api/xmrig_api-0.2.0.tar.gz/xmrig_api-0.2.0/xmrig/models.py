from sqlalchemy import Column, Integer, String, Boolean, Float, JSON, DateTime
from sqlalchemy.ext.declarative import declarative_base
from datetime import datetime

Base = declarative_base()

class Summary(Base):
    __tablename__ = "summary"
    uid = Column(Integer, primary_key=True)
    miner_name = Column(String)
    timestamp = Column(DateTime, default=datetime.now)
    full_json = Column(JSON)
    id = Column(String)
    worker_id = Column(String)
    uptime = Column(Integer)
    restricted = Column(Boolean)
    resources = Column(JSON)
    resources_memory = Column(JSON)
    resources_memory_free = Column(Integer)
    resources_memory_total = Column(Integer)
    resources_memory_rsm = Column(Integer)
    resources_load_average = Column(JSON)
    resources_hardware_concurrency = Column(Integer)
    features = Column(JSON)
    results = Column(JSON)
    results_diff_current = Column(Integer)
    results_shares_good = Column(Integer)
    results_shares_total = Column(Integer)
    results_avg_time = Column(Integer)
    results_avg_time_ms = Column(Integer)
    results_hashes_total = Column(Integer)
    results_best = Column(JSON)
    algo = Column(String)
    connection = Column(JSON)
    connection_pool = Column(String)
    connection_ip = Column(String)
    connection_uptime = Column(Integer)
    connection_uptime_ms = Column(Integer)
    connection_ping = Column(Integer)
    connection_failures = Column(Integer)
    connection_tls = Column(JSON)
    connection_tls_fingerprint = Column(JSON)
    connection_algo = Column(String)
    connection_diff = Column(Integer)
    connection_accepted = Column(Integer)
    connection_rejected = Column(Integer)
    connection_avg_time = Column(Integer)
    connection_avg_time_ms = Column(Integer)
    connection_hashes_total = Column(Integer)
    version = Column(String)
    kind = Column(String)
    ua = Column(String)
    cpu = Column(JSON)
    cpu_brand = Column(String)
    cpu_family = Column(Integer)
    cpu_model = Column(Integer)
    cpu_stepping = Column(Integer)
    cpu_proc_info = Column(Integer)
    cpu_aes = Column(Boolean)
    cpu_avx2 = Column(Boolean)
    cpu_x64 = Column(Boolean)
    cpu_64_bit = Column(Boolean)
    cpu_l2 = Column(Integer)
    cpu_l3 = Column(Integer)
    cpu_cores = Column(Integer)
    cpu_threads = Column(Integer)
    cpu_packages = Column(Integer)
    cpu_nodes = Column(Integer)
    cpu_backend = Column(String)
    cpu_msr = Column(String)
    cpu_assembly = Column(String)
    cpu_arch = Column(String)
    cpu_flags = Column(JSON)
    donate_level = Column(Integer)
    paused = Column(Boolean)
    algorithms = Column(JSON)
    hashrate = Column(JSON)
    hashrate_total = Column(JSON)
    hashrate_highest = Column(Float)
    hugepages = Column(JSON)

class Config(Base):
    __tablename__ = "config"
    uid = Column(Integer, primary_key=True)
    miner_name = Column(String)
    timestamp = Column(DateTime, default=datetime.now)
    full_json = Column(JSON)
    api = Column(JSON)
    api_id = Column(String)
    api_worker_id = Column(String)
    http = Column(JSON)
    http_enabled = Column(Boolean)
    http_host = Column(String)
    http_port = Column(Integer)
    http_access_token = Column(String)
    http_restricted = Column(Boolean)
    autosave = Column(Boolean)
    background = Column(Boolean)
    colors = Column(Boolean)
    title = Column(JSON)
    randomx = Column(JSON)
    randomx_init = Column(Integer)
    randomx_init_avx2 = Column(Integer)
    randomx_mode = Column(String)
    randomx_1gb_pages = Column(Boolean)
    randomx_rdmsr = Column(Boolean)
    randomx_wrmsr = Column(JSON)
    randomx_cache_qos = Column(Boolean)
    randomx_numa = Column(Boolean)
    randomx_scratchpad_prefetch_mode = Column(Integer)
    cpu = Column(JSON)
    cpu_enabled = Column(Boolean)
    cpu_huge_pages = Column(JSON)
    cpu_huge_pages_jit = Column(Boolean)
    cpu_hw_aes = Column(Boolean)
    cpu_priority = Column(Integer)
    cpu_memory_pool = Column(JSON)
    cpu_yield = Column(Boolean)
    cpu_max_threads_hint = Column(Integer)
    cpu_asm = Column(JSON)
    cpu_argon2_impl = Column(String)
    opencl = Column(JSON)
    opencl_enabled = Column(Boolean)
    opencl_cache = Column(Boolean)
    opencl_loader = Column(String)
    opencl_platform = Column(JSON)
    opencl_adl = Column(Boolean)
    cuda = Column(JSON)
    cuda_enabled = Column(Boolean)
    cuda_loader = Column(String)
    cuda_nvml = Column(Boolean)
    donate_level = Column(Integer)
    donate_over_proxy = Column(Integer)
    log_file = Column(String)
    pools = Column(JSON)
    print_time = Column(Integer)
    health_print_time = Column(Integer)
    dmi = Column(Boolean)
    retries = Column(Integer)
    retry_pause = Column(Integer)
    syslog = Column(Boolean)
    tls = Column(JSON)
    tls_enabled = Column(Boolean)
    tls_protocols = Column(String)
    tls_cert = Column(String)
    tls_cert_key = Column(String)
    tls_ciphers = Column(String)
    tls_ciphersuites = Column(String)
    tls_dhparam = Column(String)
    dns = Column(JSON)
    dns_ipv6 = Column(Boolean)
    dns_ttl = Column(Integer)
    user_agent = Column(String)
    verbose = Column(Integer)
    watch = Column(Boolean)
    rebench_algo = Column(Boolean)
    bench_algo_time = Column(Integer)
    pause_on_battery = Column(Boolean)
    pause_on_active = Column(JSON)
    benchmark = Column(JSON)
    benchmark_size = Column(String)
    benchmark_algo = Column(String)
    benchmark_submit = Column(Boolean)
    benchmark_verify = Column(String)
    benchmark_seed = Column(String)
    benchmark_hash = Column(String)

class Backends(Base):
    __tablename__ = "backends"
    uid = Column(Integer, primary_key=True)
    miner_name = Column(String)
    timestamp = Column(DateTime, default=datetime.now)
    full_json = Column(JSON)
    cpu = Column(JSON)
    cpu_type = Column(String)
    cpu_enabled = Column(Boolean)
    cpu_algo = Column(String)
    cpu_profile = Column(String)
    cpu_hw_aes = Column(Boolean)
    cpu_priority = Column(Integer)
    cpu_msr = Column(Boolean)
    cpu_asm = Column(String)
    cpu_argon2_impl = Column(String)
    cpu_hugepages = Column(JSON)
    cpu_memory = Column(Integer)
    cpu_hashrate = Column(JSON)
    cpu_threads = Column(JSON)
    opencl = Column(JSON)
    opencl_type = Column(String)
    opencl_enabled = Column(Boolean)
    opencl_algo = Column(String)
    opencl_profile = Column(String)
    opencl_platform = Column(JSON)
    opencl_platform_index = Column(Integer)
    opencl_platform_profile = Column(String)
    opencl_platform_version = Column(String)
    opencl_platform_name = Column(String)
    opencl_platform_vendor = Column(String)
    opencl_platform_extensions = Column(String)
    opencl_hashrate = Column(JSON)
    opencl_threads = Column(JSON)
    cuda = Column(JSON)
    cuda_type = Column(String)
    cuda_enabled = Column(Boolean)
    cuda_algo = Column(String)
    cuda_profile = Column(String)
    cuda_versions = Column(JSON)
    cuda_versions_cuda_runtime = Column(String)
    cuda_versions_cuda_driver = Column(String)
    cuda_versions_plugin = Column(String)
    cuda_hashrate = Column(JSON)
    cuda_threads = Column(JSON)