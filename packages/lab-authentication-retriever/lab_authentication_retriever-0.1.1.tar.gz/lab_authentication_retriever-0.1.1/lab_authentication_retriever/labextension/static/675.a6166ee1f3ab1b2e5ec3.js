"use strict";(self.webpackChunklab_authentication_retriever=self.webpackChunklab_authentication_retriever||[]).push([[675],{675:(e,t,r)=>{r.r(t),r.d(t,{default:()=>i});var n=r(310),o=r(421);async function a(e="",t={}){const r=o.ServerConnection.makeSettings(),a=n.URLExt.join(r.baseUrl,"lab-authentication-retriever",e);let i;try{i=await o.ServerConnection.makeRequest(a,t,r)}catch(e){throw new o.ServerConnection.NetworkError(e)}let s=await i.text();if(s.length>0)try{s=JSON.parse(s)}catch(e){console.log("Not a JSON response body.",i)}if(!i.ok)throw new o.ServerConnection.ResponseError(i,s.message||s);return s}const i={id:"lab-authentication-retriever:plugin",description:"A JupyterLab extension. that interacts with qbraid core and gets authentication details for other front end extension.",autoStart:!0,activate:e=>{console.log("JupyterLab extension lab-authentication-retriever is activated!"),a("get-example").then((e=>{console.log(e)})).catch((e=>{console.error(`The lab_authentication_retriever server extension appears to be missing.\n${e}`)})),a("qbraid-config").then((e=>{console.log("[!] Server extension response for config",e)})).catch((e=>{console.error(`The lab_authentication_retriever server extension appears to be missing.\n${e}`)})),a("qbraid-disc-usage").then((e=>{console.log("[!] Server extension response for disc usage",e)})).catch((e=>{console.error(`The lab_authentication_retriever server extension appears to be missing.\n${e}`)}))}}}}]);