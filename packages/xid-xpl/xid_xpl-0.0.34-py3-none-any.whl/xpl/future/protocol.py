#--------------------------------------------------------------------------------
# 참조 모듈 목록.
#--------------------------------------------------------------------------------
from __future__ import annotations
from typing import Awaitable, Callable, Final, Generic, Iterable, Iterator, Optional, Sequence, Type, TypeVar, Tuple, Union
from typing import ItemsView, KeysView, ValuesView
from typing import Any, List, Dict, Set
from typing import cast, overload
from ..core import BaseClass
# from .task import Task


#------------------------------------------------------------------------
# 전역 상수 목록.
#------------------------------------------------------------------------
LINEFEED: str = "\n"
FILE_READTEXT: str = "rt"
FILE_READBINARY: str = "rb"
FILE_WRITETEXT: str = "wt"
FILE_WRITEBINARY: str = "wb"
UTF8: str = "utf-8"
TAB: str = "\t"


#------------------------------------------------------------------------
# 오브젝트 간 상호 의존을 피하기 위한 객체.
#------------------------------------------------------------------------
class Protocol(BaseClass):
	#------------------------------------------------------------------------
	# 멤버 변수 목록.
	#------------------------------------------------------------------------


	#------------------------------------------------------------------------
	# 초기화 라이프사이클 메서드.
	#------------------------------------------------------------------------
	def __init__(thisInstance) -> None:
		base = super()
		base.__init__()
		thisInstance.OnCreate()


	#------------------------------------------------------------------------
	# 파괴 라이프사이클 메서드.
	#------------------------------------------------------------------------
	def __del__(thisInstance) -> None:
		try:
			thisInstance.OnDestroy()
		except Exception as exception:
			raise


	#------------------------------------------------------------------------
	# 초기화 라이프사이클 메서드.
	#------------------------------------------------------------------------
	def OnCreate(thisInstance) -> None:
		pass
		

	#------------------------------------------------------------------------
	# 파괴 라이프사이클 메서드.
	#------------------------------------------------------------------------
	def OnDestroy(thisInstance) -> None:
		pass


	#------------------------------------------------------------------------
	# 시작됨.
	#------------------------------------------------------------------------
	def OnStart(thisInstance, task: "Task") -> None:
		return 0


	#------------------------------------------------------------------------
	# 종료됨.
	#------------------------------------------------------------------------
	def OnComplete(thisInstance, task: "Task", resultCode: int) -> None:
		return 0