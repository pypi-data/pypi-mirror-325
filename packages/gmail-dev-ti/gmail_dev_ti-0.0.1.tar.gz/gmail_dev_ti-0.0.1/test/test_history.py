# coding: utf-8

"""
    Gmail API

    The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gmail_dev_ti.models.history import History

class TestHistory(unittest.TestCase):
    """History unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> History:
        """Test History
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `History`
        """
        model = History()
        if include_optional:
            return History(
                id = '',
                labels_added = [
                    gmail_dev_ti.models.history_label_added.HistoryLabelAdded(
                        label_ids = [
                            ''
                            ], 
                        message = gmail_dev_ti.models.message.Message(
                            history_id = '', 
                            id = '', 
                            internal_date = '', 
                            payload = gmail_dev_ti.models.message_part.MessagePart(
                                body = gmail_dev_ti.models.message_part_body.MessagePartBody(
                                    attachment_id = '', 
                                    data = 'YQ==', 
                                    size = 56, ), 
                                filename = '', 
                                headers = [
                                    gmail_dev_ti.models.message_part_header.MessagePartHeader(
                                        name = '', 
                                        value = '', )
                                    ], 
                                mime_type = '', 
                                part_id = '', 
                                parts = [
                                    gmail_dev_ti.models.message_part.MessagePart(
                                        filename = '', 
                                        mime_type = '', 
                                        part_id = '', )
                                    ], ), 
                            raw = 'YQ==', 
                            size_estimate = 56, 
                            snippet = '', 
                            thread_id = '', ), )
                    ],
                labels_removed = [
                    gmail_dev_ti.models.history_label_removed.HistoryLabelRemoved(
                        label_ids = [
                            ''
                            ], 
                        message = gmail_dev_ti.models.message.Message(
                            history_id = '', 
                            id = '', 
                            internal_date = '', 
                            payload = gmail_dev_ti.models.message_part.MessagePart(
                                body = gmail_dev_ti.models.message_part_body.MessagePartBody(
                                    attachment_id = '', 
                                    data = 'YQ==', 
                                    size = 56, ), 
                                filename = '', 
                                headers = [
                                    gmail_dev_ti.models.message_part_header.MessagePartHeader(
                                        name = '', 
                                        value = '', )
                                    ], 
                                mime_type = '', 
                                part_id = '', 
                                parts = [
                                    gmail_dev_ti.models.message_part.MessagePart(
                                        filename = '', 
                                        mime_type = '', 
                                        part_id = '', )
                                    ], ), 
                            raw = 'YQ==', 
                            size_estimate = 56, 
                            snippet = '', 
                            thread_id = '', ), )
                    ],
                messages = [
                    gmail_dev_ti.models.message.Message(
                        history_id = '', 
                        id = '', 
                        internal_date = '', 
                        label_ids = [
                            ''
                            ], 
                        payload = gmail_dev_ti.models.message_part.MessagePart(
                            body = gmail_dev_ti.models.message_part_body.MessagePartBody(
                                attachment_id = '', 
                                data = 'YQ==', 
                                size = 56, ), 
                            filename = '', 
                            headers = [
                                gmail_dev_ti.models.message_part_header.MessagePartHeader(
                                    name = '', 
                                    value = '', )
                                ], 
                            mime_type = '', 
                            part_id = '', 
                            parts = [
                                gmail_dev_ti.models.message_part.MessagePart(
                                    filename = '', 
                                    mime_type = '', 
                                    part_id = '', )
                                ], ), 
                        raw = 'YQ==', 
                        size_estimate = 56, 
                        snippet = '', 
                        thread_id = '', )
                    ],
                messages_added = [
                    gmail_dev_ti.models.history_message_added.HistoryMessageAdded(
                        message = gmail_dev_ti.models.message.Message(
                            history_id = '', 
                            id = '', 
                            internal_date = '', 
                            label_ids = [
                                ''
                                ], 
                            payload = gmail_dev_ti.models.message_part.MessagePart(
                                body = gmail_dev_ti.models.message_part_body.MessagePartBody(
                                    attachment_id = '', 
                                    data = 'YQ==', 
                                    size = 56, ), 
                                filename = '', 
                                headers = [
                                    gmail_dev_ti.models.message_part_header.MessagePartHeader(
                                        name = '', 
                                        value = '', )
                                    ], 
                                mime_type = '', 
                                part_id = '', 
                                parts = [
                                    gmail_dev_ti.models.message_part.MessagePart(
                                        filename = '', 
                                        mime_type = '', 
                                        part_id = '', )
                                    ], ), 
                            raw = 'YQ==', 
                            size_estimate = 56, 
                            snippet = '', 
                            thread_id = '', ), )
                    ],
                messages_deleted = [
                    gmail_dev_ti.models.history_message_deleted.HistoryMessageDeleted(
                        message = gmail_dev_ti.models.message.Message(
                            history_id = '', 
                            id = '', 
                            internal_date = '', 
                            label_ids = [
                                ''
                                ], 
                            payload = gmail_dev_ti.models.message_part.MessagePart(
                                body = gmail_dev_ti.models.message_part_body.MessagePartBody(
                                    attachment_id = '', 
                                    data = 'YQ==', 
                                    size = 56, ), 
                                filename = '', 
                                headers = [
                                    gmail_dev_ti.models.message_part_header.MessagePartHeader(
                                        name = '', 
                                        value = '', )
                                    ], 
                                mime_type = '', 
                                part_id = '', 
                                parts = [
                                    gmail_dev_ti.models.message_part.MessagePart(
                                        filename = '', 
                                        mime_type = '', 
                                        part_id = '', )
                                    ], ), 
                            raw = 'YQ==', 
                            size_estimate = 56, 
                            snippet = '', 
                            thread_id = '', ), )
                    ]
            )
        else:
            return History(
        )
        """

    def testHistory(self):
        """Test History"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
