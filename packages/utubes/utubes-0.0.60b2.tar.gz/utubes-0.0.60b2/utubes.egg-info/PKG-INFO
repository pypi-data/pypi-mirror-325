Metadata-Version: 2.2
Name: utubes
Version: 0.0.60b2
Summary: ã…¤
Keywords: Ytdlp,Utube,Youtube
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Localization
Classifier: Topic :: Software Development :: User Interfaces
Classifier: Topic :: Software Development :: Version Control
Requires-Python: ~=3.10
Description-Content-Type: text/markdown
Requires-Dist: yt-dlp
Requires-Dist: oxgram
Requires-Dist: requests
Requires-Dist: instaloader
Requires-Dist: beautifulsoup4
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

<p align="center">
 ðŸ“¦ <a href="https://pypi.org/project/utubes" style="text-decoration:none;">UTUBES</a>
</p>


## USAGE
```python
import asyncio
from Utubes.functions import DownloadER

async def main():
    filelink = "https://example.utubes"
    commands = {"quiet": True, "no_warnings": True}
    metadata_result = await DownloadER.metadata(filelink, commands)
    extinfos_result = await DownloadER.extracts(filelink, commands)
    filename_result = await DownloadER.filename(filelink, commands)
    print(metadata_result.result) # metadata_result.errors
    print(extinfos_result.result) # extinfos_result.errors
    print(filename_result.result) # filename_result.errors
    # DO SOMETHING WITH THE RESULTS

asyncio.run(main())
```
