[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pycnpj-cpf"
description = "CNPJ and CPF validator"
authors = [
    {name = "Carlos Moreno", email = "omorenodovale@gmail.com"},
]
version = "0.2.2"
requires-python = ">=3.8"
license = {file = "LICENSE"}
readme = "README.md"
dependencies = [
    "click",
    "rich",
    "rich-click",
]

[project.urls]
repository = "https://github.com/carlos-moreno/pycnpj-cpf"

[project.scripts]
pycnpj-cpf = "pycnpj_cpf.__main__:main"

[dependency-groups]
dev = [
    "pytest",
    "pytest-cov",
    "ruff",
    "taskipy",
    "bandit",
]

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['C90', 'I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.bandit]
exclude_dirs = [".venv"]
skips = ["B101"]

[tool.taskipy.tasks]
lint = 'uv run ruff check --fix pycnpj_cpf tests'
format = 'uv run ruff format pycnpj_cpf tests'
security = 'uv run bandit -c pyproject.toml -r .'
pre_test = 'task lint'
test = """
    uv run pytest --cov=pycnpj_cpf -vv
    uv run coverage xml
    uv run coverage html
    """
clean = """
    find . -depth -maxdepth 5 -name '*.pyc' -exec rm -rf {} \\;
	find . -depth -maxdepth 5 -name '__pycache__' -exec rm -rf {} \\;
	find . -depth -maxdepth 5 -name 'Thumbs.db' -exec rm -rf {} \\;
	find . -depth -maxdepth 5 -name '*~' -exec rm -rf {} \\;
    rm -rf .pytest_cache
    rm -rf .ruff_cache
    rm -rf build
    rm -rf dist
    rm -rf pycnpj_cpf.egg-info
    rm -rf htmlcov
    rm -rf coverage.xml
    rm -rf .coverage
    """
build = 'uv build --wheel'
