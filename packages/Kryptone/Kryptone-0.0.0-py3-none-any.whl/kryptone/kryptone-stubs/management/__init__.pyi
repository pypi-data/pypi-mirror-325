from collections import OrderedDict
from collections.abc import Iterator
from typing import Any, Tuple

from kryptone.management.base import ProjectCommand

def collect_commands() -> Iterator[str]: ...


def load_command_class(name: str) -> ProjectCommand: ...


class Utility:
    commands_registry: OrderedDict[str, ProjectCommand] = ...

    def __init__(self) -> None: ...

    def _parse_incoming_commands(self, args: list) -> Tuple[Any, list[str]]: ...
    def _find_similar_command(self, name: str) -> str: ...

    def call_command(self, name: list) -> ProjectCommand: ...


def execute_command_inline(argv=None) -> None: ...
