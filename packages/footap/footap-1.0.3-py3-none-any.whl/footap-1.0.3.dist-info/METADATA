Metadata-Version: 2.2
Name: footap
Version: 1.0.3
Summary: Package de détection et suivi de jonglage de football
Author: Dims
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Multimedia :: Video :: Capture
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: opencv-contrib-python>=4.5.0
Requires-Dist: mediapipe>=0.8.0
Requires-Dist: numpy>=1.19.0
Requires-Dist: ultralytics>=8.0.0
Requires-Dist: Pillow>=8.0.0
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# FootAP

FootAP (FOOTball Analysis Package) est un package Python pour analyser les touches de balle dans une vidÃ©o de football. Il utilise YOLO pour la dÃ©tection de balle et MediaPipe pour la dÃ©tection des pieds.

## Installation

```bash
pip install footap
```

## Utilisation

La fonction `analyze_ball_touch` ne nÃ©cessite qu'un seul paramÃ¨tre obligatoire : le chemin de la vidÃ©o.

### Utilisation minimale (un seul paramÃ¨tre)
```python
from footap import analyze_ball_touch

# Seul le chemin de la vidÃ©o est obligatoire
analyze_ball_touch("video.mp4")

# ou avec le nom du paramÃ¨tre
analyze_ball_touch(input_video_path="video.mp4")
```

Cette utilisation simple va :
- Analyser la vidÃ©o en mode silencieux
- GÃ©nÃ©rer un fichier de rÃ©sultats (video_results.txt)

### ParamÃ¨tres optionnels disponibles
```python
analyze_ball_touch(
    input_video_path="video.mp4",
    # Tous ces paramÃ¨tres sont optionnels :
    display_processing=True,    # Pour voir l'analyse en temps rÃ©el
    generate_video=True,        # Pour crÃ©er une vidÃ©o avec annotations
    video_orientation=90        # Pour pivoter la vidÃ©o si nÃ©cessaire
)
```

## RÃ©sultats

Le programme gÃ©nÃ¨re automatiquement :
1. Un fichier texte contenant :
   - Le nombre de touches pour chaque pied
   - La sÃ©quence chronologique des touches

2. Une vidÃ©o annotÃ©e (si generate_video=True) montrant :
   - La dÃ©tection de la balle
   - La dÃ©tection des pieds
   - Le comptage en temps rÃ©el

## DÃ©pendances

- OpenCV (opencv-python, opencv-contrib-python)
- MediaPipe
- NumPy
- Ultralytics (YOLO)
- Pillow

## Licence

Ce projet est sous licence MIT.
