import{c as r}from"./index.BlfIwkkp.js";const j=async(e="",i=!1)=>{let o=null;const n=await fetch(`${r}/api/models${i?"/base":""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(o=a,console.log(a),null));if(o)throw o;return(n==null?void 0:n.data)??[]},g=async(e,i)=>{let o=null;const n=await fetch(`${r}/api/chat/completed`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(i)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o=t,null));if(o)throw o;return n},m=async(e,i,o)=>{let n=null;const t=await fetch(`${r}/api/chat/actions/${i}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(o)}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?n=a.detail:n=a,null));if(n)throw n;return t},$=async(e,i)=>{let o=null;const n=await fetch(`${r}/api/tasks/stop/${i}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o=t,null));if(o)throw o;return n},T=async(e="")=>{let i=null;const o=await fetch(`${r}/api/v1/tasks/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return o},S=async(e,i)=>{let o=null;const n=await fetch(`${r}/api/v1/tasks/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(i)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o=t,null));if(o)throw o;return n},A=async(e="",i,o,n)=>{var s,c;let t=null;const a=await fetch(`${r}/api/v1/tasks/tags/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,messages:o,...n&&{chat_id:n}})}).then(async l=>{if(!l.ok)throw await l.json();return l.json()}).catch(l=>(console.log(l),"detail"in l&&(t=l.detail),null));if(t)throw t;try{const h=(((c=(s=a==null?void 0:a.choices[0])==null?void 0:s.message)==null?void 0:c.content)??"").replace(/['‘’`]/g,'"'),d=h.indexOf("{"),p=h.lastIndexOf("}");if(d!==-1&&p!==-1){const f=h.substring(d,p+1),u=JSON.parse(f);return u&&u.tags?Array.isArray(u.tags)?u.tags:[]:[]}return[]}catch(l){return console.error("Failed to parse response: ",l),[]}},C=async(e="",i,o,n)=>{var c,l;let t=null;const a=await fetch(`${r}/api/v1/tasks/emoji/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,prompt:o,...n&&{chat_id:n}})}).then(async h=>{if(!h.ok)throw await h.json();return h.json()}).catch(h=>(console.log(h),"detail"in h&&(t=h.detail),null));if(t)throw t;const s=((l=(c=a==null?void 0:a.choices[0])==null?void 0:c.message)==null?void 0:l.content.replace(/["']/g,""))??null;return s&&new RegExp("\\p{Extended_Pictographic}","u").test(s)?s.match(new RegExp("\\p{Extended_Pictographic}","gu"))[0]:null},P=async(e="",i,o,n,t="search query")=>{var h,d;const a=new AbortController;let s=null;const c=await fetch(`${r}/api/v1/tasks/auto/completions`,{signal:a.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,prompt:o,...n&&{messages:n},type:t,stream:!1})}).then(async p=>{if(!p.ok)throw await p.json();return p.json()}).catch(p=>(console.log(p),"detail"in p&&(s=p.detail),null));if(s)throw s;const l=((d=(h=c==null?void 0:c.choices[0])==null?void 0:h.message)==null?void 0:d.content)??"";try{const p=l.indexOf("{"),f=l.lastIndexOf("}");if(p!==-1&&f!==-1){const u=l.substring(p,f+1),w=JSON.parse(u);return w&&w.text?w.text:""}return l}catch(p){return console.error("Failed to parse response: ",p),l}},v=async(e="",i,o,n)=>{const t=new AbortController;let a=null;const s=await fetch(`${r}/api/v1/tasks/moa/completions`,{signal:t.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,prompt:o,responses:n,stream:!0})}).catch(c=>(console.log(c),a=c,null));if(a)throw a;return[s,t]},O=async(e="")=>{let i=null;const o=await fetch(`${r}/api/v1/pipelines/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),i=t,null));if(i)throw i;return(o==null?void 0:o.data)??[]},k=async(e,i,o)=>{let n=null;const t=new FormData;t.append("file",i),t.append("urlIdx",o);const a=await fetch(`${r}/api/v1/pipelines/upload`,{method:"POST",headers:{...e&&{authorization:`Bearer ${e}`}},body:t}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),"detail"in s?n=s.detail:n=s,null));if(n)throw n;return a},B=async(e,i,o)=>{let n=null;const t=await fetch(`${r}/api/v1/pipelines/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({url:i,urlIdx:o})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?n=a.detail:n=a,null));if(n)throw n;return t},b=async(e,i,o)=>{let n=null;const t=await fetch(`${r}/api/v1/pipelines/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({id:i,urlIdx:o})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?n=a.detail:n=a,null));if(n)throw n;return t},z=async(e,i)=>{let o=null;const n=new URLSearchParams;i!==void 0&&n.append("urlIdx",i);const t=await fetch(`${r}/api/v1/pipelines/?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),o=s,null));if(o)throw o;return(t==null?void 0:t.data)??[]},E=async(e,i,o)=>{let n=null;const t=new URLSearchParams;o!==void 0&&t.append("urlIdx",o);const a=await fetch(`${r}/api/v1/pipelines/${i}/valves?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return a},x=async(e,i,o)=>{let n=null;const t=new URLSearchParams;o!==void 0&&t.append("urlIdx",o);const a=await fetch(`${r}/api/v1/pipelines/${i}/valves/spec?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return a},J=async(e="",i,o,n)=>{let t=null;const a=new URLSearchParams;n!==void 0&&a.append("urlIdx",n);const s=await fetch(`${r}/api/v1/pipelines/${i}/valves/update?${a.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(o)}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.log(c),"detail"in c?t=c.detail:t=c,null));if(t)throw t;return s},N=async()=>{let e=null;const i=await fetch(`${r}/api/config`,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o,null));if(e)throw e;return i},G=async()=>{let e=null;const i=await fetch(`${r}/api/changelog`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o,null));if(e)throw e;return i},U=async e=>{let i=null;const o=await fetch(`${r}/api/version/updates`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return o},I=async e=>{let i=null;const o=await fetch(`${r}/api/webhook`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return o.url},R=async(e,i)=>{let o=null;const n=await fetch(`${r}/api/webhook`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({url:i})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t,null));if(o)throw o;return n.url};export{N as a,A as b,I as c,O as d,J as e,x as f,j as g,E as h,z as i,B as j,b as k,k as l,T as m,S as n,U as o,G as p,P as q,C as r,m as s,$ as t,R as u,v,g as w};
//# sourceMappingURL=index.dby4y7SL.js.map
