[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lusos"
dynamic = ["version"]
authors = [{name = "smknaake", email = "bas.knaake@deltares.nl"}]
description = "Spatial calculation of GHG emissions from SOMERS modelling results"
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "LULUCF",
    "SOMERS",
	"Greenhouse gas emission",
	"Basis Registratie Grootschalige Topografie",
    "BRO Bodemkaart",
    "Lasso",
	"Deltares", 
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
	"Topic :: Scientific/Engineering",
	"License :: OSI Approved :: MIT License",
	"Operating System :: OS Independent",
	"Programming Language :: Python",
	"Programming Language :: Python :: 3.12",
]
requires-python = ">=3.12,<3.13"
dependencies = [
	"dask",
	"fiona",
	"geopandas",
	"h5netcdf",
	"mapbox-earcut",
	"netcdf4",
	"numba<0.60.0",
	"numba_celltree",
	"numpy",
	"pandas",
	"pyarrow",
	"rioxarray",
	"xarray",
	"xugrid",
]

[project.urls]
Homepage = "https://github.com/Deltares-research/lusos"
Repository = "https://github.com/Deltares-research/lusos"
Issues = "https://github.com/Deltares-research/lusos/issues"

[tool.hatch.version]
path = "lusos/__init__.py"

[tool.hatch.build.targets.sdist]
only-include = ["lusos", "tests"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
lusos = { path = ".", editable = true }

[tool.pixi.tasks]
test = "NUMBA_DISABLE_JIT=1 pytest --cov=lusos --cov-report xml --cov-report term"
test_local = "NUMBA_DISABLE_JIT=1 pytest -v --cov"
format = "black ."
lint = "ruff check --fix ./lusos"
build_docs = "sphinx-build -b html docs ./docs/build"
rm_jupyter = "rm -r ./docs/jupyter_execute"
rm_build = "rm -r ./docs/build"
rm_generated = "rm -r ./docs/api_reference/generated"
rebuild_docs = { depends-on = ["rm_jupyter", "rm_build", "rm_generated", "build_docs"] }
pypi-publish = "rm --recursive --force dist && python -m build && twine check dist/* && twine upload dist/*"

[tool.pixi.dependencies]
python = ">=3.12,<3.13"
pip = "*"
numpy = "*"
pandas = "*"
geopandas = "*"
shapely = "*"
xarray = "*"
rioxarray = "*"
fiona = "*"
matplotlib = "*"
pyarrow = "*"
pytest = "*"
dask = "*"
xugrid = "*"
mapbox_earcut = "*"
numba = "<0.60.0"
numba_celltree = "*"
netcdf4 = "*"
h5netcdf = "*"
more-itertools = "*"
pytest-cov = "*"
black = "*"
ruff = "*"
sphinx = "*"
pydata-sphinx-theme = "*"
sphinx-design = "*"
myst-nb = "*"
python-build = "*"
twine = "*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.environments]
default = { features = ["py312"], solve-group = "py312" }
py312 = { features = ["py312"], solve-group = "py312" }

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
markers = [
	"unittest: test of single component",
	"integrationtest: test of multiple components",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
]

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["F", "E", "W", "N", "I001"]
ignore = ["F401", "E501", "F811"]
unfixable = ["F401"]
pydocstyle.convention = "numpy"
