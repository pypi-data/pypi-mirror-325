from enaml.workbench.api import Extension, PluginManifest

from psi.controller.engines.nidaq import (NIDAQEngine,
                                          NIDAQHardwareAIChannel,
                                          NIDAQHardwareAOChannel,
                                          NIDAQSoftwareDOChannel)

from psi.controller.api import (CalibratedInput, Downsample, Edges, IIRFilter,
                                Threshold, Trigger, Toggle)


enamldef IRChannel(NIDAQHardwareAIChannel): irc:
    unit = 'V'
    start_trigger = 'ao/StartTrigger'
    fs = 100e3
    expected_range = (-10, 10)
    dtype = 'float64'
    terminal_mode = 'differential'

    IIRFilter: iir:
        name << irc.name + '_filtered'
        f_lowpass = 25
        ftype = 'butter'
        btype = 'lowpass'

        Downsample: ds:
            name << irc.name + '_analog'
            q = 1000
            Threshold: th:
                threshold = 2.5
                Edges: e:
                    name << irc.name + '_digital'
                    debounce = 2




enamldef IOManifest(PluginManifest): manifest:
    '''
    This defines the hardware connections that are specific to the LBHB Bobcat
    computer for the appetitive experiment.
    '''

    Extension:
        id = 'backend'
        point = 'psi.controller.io'

        NIDAQEngine: engine:
            name = 'NI'
            master_clock = True

            # Since we're using an AnalogThreshold input to detect nose pokes
            # and reward contact, we want a fairly short AI monitor period to
            # ensure that we detect these events quickly.
            hw_ai_monitor_period = 0.025
            hw_ao_monitor_period = 1

            NIDAQHardwareAOChannel:
                label = 'Speaker'
                name = 'speaker'
                channel = 'Dev1/ao0'
                fs = 100e3
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'RSE'
                calibration_user_editable = True

            NIDAQSoftwareDOChannel:
                name = 'food_dispense'
                channel = 'Dev1/port0/line0'

                Trigger:
                    # This is a required output for the food dispenser. The
                    # plugin will look for this output by name. If not present,
                    # the food dispenser plugin will not work!
                    label = 'Food dispense'
                    name = 'food_dispense_trigger'
                    duration = 0.1

            NIDAQSoftwareDOChannel:
                name = 'room_light'
                channel = 'Dev1/port0/line1'

                Toggle:
                    # This is a required output for the room light. The plugin
                    # will look for this output by name. If not present, the
                    # room light plugin will not work!
                    name = 'room_light_toggle'
                    label = 'Room light'

            IRChannel:
                label = 'Nose poke IR'
                name = 'nose_poke'
                channel = 'Dev1/ai0'

            IRChannel:
                label = 'Reward IR'
                name = 'reward_contact'
                channel = 'Dev1/ai1'
