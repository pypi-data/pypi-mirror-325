import multiprocessing

__all__ = ['RtspVideoWriter']

class RtspVideoWriter:
    def __init__(self, port: int = 5000, num_streams: int = 1, image_width: int = 640, image_height: int = 480, fps: int = 30, **kwargs) -> None: ...
    def start(self): ...
    def write_frame(self, frame, stream_idx: int = 0) -> None: ...
    def close(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class _SrcPipeline:
    def __init__(self, image_width, image_height, idx, fps, tx_queue, loop) -> None: ...
    @property
    def port(self): ...
    @property
    def mount(self): ...
    def start(self): ...
    def stop(self) -> None: ...

class _RtspServer:
    def __init__(self, port) -> None: ...
    def start(self): ...
    def add_stream(self, port, mount) -> None: ...

class _ServerProcess(multiprocessing.Process):
    def __init__(self, port, num_streams, tx_queues, image_width, image_height, fps, error_queue, *args, **kwargs) -> None: ...
    def run(self) -> None: ...
