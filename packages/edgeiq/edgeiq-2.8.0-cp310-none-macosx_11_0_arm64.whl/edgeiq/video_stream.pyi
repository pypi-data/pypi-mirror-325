import numpy as np
import threading
from edgeiq._utils import gen_logger as gen_logger
from enum import Enum
from typing import Any

class CameraFailedToStart(RuntimeError):
    def __init__(self, cmd: str, backend: str, append: str = '') -> None: ...

class CameraConnectionLost(RuntimeError):
    def __init__(self) -> None: ...

class BaseVideoStream:
    def __init__(self, cmd: str | int, backend: int) -> None: ...
    def start(self): ...
    @property
    def fps(self) -> float: ...
    def read(self) -> np.ndarray: ...
    def read_non_blocking(self) -> np.ndarray | None: ...
    def stop(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...

class WebcamVideoStream(BaseVideoStream):
    def __init__(self, cam: int = 0) -> None: ...

class GStreamerVideoStream(BaseVideoStream):
    def __init__(self, cam: int = 0, display_width: int = 640, display_height: int = 480, framerate: int = 30) -> None: ...

class GStreamerCustomVideoStream(BaseVideoStream):
    def __init__(self, cmd: str) -> None: ...

class TestVideoStream(GStreamerCustomVideoStream):
    def __init__(self, fps: int = 30, display_width: int = 640, display_height: int = 480) -> None: ...

class FrameRotation(Enum):
    ROTATE_NONE = 0
    ROTATE_90 = 90
    ROTATE_180 = 180

class JetsonCameraMode(Enum):
    IMX219_3264x2468_21_0 = 0
    IMX219_3264x1848_28_1 = 1
    IMX219_1920x1080_30_2 = 2
    IMX219_1640x1232_30_3 = 3
    IMX477_4032x3040_30_0 = 4
    IMX477_1920x1080_60_1 = 5
    IMX477_2560x1440_40_3 = 7

class JetsonVideoStream(BaseVideoStream):
    def __init__(self, cam: int = 0, rotation: FrameRotation = ..., camera_mode: JetsonCameraMode = ..., display_width: int = 640, display_height: int = 480) -> None: ...

class IPVideoStream(BaseVideoStream):
    def __init__(self, url: str) -> None: ...

class NoMoreFrames(RuntimeError):
    def __init__(self) -> None: ...

class _FileVideoStreamThread(threading.Thread):
    def __init__(self, stream: Any, queue_size: int, *args, **kwargs) -> None: ...
    @property
    def more(self) -> bool: ...
    def read(self) -> np.ndarray: ...
    def stop(self) -> None: ...
    def run(self) -> None: ...

class _RealtimeFileVideoStreamThread(threading.Thread):
    def __init__(self, stream: Any, fps: int, *args, **kwargs) -> None: ...
    @property
    def more(self) -> bool: ...
    def read(self) -> np.ndarray: ...
    def stop(self) -> None: ...
    def run(self) -> None: ...

class FileVideoStream:
    def __init__(self, path: str, queue_size: int = 128, play_realtime: bool = False, fps: int | None = None) -> None: ...
    @property
    def fps(self) -> int | None: ...
    def start(self): ...
    def read(self) -> np.ndarray: ...
    def more(self) -> bool: ...
    def stop(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type: type[BaseException] | None, value: BaseException | None, traceback: types.TracebackType | None) -> None: ...
    def __del__(self) -> None: ...
