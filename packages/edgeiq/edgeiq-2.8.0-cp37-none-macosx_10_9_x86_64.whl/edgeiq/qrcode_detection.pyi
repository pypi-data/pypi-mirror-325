import numpy as np
from _typeshed import Incomplete
from edgeiq._constants import SupportedPurposes as SupportedPurposes
from edgeiq._production_client import PRODUCTION_CLIENT as PRODUCTION_CLIENT
from edgeiq.tools import to_json_serializable as to_json_serializable
from typing import Any, List, Optional

class QRCodeDetectionPrediction:
    def __init__(self, box: np.ndarray, info: str) -> None: ...
    def __eq__(self, other) -> bool: ...
    @property
    def box(self) -> np.ndarray: ...
    @property
    def info(self) -> str: ...

class QRCodeDetectionResults:
    def __init__(self, predictions: List[QRCodeDetectionPrediction], image: Optional[np.ndarray]) -> None: ...
    def __eq__(self, other) -> bool: ...
    @property
    def predictions(self) -> List[QRCodeDetectionPrediction]: ...
    @property
    def image(self) -> Optional[np.ndarray]: ...
    def markup_image(self) -> Optional[np.ndarray]: ...

class QRCodeDetection:
    qrcode_reader: Incomplete
    def __init__(self) -> None: ...
    def localize_decode(self, image: np.ndarray) -> QRCodeDetectionResults: ...
    def publish_analytics(self, results: QRCodeDetectionResults, tag: Any = ..., **kwargs): ...
