import numpy as np
import queue
import threading
from _typeshed import Incomplete
from edgeiq._utils import gen_logger as gen_logger
from enum import Enum
from typing import Any, Callable, Optional, Tuple

class VideoWriter:
    output_path: Incomplete
    fps: Incomplete
    color: Incomplete
    fourcc: Incomplete
    h: Incomplete
    w: Incomplete
    writer: Incomplete
    chunk_duration: Incomplete
    chunk_count: int
    output_dir: Incomplete
    base_filename: Incomplete
    video_extension: Incomplete
    def __init__(self, output_path: str = ..., fps: int = ..., color: bool = ..., codec: str = ..., chunk_duration_s: Optional[int] = ...) -> None: ...
    def __del__(self) -> None: ...
    def write_frame(self, frame: np.ndarray): ...
    def close(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type, value, traceback) -> None: ...

class EventVideoWriterState(Enum):
    IDLE: str
    RECORDING: str
    POST_ROLL: str

class _EventVideoWriterThread(threading.Thread):
    def __init__(self, output_path: str, fps: int, color: bool, codec: str, queue: queue.Queue, callback_function: Optional[Callable[..., None]] = ..., callback_args: Tuple[Any, ...] = ..., *args, **kwargs) -> None: ...
    def run(self) -> None: ...

class EventVideoWriter:
    def __init__(self, pre_roll: int = ..., post_roll: int = ..., fps: int = ..., color: bool = ..., codec: str = ...) -> None: ...
    @property
    def state(self) -> EventVideoWriterState: ...
    def update(self, frame: np.ndarray): ...
    def start_event(self, output_path: str, callback_function: Optional[Callable[..., None]] = ..., callback_args=...): ...
    def finish_event(self) -> None: ...
    def close(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type, value, traceback) -> None: ...

class GStreamerCustomVideoWriter:
    def __init__(self, cmd: str, fps: int = ..., color: bool = ...) -> None: ...
    def write_frame(self, frame: np.ndarray): ...
    def close(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, type, value, traceback) -> None: ...
