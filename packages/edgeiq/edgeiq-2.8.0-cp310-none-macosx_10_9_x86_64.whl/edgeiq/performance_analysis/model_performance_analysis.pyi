from .parsers import parse_cvat_annotations as parse_cvat_annotations
from _typeshed import Incomplete
from edgeiq.object_detection import ObjectDetectionResults as ObjectDetectionResults

class ModelPerformanceAnalyzer:
    def __init__(self, ground_truth_path, start_frame: int = 0, end_frame: Incomplete | None = None) -> None: ...
    model_predictions: Incomplete
    def set_results(self, results) -> None: ...
    def get_detections_per_object(self, iou_threshold: float = 0.01): ...
    def get_iou_distribution(self, iou_threshold: float = 0.01, bins: int = 10): ...
    def get_overlap_distribution(self, iou_threshold: float = 0.01, bins: int = 10): ...
    def get_missed_detections(self, iou_threshold: float = 0.01): ...
    def get_class_based_stats(self, iou_threshold: float = 0.01): ...
    def write_analysis_output(self, output_dir: str = 'output_data', filename_suffix: str = '', iou_threshold: float = 0.01) -> None: ...
