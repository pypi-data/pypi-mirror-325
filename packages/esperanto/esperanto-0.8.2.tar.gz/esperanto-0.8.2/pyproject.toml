[project]
name = "esperanto"
version = "0.8.2"
description = "A unified interface for various AI model providers"
authors = [
    { name = "LUIS NOVO", email = "lfnovo@gmail.com" }
]
readme = "README.pypi.md"
requires-python = ">=3.10,<3.14"
license = { text = "MIT" }
keywords = ["ai", "llm", "text-to-speech", "speech-to-text", "openai", "anthropic", "google", "elevenlabs"]
urls.repository = "https://github.com/lfnovo/esperanto"
urls.homepage = "https://github.com/lfnovo/esperanto"
urls.documentation = "https://github.com/lfnovo/esperanto#readme"

dependencies = [
    "python-dotenv>=1.0.1",
]

[project.optional-dependencies]
openai = [
    "openai>=1.55.1",
    "langchain-openai>=0.2.9",
    "langchain>=0.3.8",
    "langchain-core>=0.3.29"
]
anthropic = [
    "anthropic>=0.39.0",
    "langchain-anthropic>=0.3.0",
    "langchain>=0.3.8",
    "langchain-core>=0.3.29"
]
google = [
    "google-generativeai>=0.8.3",
    "langchain-google-genai>=2.0.7",
    "langchain>=0.3.8",
    "langchain-core>=0.3.29",
    "google-cloud-texttospeech>=2.14.0",
]
vertex = ["vertexai>=1.71.1", "google-generativeai>=0.8.3",]
groq = [
    "groq>=0.12.0",
    "langchain-groq>=0.2.1",
    "langchain>=0.3.8",
    "langchain-core>=0.3.29"
]
ollama = [
    "langchain>=0.3.8",
    "langchain-ollama>=0.2.0",
    "ollama>=0.4.1",
    "langchain-core>=0.3.29"
]
elevenlabs = ["elevenlabs>=0.3.0"]

all = [
    "openai>=1.55.1",
    "langchain-openai>=0.2.9",
    "anthropic>=0.39.0",
    "langchain-anthropic>=0.3.0",
    "google-generativeai>=0.8.3",
    "langchain-google-genai>=2.0.7",
    "vertexai>=1.71.1",
    "langchain-ollama>=0.2.0",
    "ollama>=0.4.1",
    "groq>=0.12.0",
    "langchain-groq>=0.2.1",
    "langchain>=0.3.8",
    "langchain-core>=0.3.29",
    "elevenlabs>=0.3.0",
    "google-cloud-texttospeech>=2.14.0",
]

dev = [
    "ipykernel>=6.29.5",
    "ruff>=0.5.5",
    "mypy>=1.11.1",
    "types-requests>=2.32.0.20241016",
    "ipywidgets>=8.1.5",
    "pytest>=8.3.3",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=6.0.0",
    "build",
    "twine",
]

[build-system]
requires = ["hatchling", "pip"]
build-backend = "hatchling.build"

[tool.setuptools]
package-dir = {"esperanto" = "src/esperanto"}

# [tool.hatch.build.targets.wheel]
# packages = ["esperanto"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=esperanto --cov-report=term-missing"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"]

[tool.isort]
profile = "black"
line-length = 88

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "ruff>=0.8.4",
    "mypy>=1.14.1",

]
