import{d as h,g as B,W as g,I as C,ae as p,l as e,c as w,i as c,a as x,j as P,u as I,o as V,k as s,cv as E,cw as N,Y as S,cr as T,cp as U,P as b,bk as W}from"./index-qaIncb5u.js";import{u as j}from"./usePageTitle-BSROX4uK.js";const R=h({__name:"BlockEdit",async setup(A){let t,l;const n=B(),u=I(),r=g("blockDocumentId"),o=([t,l]=C(()=>n.blockDocuments.getBlockDocument(r.value)),t=await t,l(),t),{blockType:i,blockSchema:_}=o,d=p(o.data),m=p(o.name);function f(k){n.blockDocuments.updateBlockDocument(o.id,k).then(()=>{b("Block updated successfully","success"),u.push(W.block(r.value))}).catch(a=>{b("Failed to update block","error"),console.error(a)})}function y(){u.back()}return j(`Edit Block: ${m.value}`),(k,a)=>{const v=P("p-layout-default");return e(o)?(V(),w(v,{key:0,class:"block-edit"},{header:c(()=>[s(e(E),{"block-document":e(o)},null,8,["block-document"])]),default:c(()=>[s(e(U),{"block-type":e(i)},{default:c(()=>[s(e(N),S({data:d.value,"onUpdate:data":a[0]||(a[0]=D=>d.value=D)},{name:m.value,blockSchema:e(_)},T({submit:f,cancel:y})),null,16,["data"])]),_:1},8,["block-type"])]),_:1})):x("",!0)}}});export{R as default};
//# sourceMappingURL=BlockEdit-DbK7JOPF.js.map
