import{d as x,V as y,W as b,I as w,f as g,c as h,i as a,j as k,u as v,o as C,k as u,l as e,O as P,D as r,A as V,Z as I,P as d,J as B}from"./index-qaIncb5u.js";import{_ as D}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-Bosk4V6b.js";import{u as E}from"./usePageTitle-BSROX4uK.js";import{u as N}from"./usePrefectApi-B1IXIQTQ.js";import"./mapper-BE3CecBu.js";import"./api-CXfC_4VD.js";const z=x({__name:"AutomationEdit",async setup(O){let o,m;const i=N(),c=y(),_=v(),p=b("automationId"),s=([o,m]=w(()=>i.automations.getAutomation(p.value)),o=await o,m(),o);E(`Edit Automation: ${s.name}`);const f=g(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function A(l){try{await i.automations.updateAutomation(p.value,l),d(r.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=B(t,r.error.automationUpdate);d(n,"error",{timeout:!1})}}return(l,t)=>{const n=k("p-layout-default");return C(),h(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(I),{crumbs:f.value},{actions:a(()=>[u(e(P),{to:e(r).docs.automations},{default:a(()=>t[0]||(t[0]=[V(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(D,{automation:e(s),editing:"",onSubmit:A},null,8,["automation"])]),_:1})}}});export{z as default};
//# sourceMappingURL=AutomationEdit-CGcsAAUx.js.map
