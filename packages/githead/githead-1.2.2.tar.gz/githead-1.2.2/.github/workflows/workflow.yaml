name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixpkgs-24.05-darwin

      - name: Generate cache key
        run: |
          nixpkgs_hash=$(egrep -o 'archive/[0-9a-f]{40}\.tar\.gz' shell.nix | cut -d'/' -f2 | cut -d'.' -f1)
          echo "CACHE_KEY=${{ runner.os }}-$nixpkgs_hash" >> $GITHUB_ENV

      - name: Cache Nix store
        uses: actions/cache@v4
        id: nix-cache
        with:
          key: nix-${{ env.CACHE_KEY }}
          path: /tmp/nix-cache

      - name: Import Nix store cache
        if: steps.nix-cache.outputs.cache-hit == 'true'
        run: nix-store --import < /tmp/nix-cache

      - name: Cache Python venv
        uses: actions/cache@v4
        with:
          key: python-${{ env.CACHE_KEY }}-${{ hashFiles('uv.lock') }}
          path: |
            ~/.cache/uv
            .venv

      - name: Assert tag name matches version
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          nix-shell --pure --run "uv tree 2>&1 | grep -o 'githead v.*' | sed 's/githead v//' > .version.txt"
          version=$(cat .version.txt)
          rm .version.txt
          tag_name=${{ github.ref_name }}
          if [ "$version" != "$tag_name" ]; then
            echo "Tag name mismatch: $version != $tag_name"
            exit 1
          fi

      - name: Run tests
        run: nix-shell --pure --run run-tests

      - name: Build distributions
        if: matrix.runner == 'ubuntu-latest'
        run: nix-shell --pure --run "uv build"

      - name: Upload distributions
        if: matrix.runner == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

      - name: Export Nix store cache
        if: steps.nix-cache.outputs.cache-hit != 'true'
        run: nix-store --export $(find /nix/store -maxdepth 1 -name '*-*') > /tmp/nix-cache

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: pypi
      url: https://pypi.org/p/githead
    permissions:
      id-token: write
    steps:
      - uses: astral-sh/setup-uv@v3

      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        run: uv publish
