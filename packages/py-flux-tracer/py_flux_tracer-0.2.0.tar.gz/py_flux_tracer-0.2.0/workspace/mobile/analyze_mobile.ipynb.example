{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e76d105d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import sys\n",
    "import pandas as pd\n",
    "import matplotlib.font_manager as fm\n",
    "from dotenv import load_dotenv\n",
    "from py_flux_tracer import (\n",
    "    HotspotData,\n",
    "    MobileMeasurementConfig,\n",
    "    MobileMeasurementAnalyzer,\n",
    "    H2OCorrectionConfig,\n",
    "    BiasRemovalConfig,\n",
    ")\n",
    "\n",
    "print(sys.version)\n",
    "\n",
    "# ローカルフォントの読み込み(必要ない場合はコメントアウト)\n",
    "font_paths: list[str] = [\n",
    "    \"/home/connect0459/labo/py-flux-tracer/workspace/private/fonts/arial.ttf\",  # 英語のデフォルト\n",
    "    \"/home/connect0459/labo/py-flux-tracer/workspace/private/fonts/msgothic.ttc\",  # 日本語のデフォルト\n",
    "]\n",
    "for path in font_paths:\n",
    "    fm.fontManager.addfont(path)\n",
    "del font_paths\n",
    "\n",
    "# 環境変数の設定\n",
    "dotenv_path = \"/home/connect0459/labo/py-flux-tracer/workspace/.env\"  # .envファイル\n",
    "load_dotenv(dotenv_path)\n",
    "mapbox_access_token: str | None = os.getenv(\"MAPBOX_ACCESS_TOKEN\")\n",
    "if not mapbox_access_token:\n",
    "    raise ValueError(\"MAPBOX_ACCESS_TOKEN is not set in .env file\")\n",
    "g_mapbox_access_token: str = mapbox_access_token\n",
    "del dotenv_path, mapbox_access_token\n",
    "\"\"\"\n",
    "このNotebookで使いまわすグローバル変数を定義\n",
    "'g_'プレフィックスを付けて定義\n",
    "\"\"\"\n",
    "g_print_measurement_stats: bool = False\n",
    "g_timeseries: bool = False\n",
    "g_scatter_c2c1: bool = False\n",
    "g_plot_ch4: bool = True\n",
    "g_plot_c2h6: bool = False\n",
    "g_plot_c2c1_ratio: bool = True\n",
    "g_hotspot_area_meter: float = 50\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "82bb8a9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# picoデータの補正式に関するパラメータ\n",
    "pico_h2o_correction = H2OCorrectionConfig(\n",
    "    coef_b=1.0111e-06,  # 1次の係数\n",
    "    coef_c=-1.8683e-10,  # 2次の係数\n",
    ")\n",
    "pico_bias_removal = BiasRemovalConfig(\n",
    "    quantile_value=0.05,\n",
    ")\n",
    "\n",
    "# MobileMeasurementConfigによる詳細指定\n",
    "configs: list[MobileMeasurementConfig] = [\n",
    "    MobileMeasurementConfig(\n",
    "        lag=7,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.10.17/input/Pico100121_241017_092120+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.11.09/input/Pico100121_241109_103128.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.11.11/input/Pico100121_241111_091102+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.11.14/input/Pico100121_241114_093745+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.11.18/input/Pico100121_241118_092855+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.11.20/input/Pico100121_241120_092932+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.11.24/input/Pico100121_241124_092712+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.11.25/input/Pico100121_241125_090721+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.11.28/input/Pico100121_241128_090240+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.11.30/input/Pico100121_241130_092420+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "    MobileMeasurementConfig(\n",
    "        lag=13,\n",
    "        fs=1,\n",
    "        path=\"/home/connect0459/labo/py-flux-tracer/workspace/mobile/private/data/2024.12.02/input/Pico100121_241202_090316+.txt\",\n",
    "        h2o_correction=pico_h2o_correction,\n",
    "        bias_removal=pico_bias_removal,\n",
    "    ),\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c33039f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# インスタンスの作成\n",
    "g_msa = MobileMeasurementAnalyzer(\n",
    "    center_lat=34.573904320329724,\n",
    "    center_lon=135.4829511120712,\n",
    "    configs=configs,\n",
    "    num_sections=4,\n",
    "    hotspot_area_meter=g_hotspot_area_meter,\n",
    "    window_minutes=5,\n",
    "    logging_debug=False,\n",
    ")\n",
    "\n",
    "# 距離などの情報を表示\n",
    "if g_print_measurement_stats:\n",
    "    g_msa.calculate_measurement_stats()\n",
    "del configs, pico_bias_removal, pico_h2o_correction\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "281be5f3-4925-45cc-9bd7-ba722b071315",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# 時系列データの描画\n",
    "if g_timeseries:\n",
    "    g_msa.plot_conc_timeseries(save_fig=False, show_fig=True)\n",
    "\n",
    "# ホットスポット検出\n",
    "if g_scatter_c2c1:\n",
    "    hotspots: list[HotspotData] = g_msa.analyze_hotspots(\n",
    "        # duplicate_check_mode=\"none\",\n",
    "        # duplicate_check_mode=\"time_window\",\n",
    "        duplicate_check_mode=\"time_all\",\n",
    "    )\n",
    "    # ホットスポットのc2c1を描画\n",
    "    g_msa.plot_scatter_c2c1(hotspots=hotspots, show_fig=True, save_fig=False)\n",
    "    del hotspots\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b678d2a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "if g_plot_ch4:\n",
    "    df_processed: pd.DataFrame = g_msa.get_preprocessed_data()\n",
    "\n",
    "    g_msa.plot_mapbox(\n",
    "        df=df_processed,\n",
    "        col_conc=\"ch4_ppm\",\n",
    "        mapbox_access_token=g_mapbox_access_token,\n",
    "        value_range=(1.95, 2.3),\n",
    "        tick_font_size=20,\n",
    "        title_font_size=20,\n",
    "        save_fig=False,\n",
    "        colorbar_title=\"CH₄<br>(ppm)\",\n",
    "    )\n",
    "\n",
    "    del df_processed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e56a2a2d-3c76-4138-80c4-284e4e13885d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "if g_plot_c2h6:\n",
    "    df_processed: pd.DataFrame = g_msa.get_preprocessed_data()\n",
    "\n",
    "    g_msa.plot_mapbox(\n",
    "        df=df_processed,\n",
    "        mapbox_access_token=g_mapbox_access_token,\n",
    "        col_conc=\"c2h6_ppb\",\n",
    "        value_range=(0, 20),\n",
    "        tick_font_size=20,\n",
    "        title_font_size=20,\n",
    "        save_fig=False,\n",
    "        colorbar_title=\"C₂H₆<br>(ppb)\",\n",
    "    )\n",
    "\n",
    "    del df_processed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4154cf28-826a-4744-9088-2683787fbe10",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "if g_plot_c2c1_ratio:\n",
    "    df_processed: pd.DataFrame = g_msa.get_preprocessed_data()\n",
    "    df_processed = g_msa.remove_c2c1_ratio_duplicates(\n",
    "        df=df_processed,\n",
    "        check_time_all=True,\n",
    "        min_time_threshold_seconds=300,\n",
    "        max_time_threshold_hours=12,\n",
    "        hotspot_area_meter=g_hotspot_area_meter,\n",
    "    )\n",
    "\n",
    "    g_msa.plot_mapbox(\n",
    "        df=df_processed,\n",
    "        mapbox_access_token=g_mapbox_access_token,\n",
    "        col_conc=\"c2c1_ratio_delta\",\n",
    "        value_range=(0, 10),\n",
    "        tick_font_size=20,\n",
    "        title_font_size=20,\n",
    "        save_fig=False,\n",
    "        colorbar_title=\"ΔC₂H₆/ΔCH₄<br>(ppb/ppm)\",\n",
    "        marker_size=8\n",
    "    )\n",
    "\n",
    "    del df_processed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3c9e3be8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
