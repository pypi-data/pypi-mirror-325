[project]
name = "py-flux-tracer"
version = "1.0.0"
# # version属性は"setuptools_scm"が自動的に設定
# dynamic = ["version"]
description = "This package provides methods for analyzing atmospheric observation data, primarily eddy covariance methods."
authors = [{ name = "connect0459", email = "connect0459@gmail.com" }]
# PILの代わりにfork先のpillowをインストール
# 詳細は<https://pillow.readthedocs.io/en/stable/>を参照
dependencies = [
  "folium>=0.18.0",
  "geopy>=2.4.1",
  "jpholiday",
  "matplotlib",
  "nbformat>=5.10.4",
  "numpy",
  "openpyxl>=3.1.5",
  "pandas",
  "pillow",           # PILの互換ライブラリ
  "plotly>=5.24.1",
  "scipy",
  "setuptools_scm",   # バージョン管理用に追加
  "tqdm",
]
readme = "README.md"
requires-python = ">= 3.11"
# PyPIで公開するための追加情報
license = "MIT"
classifiers = [
  "Development Status :: 3 - Alpha",                        # "Alpha":開発初期段階を示す
  "Intended Audience :: Science/Research",                  # "Science/Research":科学研究者向け
  "License :: OSI Approved :: MIT License",                 # MITライセンスで公開
  "Programming Language :: Python :: 3",                    # Python 3 系列に対応
  "Programming Language :: Python :: 3.11",                 # 特にPython 3.11 に対応
  "Topic :: Scientific/Engineering :: Atmospheric Science", # "Atmospheric Science":大気科学分野
]
keywords = [
  "meteorology",
  "eddy",
  "covariance",
  "flux",
  "spectrum",
  "footprint",
  "hotspots",
  "methane",
  "ethane",
]

[project.urls]
"Homepage" = "https://github.com/connect0459/py-flux-tracer"
"Bug Tracker" = "https://github.com/connect0459/py-flux-tracer/issues"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/py_flux_tracer"]

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }
write-to = "src/py_flux_tracer/_version.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.ruff]
# 行の長さ制限
line-length = 88

# 検査するファイルやディレクトリ
src = ["src", "tests"]

# 無視するファイルやディレクトリ
exclude = [".git", ".venv", "__pycache__", "build", "dist"]

# 有効にするルール
[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "RUF", # ruff-specific rules
]

# 無視するルール
ignore = [
  "E501", # line length violations
]

# 自動修正の対象とするルール
fixable = ["I", "F401"]

[tool.ruff.lint.isort]
# isortの設定
known-first-party = ["py_flux_tracer"]
known-third-party = ["numpy", "pandas"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.mccabe]
# 循環的複雑度の最大値
max-complexity = 10

[tool.ruff.lint.pydocstyle]
# docstringのスタイル
convention = "numpy"

[tool.uv]
managed = true
dev-dependencies = [
  "build>=1.2.2.post1",
  "hatchling>=1.25.0",
  "ipykernel>=6.29.5",
  "pdoc>=15.0.1",
  "pytest>=8.3.4",
  "python-dotenv>=1.0.1",
  "ruff>=0.6.8",
  "twine>=5.1.1",
]
