# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
from .repository import Repository
import typing
from .user import User
from .comment import Comment
import datetime as dt
from .activity_op_type import ActivityOpType
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.pydantic_utilities import update_forward_refs


class Activity(UniversalBaseModel):
    act_user: typing.Optional[User] = None
    act_user_id: typing.Optional[int] = None
    comment: typing.Optional[Comment] = None
    comment_id: typing.Optional[int] = None
    content: typing.Optional[str] = None
    created: typing.Optional[dt.datetime] = None
    id: typing.Optional[int] = None
    is_private: typing.Optional[bool] = None
    op_type: typing.Optional[ActivityOpType] = pydantic.Field(default=None)
    """
    the type of action
    """

    ref_name: typing.Optional[str] = None
    repo: typing.Optional[Repository] = None
    repo_id: typing.Optional[int] = None
    user_id: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(Repository, Activity=Activity)
