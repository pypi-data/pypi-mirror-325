name: Publish releases on main to PyPi.org

on:
  push
jobs:
  build:
    if: contains(github.ref, '/tags/')
    environment:
      name: pypi
      #url: https://pypi.org/p/netbox_ptov  # Replace <package-name> with your PyPI project name
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python -m build --sdist --wheel
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    if: contains(github.ref, '/tags/') && contains(github.event.base_ref, 'main')
    environment:
      name: pypi
      url: https://pypi.org/p/netbox_ptov  # Replace <package-name> with your PyPI project name
    name: Publish Python distribution to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1  
  publish-to-pypi-test:
    if: contains(github.ref, '/tags/') && contains(github.event.base_ref, 'test')
    environment:
      name: pypi
      url: https://test.pypi.org/legacy/netbox_ptov  # Replace <package-name> with your PyPI project name
    name: >-
      Publish Python distribution of test branch to test.PyPI.org
    needs:
    - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
  github-release:
    if: contains(github.ref, '/tags/') && contains(github.event.base_ref, 'main')
    environment:
      name: pypi
      url: https://pypi.org/p/netbox_ptov  # Replace <package-name> with your PyPI project name
    name: >-
      Sign the Python distribution with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
