# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from ...conversation.types.conversation_field import ConversationField
import pydantic
import typing
from ...analytics_commons.types.range import Range
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class GroupBy(UniversalBaseModel):
    field: ConversationField = pydantic.Field()
    """
    Field used for data grouping.
    """

    limit: typing.Optional[int] = pydantic.Field(default=None)
    """
    Limits the number of groups returned (defaults to 100 if omitted).
    """

    ranges: typing.Optional[typing.List[Range]] = pydantic.Field(default=None)
    """
    Numeric ranges for grouping data into predefined buckets. Applies only to numeric fields.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
