{"./src/lib/components/DashPlanet.react.js":{"description":"DashPlanet is an interactive orbit menu component that displays children in a circular orbit.\nFree tier limitations apply unless a valid API key is provided.","displayName":"DashPlanet","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks."},"centerContent":{"type":{"name":"node"},"required":false,"description":"The center content of the planet menu. This can be any valid React node."},"children":{"type":{"name":"node"},"required":false,"description":"The satellite items that orbit around the center. These can be any valid React nodes.\nFree tier limits apply unless a valid API key is provided."},"n_clicks":{"type":{"name":"number"},"required":false,"description":"Number of times the planet has been clicked. This value is updated automatically\nwhen the planet is clicked."},"open":{"type":{"name":"bool"},"required":false,"description":"Whether the planet menu is open. Controls the visibility of satellite items."},"orbitRadius":{"type":{"name":"number"},"required":false,"description":"Radius of the orbit in pixels. Controls how far the satellites are from the center."},"rotation":{"type":{"name":"number"},"required":false,"description":"Rotation angle in degrees. Controls the starting position of satellites."},"hideOrbit":{"type":{"name":"bool"},"required":false,"description":"Whether to hide the orbit line. When true, the circular orbit path is not visible."},"autoClose":{"type":{"name":"bool"},"required":false,"description":"Whether to automatically close when clicking outside. When true, the menu closes\nwhen clicking anywhere outside the component."},"dragablePlanet":{"type":{"name":"bool"},"required":false,"description":"Whether the planet can be dragged. When true, the center content can be dragged\nwithin the dragRadiusPlanet limit. Requires valid API key."},"dragRadiusPlanet":{"type":{"name":"number"},"required":false,"description":"Maximum drag radius for the planet in pixels. Controls how far the center content\ncan be dragged when dragablePlanet is true."},"dragableSatellites":{"type":{"name":"bool"},"required":false,"description":"Whether satellites can be dragged. When true, satellite items can be dragged\nwithin the dragRadiusSatellites limit. Requires valid API key."},"dragRadiusSatellites":{"type":{"name":"number"},"required":false,"description":"Maximum drag radius for satellites in pixels. Controls how far satellite items\ncan be dragged when dragableSatellites is true."},"bounce":{"type":{"name":"bool"},"required":false,"description":"Whether to bounce on both open and close. When true, applies bounce animation\nin the specified bounceDirection. Requires valid API key."},"bounceOnOpen":{"type":{"name":"bool"},"required":false,"description":"Whether to bounce only on open. When true, applies bounce animation only when\nopening the menu. Requires valid API key."},"bounceOnClose":{"type":{"name":"bool"},"required":false,"description":"Whether to bounce only on close. When true, applies bounce animation only when\nclosing the menu. Requires valid API key."},"bounceDirection":{"type":{"name":"enum","value":[{"value":"'TOP'","computed":false},{"value":"'BOTTOM'","computed":false},{"value":"'LEFT'","computed":false},{"value":"'RIGHT'","computed":false}]},"required":false,"description":"Direction of the bounce animation. Determines which direction the bounce effect\nis applied."},"satelliteOrientation":{"type":{"name":"enum","value":[{"value":"'DEFAULT'","computed":false},{"value":"'INSIDE'","computed":false},{"value":"'OUTSIDE'","computed":false},{"value":"'READABLE'","computed":false}]},"required":false,"description":"Orientation of the satellites. Controls how satellite items are rotated in their orbit."},"mass":{"type":{"name":"number"},"required":false,"description":"Mass for spring physics animations. Controls the weight/inertia of animations."},"tension":{"type":{"name":"number"},"required":false,"description":"Tension for spring physics animations. Controls the spring stiffness."},"friction":{"type":{"name":"number"},"required":false,"description":"Friction for spring physics animations. Controls the spring damping."},"apiKey":{"type":{"name":"string"},"required":false,"description":"API key for unlocking full functionality. Without a valid key, the component\nwill operate in free tier mode with limited features."},"loading_state":{"type":{"name":"shape","value":{"is_loading":{"name":"bool","description":"Determines if the component is loading or not","required":false},"prop_name":{"name":"string","description":"Holds which property is loading","required":false},"component_name":{"name":"string","description":"Holds the name of the component that is loading","required":false}}},"required":false,"description":"Object that holds the loading state object coming from dash-renderer."},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes"}}}}