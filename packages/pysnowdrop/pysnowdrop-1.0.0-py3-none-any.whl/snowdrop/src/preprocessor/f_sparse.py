from numba import njit
    
@njit
def f_sparse(x, p, exog=[0], order=1, ind=None):
        
    ### This code was generated by Python.
    ### Eichenbaum, Rebelo and Trabandt Model with Resistant Virus Strain.
    
    # First order derivatives are employed in most of the models to compute Jacobian.
    # Higher order derivatives are used in nonlinear rational expectations models.
    
    from scipy.special import lambertw as LambertW
    from snowdrop.src.preprocessor.functions import Heaviside,Max,Min,Abs,DiracDelta
    from snowdrop.src.preprocessor.condition import IfThenElse,IfThen,Derivative,Subs,Positive,Negative,myzif

    import numpy as np
    from numpy import exp, sin, cos, tan, sqrt, sign, log
        
    # Initialize variables
    _xi_1 = 0 
    _xi_2 = 0 
    _xi_3 = 0 
    w__p1_ = x[3]
    rk__p1_ = x[4]
    ns__p1_ = x[17]
    ni__p1_ = x[18]
    nr__p1_ = x[19]
    cs__p1_ = x[20]
    ci__p1_ = x[21]
    cr__p1_ = x[22]
    lambtilde__p1_ = x[26]
    lamtau__p1_ = x[27]
    lami__p1_ = x[28]
    lams__p1_ = x[29]
    lamr__p1_ = x[30]
    pie__p1_ = x[34]
    F__p1_ = x[36]
    Kf__p1_ = x[37]
    wF__p1_ = x[43]
    rkF__p1_ = x[44]
    nsF__p1_ = x[57]
    niF__p1_ = x[58]
    nrF__p1_ = x[59]
    csF__p1_ = x[60]
    ciF__p1_ = x[61]
    crF__p1_ = x[62]
    lambtildeF__p1_ = x[66]
    lamtauF__p1_ = x[67]
    lamsF__p1_ = x[69]
    lamrF__p1_ = x[70]
    pieF__p1_ = x[74]
    FF__p1_ = x[76]
    KfF__p1_ = x[77]
    y__ = x[80]
    k__ = x[81]
    n__ = x[82]
    w__ = x[83]
    rk__ = x[84]
    x__ = x[85]
    c__ = x[86]
    s__ = x[87]
    s1__ = x[88]
    s2__ = x[89]
    i__ = x[90]
    i1__ = x[91]
    i2__ = x[92]
    r__ = x[93]
    r1__ = x[94]
    r2__ = x[95]
    v__ = x[96]
    ns__ = x[97]
    ni__ = x[98]
    nr__ = x[99]
    cs__ = x[100]
    ci__ = x[101]
    cr__ = x[102]
    tau__ = x[103]
    tau1__ = x[104]
    tau2__ = x[105]
    lambtilde__ = x[106]
    lamtau__ = x[107]
    lami__ = x[108]
    lams__ = x[109]
    lamr__ = x[110]
    dd__ = x[111]
    pop__ = x[112]
    Rb__ = x[113]
    pie__ = x[114]
    mc__ = x[115]
    F__ = x[116]
    Kf__ = x[117]
    rr__ = x[118]
    pbreve__ = x[119]
    yF__ = x[120]
    kF__ = x[121]
    nF__ = x[122]
    wF__ = x[123]
    rkF__ = x[124]
    xF__ = x[125]
    cF__ = x[126]
    sF__ = x[127]
    sF1__ = x[128]
    sF2__ = x[129]
    iF__ = x[130]
    iF1__ = x[131]
    iF2__ = x[132]
    rF__ = x[133]
    rF1__ = x[134]
    rF2__ = x[135]
    vF__ = x[136]
    nsF__ = x[137]
    niF__ = x[138]
    nrF__ = x[139]
    csF__ = x[140]
    ciF__ = x[141]
    crF__ = x[142]
    tauF__ = x[143]
    tauF1__ = x[144]
    tauF2__ = x[145]
    lambtildeF__ = x[146]
    lamtauF__ = x[147]
    lamiF__ = x[148]
    lamsF__ = x[149]
    lamrF__ = x[150]
    ddF__ = x[151]
    popF__ = x[152]
    RbF__ = x[153]
    pieF__ = x[154]
    mcF__ = x[155]
    FF__ = x[156]
    KfF__ = x[157]
    rrF__ = x[158]
    pbreveF__ = x[159]
    k__m1_ = x[161]
    s__m1_ = x[167]
    s1__m1_ = x[168]
    s2__m1_ = x[169]
    i__m1_ = x[170]
    i1__m1_ = x[171]
    i2__m1_ = x[172]
    r1__m1_ = x[174]
    r2__m1_ = x[175]
    dd__m1_ = x[191]
    pop__m1_ = x[192]
    pbreve__m1_ = x[199]
    kF__m1_ = x[201]
    sF__m1_ = x[207]
    sF1__m1_ = x[208]
    sF2__m1_ = x[209]
    iF__m1_ = x[210]
    iF1__m1_ = x[211]
    iF2__m1_ = x[212]
    rF1__m1_ = x[214]
    rF2__m1_ = x[215]
    ddF__m1_ = x[231]
    popF__m1_ = x[232]
    pbreveF__m1_ = x[239]
    ei1__ = x[240]
    ei2__ = x[241]
    ed__ = x[242]

    # Set parameters
    xi = p[0]
    rpi = p[1]
    rx = p[2]
    gam = p[3]
    pi1 = p[4]
    pi2 = p[5]
    pi3 = p[6]
    mult = p[7]
    mult2 = p[8]
    pir = p[9]
    pid = p[10]
    betta = p[11]
    i_ini = p[12]
    d_ini = p[13]
    A = p[14]
    theta = p[15]
    alfa = p[16]
    inc_target = p[17]
    n_target = p[18]
    delta = p[19]
    g_ss = p[20]
    eta = p[21]
    xi_flex = p[22]
    pie_ss = p[23]
    rr_ss = p[24]
    Rb_ss = p[25]
    lockdown_policy = p[26]
    sigma = p[27]
    theta_lockdown = p[28]
    vaccination_policy = p[29]
    vaccination_rate = p[30]
    virus_resistant_strain = p[31]
    virus_variant_start = p[32]
    ex = p[33]

    # Function:
    function = np.zeros(80)
    function[0] = -A*k__m1_**(1 - alfa)*n__**alfa*pbreve__ + y__
    function[1] = mc__ - rk__**(1 - alfa)*w__**alfa*(1 - alfa)**(alfa - 1)/(A*alfa**alfa)
    function[2] = -A*alfa*k__m1_**(1 - alfa)*mc__*n__**(alfa - 1) + w__
    function[3] = k__ - k__m1_*(1 - delta) - x__
    function[4] = -c__ - g_ss - x__ + y__
    function[5] = -i1__m1_*ni__ + n__ - nr__*r1__m1_ - ns__*s1__m1_
    function[6] = c__ - ci__*i1__m1_ - cr__*r1__m1_ - cs__*s1__m1_
    function[7] = tau1__ - (-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*i1__m1_*pi1*s1__m1_ + i1__m1_*ni__*ns__*pi2*s1__m1_ + i1__m1_*pi3*s1__m1_)
    function[8] = tau2__ - virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*i2__m1_*pi1*s2__m1_ + i2__m1_*mult*pi3*s2__m1_ + i2__m1_*ni__*ns__*pi2*s2__m1_)
    function[9] = -tau1__ - tau2__ + tau__
    function[10] = s1__ - s1__m1_ + tau1__ + v__
    function[11] = s2__ - s2__m1_ + tau2__
    function[12] = s__ - s__m1_ + tau__ + v__
    function[13] = -ei1__ + i1__ + i1__m1_*(pid + pir) - i1__m1_ - tau1__
    function[14] = -ei2__ + i2__ - i2__m1_ - virus_resistant_strain*(-i2__m1_*(pir + pid/mult2) + tau2__)
    function[15] = -ex*i2__ - i1__ + i__
    function[16] = -i1__m1_*pir + r1__ - r1__m1_ - v__
    function[17] = -i2__m1_*pir + r2__ - r2__m1_
    function[18] = -r1__ - r2__ + r__
    function[19] = -s1__m1_*vaccination_rate + v__
    function[20] = dd__ - dd__m1_ - ed__ - i1__m1_*pid - i2__m1_*pid/mult2
    function[21] = i1__m1_*pid + i2__m1_*pid/mult2 + pop__ - pop__m1_
    function[22] = ci__*i__m1_*lamtau__*pi1 - lambtilde__ + 1/cs__
    function[23] = -lambtilde__ + 1/ci__
    function[24] = -lambtilde__ + 1/cr__
    function[25] = ns__*theta - (-lockdown_policy*theta_lockdown + 1)*(i__m1_*lamtau__*ni__*pi2 + lambtilde__*w__)
    function[26] = -lambtilde__*w__*(-lockdown_policy*theta_lockdown + 1) + ni__*theta
    function[27] = -lambtilde__*w__ + nr__*theta
    function[28] = -betta*lambtilde__p1_*(-delta + rk__p1_ + 1) + lambtilde__
    function[29] = lami__ - lams__ - lamtau__
    function[30] = lambtilde__p1_*(-cs__p1_ + ns__p1_*w__p1_) + lams__p1_ + lamtau__p1_*(ci__p1_*cs__p1_*i__*pi1 + i__*ni__p1_*ns__p1_*pi2 + i__*pi3) - ns__p1_**2*theta/2 + log(cs__p1_) - lams__/betta
    function[31] = lambtilde__p1_*(-ci__p1_ + ni__p1_*w__p1_) + lami__p1_*(-pid - pir + 1) + lamr__p1_*pir - ni__p1_**2*theta/2 + log(ci__p1_) - lami__/betta
    function[32] = lambtilde__p1_*(-cr__p1_ + nr__p1_*w__p1_) + lamr__p1_ - nr__p1_**2*theta/2 + log(cr__p1_) - lamr__/betta
    function[33] = -Rb__*betta*lambtilde__p1_/pie__p1_ + lambtilde__
    function[34] = -Rb__/pie__p1_ + rr__
    function[35] = Kf__ - Kf__p1_*betta*pie__p1_**(gam/(gam - 1))*xi - gam*lambtilde__*mc__*y__
    function[36] = F__ - F__p1_*betta*pie__p1_**(1/(gam - 1))*xi - lambtilde__*y__
    function[37] = -F__*((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**(1 - gam) + Kf__
    function[38] = -((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**gam*(1 - xi) - pie__**(gam/(gam - 1))*xi/pbreve__m1_ + 1/pbreve__
    function[39] = Rb__ - rpi*log(pie__/pie_ss) - rr_ss - rx*log(y__/yF__)
    function[40] = -A*kF__m1_**(1 - alfa)*nF__**alfa*pbreveF__ + yF__
    function[41] = mcF__ - rkF__**(1 - alfa)*wF__**alfa*(1 - alfa)**(alfa - 1)/(A*alfa**alfa)
    function[42] = -A*alfa*kF__m1_**(1 - alfa)*mcF__*nF__**(alfa - 1) + wF__
    function[43] = kF__ - kF__m1_*(1 - delta) - xF__
    function[44] = -cF__ - g_ss - xF__ + yF__
    function[45] = -iF1__m1_*niF__ + nF__ - nrF__*rF1__m1_ - nsF__*sF1__m1_
    function[46] = cF__ - ciF__*iF1__m1_ - crF__*rF1__m1_ - csF__*sF1__m1_
    function[47] = tauF1__ - (-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*iF1__m1_*pi1*sF1__m1_ + iF1__m1_*niF__*nsF__*pi2*sF1__m1_ + iF1__m1_*pi3*sF1__m1_)
    function[48] = tauF2__ - virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*iF2__m1_*pi1*sF2__m1_ + iF2__m1_*mult*pi3*sF2__m1_ + iF2__m1_*niF__*nsF__*pi2*sF2__m1_)
    function[49] = -tauF1__ - tauF2__ + tauF__
    function[50] = sF1__ - sF1__m1_ + tauF1__ + vF__
    function[51] = sF2__ - sF2__m1_ + tauF2__
    function[52] = sF__ - sF__m1_ + tauF__ + vF__
    function[53] = -ei1__ + iF1__ + iF1__m1_*(pid + pir) - iF1__m1_ - tauF1__
    function[54] = -ei2__ + iF2__ - iF2__m1_ - virus_resistant_strain*(-iF2__m1_*(pir + pid/mult2) + tauF2__)
    function[55] = -ex*iF2__ - iF1__ + iF__
    function[56] = -iF1__m1_*pir + rF1__ - rF1__m1_ - vF__
    function[57] = -iF2__m1_*pir + rF2__ - rF2__m1_
    function[58] = -rF1__ - rF2__ + rF__
    function[59] = -sF1__m1_*vaccination_rate + vF__
    function[60] = ddF__ - ddF__m1_ - ed__ - iF1__m1_*pid - iF2__m1_*pid/mult2
    function[61] = iF1__m1_*pid + iF2__m1_*pid/mult2 + popF__ - popF__m1_
    function[62] = ciF__*iF__m1_*lamtauF__*pi1 - lambtildeF__ + 1/csF__
    function[63] = -lambtildeF__ + 1/ciF__
    function[64] = -lambtildeF__ + 1/crF__
    function[65] = nsF__*theta - (-lockdown_policy*theta_lockdown + 1)*(iF__m1_*lamtauF__*niF__*pi2 + lambtildeF__*wF__)
    function[66] = -lambtildeF__*wF__*(-lockdown_policy*theta_lockdown + 1) + niF__*theta
    function[67] = -lambtildeF__*wF__ + nrF__*theta
    function[68] = -betta*lambtildeF__p1_*(-delta + rkF__p1_ + 1) + lambtildeF__
    function[69] = lamiF__ - lamsF__ - lamtauF__
    function[70] = lambtildeF__p1_*(-csF__p1_ + nsF__p1_*wF__p1_) + lamsF__p1_ + lamtauF__p1_*(ciF__p1_*csF__p1_*iF__*pi1 + iF__*niF__p1_*nsF__p1_*pi2 + iF__*pi3) - nsF__p1_**2*theta/2 + log(csF__p1_) - lamsF__/betta
    function[71] = lambtildeF__p1_*(-ciF__p1_ + niF__p1_*wF__p1_) + lamiF__*(-pid - pir + 1) + lamrF__p1_*pir - niF__p1_**2*theta/2 + log(ciF__p1_) - lamiF__/betta
    function[72] = lambtildeF__p1_*(-crF__p1_ + nrF__p1_*wF__p1_) + lamrF__p1_ - nrF__p1_**2*theta/2 + log(crF__p1_) - lamrF__/betta
    function[73] = -RbF__*betta*lambtildeF__p1_/pieF__p1_ + lambtildeF__
    function[74] = -RbF__/pieF__p1_ + rrF__
    function[75] = KfF__ - KfF__p1_*betta*pieF__p1_**(gam/(gam - 1))*xi_flex - gam*lambtildeF__*mcF__*yF__
    function[76] = FF__ - FF__p1_*betta*pieF__p1_**(1/(gam - 1))*xi_flex - lambtildeF__*yF__
    function[77] = -FF__*((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**(1 - gam) + KfF__
    function[78] = -((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**gam*(1 - xi_flex) - pieF__**(gam/(gam - 1))*xi_flex/pbreveF__m1_ + 1/pbreveF__
    function[79] = RbF__ - Rb_ss - rpi*log(pieF__/pie_ss)

    if order == 0:
        return function
    
    # Jacobian: 
    row_ind = []; col_ind = []; jacobian = []
    row_ind.append(0); col_ind.append(80); jacobian.append(1)
    row_ind.append(0); col_ind.append(82); jacobian.append(-A*alfa*k__m1_**(1 - alfa)*n__**alfa*pbreve__/n__)
    row_ind.append(0); col_ind.append(119); jacobian.append(-A*k__m1_**(1 - alfa)*n__**alfa)
    row_ind.append(0); col_ind.append(161); jacobian.append(-A*k__m1_**(1 - alfa)*n__**alfa*pbreve__*(1 - alfa)/k__m1_)
    row_ind.append(1); col_ind.append(83); jacobian.append(-alfa*rk__**(1 - alfa)*w__**alfa*(1 - alfa)**(alfa - 1)/(A*alfa**alfa*w__))
    row_ind.append(1); col_ind.append(84); jacobian.append(-rk__**(1 - alfa)*w__**alfa*(1 - alfa)*(1 - alfa)**(alfa - 1)/(A*alfa**alfa*rk__))
    row_ind.append(1); col_ind.append(115); jacobian.append(1)
    row_ind.append(2); col_ind.append(82); jacobian.append(-A*alfa*k__m1_**(1 - alfa)*mc__*n__**(alfa - 1)*(alfa - 1)/n__)
    row_ind.append(2); col_ind.append(83); jacobian.append(1)
    row_ind.append(2); col_ind.append(115); jacobian.append(-A*alfa*k__m1_**(1 - alfa)*n__**(alfa - 1))
    row_ind.append(2); col_ind.append(161); jacobian.append(-A*alfa*k__m1_**(1 - alfa)*mc__*n__**(alfa - 1)*(1 - alfa)/k__m1_)
    row_ind.append(3); col_ind.append(81); jacobian.append(1)
    row_ind.append(3); col_ind.append(85); jacobian.append(-1)
    row_ind.append(3); col_ind.append(161); jacobian.append(delta - 1)
    row_ind.append(4); col_ind.append(80); jacobian.append(1)
    row_ind.append(4); col_ind.append(85); jacobian.append(-1)
    row_ind.append(4); col_ind.append(86); jacobian.append(-1)
    row_ind.append(5); col_ind.append(82); jacobian.append(1)
    row_ind.append(5); col_ind.append(97); jacobian.append(-s1__m1_)
    row_ind.append(5); col_ind.append(98); jacobian.append(-i1__m1_)
    row_ind.append(5); col_ind.append(99); jacobian.append(-r1__m1_)
    row_ind.append(5); col_ind.append(168); jacobian.append(-ns__)
    row_ind.append(5); col_ind.append(171); jacobian.append(-ni__)
    row_ind.append(5); col_ind.append(174); jacobian.append(-nr__)
    row_ind.append(6); col_ind.append(86); jacobian.append(1)
    row_ind.append(6); col_ind.append(100); jacobian.append(-s1__m1_)
    row_ind.append(6); col_ind.append(101); jacobian.append(-i1__m1_)
    row_ind.append(6); col_ind.append(102); jacobian.append(-r1__m1_)
    row_ind.append(6); col_ind.append(168); jacobian.append(-cs__)
    row_ind.append(6); col_ind.append(171); jacobian.append(-ci__)
    row_ind.append(6); col_ind.append(174); jacobian.append(-cr__)
    row_ind.append(7); col_ind.append(97); jacobian.append(-i1__m1_*ni__*pi2*s1__m1_*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(7); col_ind.append(98); jacobian.append(-i1__m1_*ns__*pi2*s1__m1_*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(7); col_ind.append(100); jacobian.append(-ci__*i1__m1_*pi1*s1__m1_*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(7); col_ind.append(101); jacobian.append(-cs__*i1__m1_*pi1*s1__m1_*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(7); col_ind.append(104); jacobian.append(1)
    row_ind.append(7); col_ind.append(168); jacobian.append(-(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*i1__m1_*pi1 + i1__m1_*ni__*ns__*pi2 + i1__m1_*pi3))
    row_ind.append(7); col_ind.append(171); jacobian.append(-(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*pi1*s1__m1_ + ni__*ns__*pi2*s1__m1_ + pi3*s1__m1_))
    row_ind.append(8); col_ind.append(97); jacobian.append(-i2__m1_*ni__*pi2*s2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(8); col_ind.append(98); jacobian.append(-i2__m1_*ns__*pi2*s2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(8); col_ind.append(100); jacobian.append(-ci__*i2__m1_*pi1*s2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(8); col_ind.append(101); jacobian.append(-cs__*i2__m1_*pi1*s2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(8); col_ind.append(105); jacobian.append(1)
    row_ind.append(8); col_ind.append(169); jacobian.append(-virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*i2__m1_*pi1 + i2__m1_*mult*pi3 + i2__m1_*ni__*ns__*pi2))
    row_ind.append(8); col_ind.append(172); jacobian.append(-virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*pi1*s2__m1_ + mult*pi3*s2__m1_ + ni__*ns__*pi2*s2__m1_))
    row_ind.append(9); col_ind.append(103); jacobian.append(1)
    row_ind.append(9); col_ind.append(104); jacobian.append(-1)
    row_ind.append(9); col_ind.append(105); jacobian.append(-1)
    row_ind.append(10); col_ind.append(88); jacobian.append(1)
    row_ind.append(10); col_ind.append(96); jacobian.append(1)
    row_ind.append(10); col_ind.append(104); jacobian.append(1)
    row_ind.append(10); col_ind.append(168); jacobian.append(-1)
    row_ind.append(11); col_ind.append(89); jacobian.append(1)
    row_ind.append(11); col_ind.append(105); jacobian.append(1)
    row_ind.append(11); col_ind.append(169); jacobian.append(-1)
    row_ind.append(12); col_ind.append(87); jacobian.append(1)
    row_ind.append(12); col_ind.append(96); jacobian.append(1)
    row_ind.append(12); col_ind.append(103); jacobian.append(1)
    row_ind.append(12); col_ind.append(167); jacobian.append(-1)
    row_ind.append(13); col_ind.append(91); jacobian.append(1)
    row_ind.append(13); col_ind.append(104); jacobian.append(-1)
    row_ind.append(13); col_ind.append(171); jacobian.append(pid + pir - 1)
    row_ind.append(13); col_ind.append(240); jacobian.append(-1)
    row_ind.append(14); col_ind.append(92); jacobian.append(1)
    row_ind.append(14); col_ind.append(105); jacobian.append(-virus_resistant_strain)
    row_ind.append(14); col_ind.append(172); jacobian.append(-virus_resistant_strain*(-pir - pid/mult2) - 1)
    row_ind.append(14); col_ind.append(241); jacobian.append(-1)
    row_ind.append(15); col_ind.append(90); jacobian.append(1)
    row_ind.append(15); col_ind.append(91); jacobian.append(-1)
    row_ind.append(15); col_ind.append(92); jacobian.append(-ex)
    row_ind.append(16); col_ind.append(94); jacobian.append(1)
    row_ind.append(16); col_ind.append(96); jacobian.append(-1)
    row_ind.append(16); col_ind.append(171); jacobian.append(-pir)
    row_ind.append(16); col_ind.append(174); jacobian.append(-1)
    row_ind.append(17); col_ind.append(95); jacobian.append(1)
    row_ind.append(17); col_ind.append(172); jacobian.append(-pir)
    row_ind.append(17); col_ind.append(175); jacobian.append(-1)
    row_ind.append(18); col_ind.append(93); jacobian.append(1)
    row_ind.append(18); col_ind.append(94); jacobian.append(-1)
    row_ind.append(18); col_ind.append(95); jacobian.append(-1)
    row_ind.append(19); col_ind.append(96); jacobian.append(1)
    row_ind.append(19); col_ind.append(168); jacobian.append(-vaccination_rate)
    row_ind.append(20); col_ind.append(111); jacobian.append(1)
    row_ind.append(20); col_ind.append(171); jacobian.append(-pid)
    row_ind.append(20); col_ind.append(172); jacobian.append(-pid/mult2)
    row_ind.append(20); col_ind.append(191); jacobian.append(-1)
    row_ind.append(20); col_ind.append(242); jacobian.append(-1)
    row_ind.append(21); col_ind.append(112); jacobian.append(1)
    row_ind.append(21); col_ind.append(171); jacobian.append(pid)
    row_ind.append(21); col_ind.append(172); jacobian.append(pid/mult2)
    row_ind.append(21); col_ind.append(192); jacobian.append(-1)
    row_ind.append(22); col_ind.append(100); jacobian.append(-1/cs__**2)
    row_ind.append(22); col_ind.append(101); jacobian.append(i__m1_*lamtau__*pi1)
    row_ind.append(22); col_ind.append(106); jacobian.append(-1)
    row_ind.append(22); col_ind.append(107); jacobian.append(ci__*i__m1_*pi1)
    row_ind.append(22); col_ind.append(170); jacobian.append(ci__*lamtau__*pi1)
    row_ind.append(23); col_ind.append(101); jacobian.append(-1/ci__**2)
    row_ind.append(23); col_ind.append(106); jacobian.append(-1)
    row_ind.append(24); col_ind.append(102); jacobian.append(-1/cr__**2)
    row_ind.append(24); col_ind.append(106); jacobian.append(-1)
    row_ind.append(25); col_ind.append(83); jacobian.append(-lambtilde__*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(25); col_ind.append(97); jacobian.append(theta)
    row_ind.append(25); col_ind.append(98); jacobian.append(-i__m1_*lamtau__*pi2*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(25); col_ind.append(106); jacobian.append(-w__*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(25); col_ind.append(107); jacobian.append(-i__m1_*ni__*pi2*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(25); col_ind.append(170); jacobian.append(-lamtau__*ni__*pi2*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(26); col_ind.append(83); jacobian.append(-lambtilde__*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(26); col_ind.append(98); jacobian.append(theta)
    row_ind.append(26); col_ind.append(106); jacobian.append(-w__*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(27); col_ind.append(83); jacobian.append(-lambtilde__)
    row_ind.append(27); col_ind.append(99); jacobian.append(theta)
    row_ind.append(27); col_ind.append(106); jacobian.append(-w__)
    row_ind.append(28); col_ind.append(4); jacobian.append(-betta*lambtilde__p1_)
    row_ind.append(28); col_ind.append(26); jacobian.append(-betta*(-delta + rk__p1_ + 1))
    row_ind.append(28); col_ind.append(106); jacobian.append(1)
    row_ind.append(29); col_ind.append(107); jacobian.append(-1)
    row_ind.append(29); col_ind.append(108); jacobian.append(1)
    row_ind.append(29); col_ind.append(109); jacobian.append(-1)
    row_ind.append(30); col_ind.append(3); jacobian.append(lambtilde__p1_*ns__p1_)
    row_ind.append(30); col_ind.append(17); jacobian.append(i__*lamtau__p1_*ni__p1_*pi2 + lambtilde__p1_*w__p1_ - ns__p1_*theta)
    row_ind.append(30); col_ind.append(18); jacobian.append(i__*lamtau__p1_*ns__p1_*pi2)
    row_ind.append(30); col_ind.append(20); jacobian.append(ci__p1_*i__*lamtau__p1_*pi1 - lambtilde__p1_ + 1/cs__p1_)
    row_ind.append(30); col_ind.append(21); jacobian.append(cs__p1_*i__*lamtau__p1_*pi1)
    row_ind.append(30); col_ind.append(26); jacobian.append(-cs__p1_ + ns__p1_*w__p1_)
    row_ind.append(30); col_ind.append(27); jacobian.append(ci__p1_*cs__p1_*i__*pi1 + i__*ni__p1_*ns__p1_*pi2 + i__*pi3)
    row_ind.append(30); col_ind.append(29); jacobian.append(1)
    row_ind.append(30); col_ind.append(90); jacobian.append(lamtau__p1_*(ci__p1_*cs__p1_*pi1 + ni__p1_*ns__p1_*pi2 + pi3))
    row_ind.append(30); col_ind.append(109); jacobian.append(-1/betta)
    row_ind.append(31); col_ind.append(3); jacobian.append(lambtilde__p1_*ni__p1_)
    row_ind.append(31); col_ind.append(18); jacobian.append(lambtilde__p1_*w__p1_ - ni__p1_*theta)
    row_ind.append(31); col_ind.append(21); jacobian.append(-lambtilde__p1_ + 1/ci__p1_)
    row_ind.append(31); col_ind.append(26); jacobian.append(-ci__p1_ + ni__p1_*w__p1_)
    row_ind.append(31); col_ind.append(28); jacobian.append(-pid - pir + 1)
    row_ind.append(31); col_ind.append(30); jacobian.append(pir)
    row_ind.append(31); col_ind.append(108); jacobian.append(-1/betta)
    row_ind.append(32); col_ind.append(3); jacobian.append(lambtilde__p1_*nr__p1_)
    row_ind.append(32); col_ind.append(19); jacobian.append(lambtilde__p1_*w__p1_ - nr__p1_*theta)
    row_ind.append(32); col_ind.append(22); jacobian.append(-lambtilde__p1_ + 1/cr__p1_)
    row_ind.append(32); col_ind.append(26); jacobian.append(-cr__p1_ + nr__p1_*w__p1_)
    row_ind.append(32); col_ind.append(30); jacobian.append(1)
    row_ind.append(32); col_ind.append(110); jacobian.append(-1/betta)
    row_ind.append(33); col_ind.append(26); jacobian.append(-Rb__*betta/pie__p1_)
    row_ind.append(33); col_ind.append(34); jacobian.append(Rb__*betta*lambtilde__p1_/pie__p1_**2)
    row_ind.append(33); col_ind.append(106); jacobian.append(1)
    row_ind.append(33); col_ind.append(113); jacobian.append(-betta*lambtilde__p1_/pie__p1_)
    row_ind.append(34); col_ind.append(34); jacobian.append(Rb__/pie__p1_**2)
    row_ind.append(34); col_ind.append(113); jacobian.append(-1/pie__p1_)
    row_ind.append(34); col_ind.append(118); jacobian.append(1)
    row_ind.append(35); col_ind.append(34); jacobian.append(-Kf__p1_*betta*gam*pie__p1_**(gam/(gam - 1))*xi/(pie__p1_*(gam - 1)))
    row_ind.append(35); col_ind.append(37); jacobian.append(-betta*pie__p1_**(gam/(gam - 1))*xi)
    row_ind.append(35); col_ind.append(80); jacobian.append(-gam*lambtilde__*mc__)
    row_ind.append(35); col_ind.append(106); jacobian.append(-gam*mc__*y__)
    row_ind.append(35); col_ind.append(115); jacobian.append(-gam*lambtilde__*y__)
    row_ind.append(35); col_ind.append(117); jacobian.append(1)
    row_ind.append(36); col_ind.append(34); jacobian.append(-F__p1_*betta*pie__p1_**(1/(gam - 1))*xi/(pie__p1_*(gam - 1)))
    row_ind.append(36); col_ind.append(36); jacobian.append(-betta*pie__p1_**(1/(gam - 1))*xi)
    row_ind.append(36); col_ind.append(80); jacobian.append(-lambtilde__)
    row_ind.append(36); col_ind.append(106); jacobian.append(-y__)
    row_ind.append(36); col_ind.append(116); jacobian.append(1)
    row_ind.append(37); col_ind.append(114); jacobian.append(F__*pie__**(1/(gam - 1))*xi*((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**(1 - gam)*(1 - gam)/(pie__*(gam - 1)*(-pie__**(1/(gam - 1))*xi + 1)))
    row_ind.append(37); col_ind.append(116); jacobian.append(-((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**(1 - gam))
    row_ind.append(37); col_ind.append(117); jacobian.append(1)
    row_ind.append(38); col_ind.append(114); jacobian.append(gam*pie__**(1/(gam - 1))*xi*((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**gam*(1 - xi)/(pie__*(gam - 1)*(-pie__**(1/(gam - 1))*xi + 1)) - gam*pie__**(gam/(gam - 1))*xi/(pbreve__m1_*pie__*(gam - 1)))
    row_ind.append(38); col_ind.append(119); jacobian.append(-1/pbreve__**2)
    row_ind.append(38); col_ind.append(199); jacobian.append(pie__**(gam/(gam - 1))*xi/pbreve__m1_**2)
    row_ind.append(39); col_ind.append(80); jacobian.append(-rx/y__)
    row_ind.append(39); col_ind.append(113); jacobian.append(1)
    row_ind.append(39); col_ind.append(114); jacobian.append(-rpi/pie__)
    row_ind.append(39); col_ind.append(120); jacobian.append(rx/yF__)
    row_ind.append(40); col_ind.append(120); jacobian.append(1)
    row_ind.append(40); col_ind.append(122); jacobian.append(-A*alfa*kF__m1_**(1 - alfa)*nF__**alfa*pbreveF__/nF__)
    row_ind.append(40); col_ind.append(159); jacobian.append(-A*kF__m1_**(1 - alfa)*nF__**alfa)
    row_ind.append(40); col_ind.append(201); jacobian.append(-A*kF__m1_**(1 - alfa)*nF__**alfa*pbreveF__*(1 - alfa)/kF__m1_)
    row_ind.append(41); col_ind.append(123); jacobian.append(-alfa*rkF__**(1 - alfa)*wF__**alfa*(1 - alfa)**(alfa - 1)/(A*alfa**alfa*wF__))
    row_ind.append(41); col_ind.append(124); jacobian.append(-rkF__**(1 - alfa)*wF__**alfa*(1 - alfa)*(1 - alfa)**(alfa - 1)/(A*alfa**alfa*rkF__))
    row_ind.append(41); col_ind.append(155); jacobian.append(1)
    row_ind.append(42); col_ind.append(122); jacobian.append(-A*alfa*kF__m1_**(1 - alfa)*mcF__*nF__**(alfa - 1)*(alfa - 1)/nF__)
    row_ind.append(42); col_ind.append(123); jacobian.append(1)
    row_ind.append(42); col_ind.append(155); jacobian.append(-A*alfa*kF__m1_**(1 - alfa)*nF__**(alfa - 1))
    row_ind.append(42); col_ind.append(201); jacobian.append(-A*alfa*kF__m1_**(1 - alfa)*mcF__*nF__**(alfa - 1)*(1 - alfa)/kF__m1_)
    row_ind.append(43); col_ind.append(121); jacobian.append(1)
    row_ind.append(43); col_ind.append(125); jacobian.append(-1)
    row_ind.append(43); col_ind.append(201); jacobian.append(delta - 1)
    row_ind.append(44); col_ind.append(120); jacobian.append(1)
    row_ind.append(44); col_ind.append(125); jacobian.append(-1)
    row_ind.append(44); col_ind.append(126); jacobian.append(-1)
    row_ind.append(45); col_ind.append(122); jacobian.append(1)
    row_ind.append(45); col_ind.append(137); jacobian.append(-sF1__m1_)
    row_ind.append(45); col_ind.append(138); jacobian.append(-iF1__m1_)
    row_ind.append(45); col_ind.append(139); jacobian.append(-rF1__m1_)
    row_ind.append(45); col_ind.append(208); jacobian.append(-nsF__)
    row_ind.append(45); col_ind.append(211); jacobian.append(-niF__)
    row_ind.append(45); col_ind.append(214); jacobian.append(-nrF__)
    row_ind.append(46); col_ind.append(126); jacobian.append(1)
    row_ind.append(46); col_ind.append(140); jacobian.append(-sF1__m1_)
    row_ind.append(46); col_ind.append(141); jacobian.append(-iF1__m1_)
    row_ind.append(46); col_ind.append(142); jacobian.append(-rF1__m1_)
    row_ind.append(46); col_ind.append(208); jacobian.append(-csF__)
    row_ind.append(46); col_ind.append(211); jacobian.append(-ciF__)
    row_ind.append(46); col_ind.append(214); jacobian.append(-crF__)
    row_ind.append(47); col_ind.append(137); jacobian.append(-iF1__m1_*niF__*pi2*sF1__m1_*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(47); col_ind.append(138); jacobian.append(-iF1__m1_*nsF__*pi2*sF1__m1_*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(47); col_ind.append(140); jacobian.append(-ciF__*iF1__m1_*pi1*sF1__m1_*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(47); col_ind.append(141); jacobian.append(-csF__*iF1__m1_*pi1*sF1__m1_*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(47); col_ind.append(144); jacobian.append(1)
    row_ind.append(47); col_ind.append(208); jacobian.append(-(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*iF1__m1_*pi1 + iF1__m1_*niF__*nsF__*pi2 + iF1__m1_*pi3))
    row_ind.append(47); col_ind.append(211); jacobian.append(-(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*pi1*sF1__m1_ + niF__*nsF__*pi2*sF1__m1_ + pi3*sF1__m1_))
    row_ind.append(48); col_ind.append(137); jacobian.append(-iF2__m1_*niF__*pi2*sF2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(48); col_ind.append(138); jacobian.append(-iF2__m1_*nsF__*pi2*sF2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(48); col_ind.append(140); jacobian.append(-ciF__*iF2__m1_*pi1*sF2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(48); col_ind.append(141); jacobian.append(-csF__*iF2__m1_*pi1*sF2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2)
    row_ind.append(48); col_ind.append(145); jacobian.append(1)
    row_ind.append(48); col_ind.append(209); jacobian.append(-virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*iF2__m1_*pi1 + iF2__m1_*mult*pi3 + iF2__m1_*niF__*nsF__*pi2))
    row_ind.append(48); col_ind.append(212); jacobian.append(-virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*pi1*sF2__m1_ + mult*pi3*sF2__m1_ + niF__*nsF__*pi2*sF2__m1_))
    row_ind.append(49); col_ind.append(143); jacobian.append(1)
    row_ind.append(49); col_ind.append(144); jacobian.append(-1)
    row_ind.append(49); col_ind.append(145); jacobian.append(-1)
    row_ind.append(50); col_ind.append(128); jacobian.append(1)
    row_ind.append(50); col_ind.append(136); jacobian.append(1)
    row_ind.append(50); col_ind.append(144); jacobian.append(1)
    row_ind.append(50); col_ind.append(208); jacobian.append(-1)
    row_ind.append(51); col_ind.append(129); jacobian.append(1)
    row_ind.append(51); col_ind.append(145); jacobian.append(1)
    row_ind.append(51); col_ind.append(209); jacobian.append(-1)
    row_ind.append(52); col_ind.append(127); jacobian.append(1)
    row_ind.append(52); col_ind.append(136); jacobian.append(1)
    row_ind.append(52); col_ind.append(143); jacobian.append(1)
    row_ind.append(52); col_ind.append(207); jacobian.append(-1)
    row_ind.append(53); col_ind.append(131); jacobian.append(1)
    row_ind.append(53); col_ind.append(144); jacobian.append(-1)
    row_ind.append(53); col_ind.append(211); jacobian.append(pid + pir - 1)
    row_ind.append(53); col_ind.append(240); jacobian.append(-1)
    row_ind.append(54); col_ind.append(132); jacobian.append(1)
    row_ind.append(54); col_ind.append(145); jacobian.append(-virus_resistant_strain)
    row_ind.append(54); col_ind.append(212); jacobian.append(-virus_resistant_strain*(-pir - pid/mult2) - 1)
    row_ind.append(54); col_ind.append(241); jacobian.append(-1)
    row_ind.append(55); col_ind.append(130); jacobian.append(1)
    row_ind.append(55); col_ind.append(131); jacobian.append(-1)
    row_ind.append(55); col_ind.append(132); jacobian.append(-ex)
    row_ind.append(56); col_ind.append(134); jacobian.append(1)
    row_ind.append(56); col_ind.append(136); jacobian.append(-1)
    row_ind.append(56); col_ind.append(211); jacobian.append(-pir)
    row_ind.append(56); col_ind.append(214); jacobian.append(-1)
    row_ind.append(57); col_ind.append(135); jacobian.append(1)
    row_ind.append(57); col_ind.append(212); jacobian.append(-pir)
    row_ind.append(57); col_ind.append(215); jacobian.append(-1)
    row_ind.append(58); col_ind.append(133); jacobian.append(1)
    row_ind.append(58); col_ind.append(134); jacobian.append(-1)
    row_ind.append(58); col_ind.append(135); jacobian.append(-1)
    row_ind.append(59); col_ind.append(136); jacobian.append(1)
    row_ind.append(59); col_ind.append(208); jacobian.append(-vaccination_rate)
    row_ind.append(60); col_ind.append(151); jacobian.append(1)
    row_ind.append(60); col_ind.append(211); jacobian.append(-pid)
    row_ind.append(60); col_ind.append(212); jacobian.append(-pid/mult2)
    row_ind.append(60); col_ind.append(231); jacobian.append(-1)
    row_ind.append(60); col_ind.append(242); jacobian.append(-1)
    row_ind.append(61); col_ind.append(152); jacobian.append(1)
    row_ind.append(61); col_ind.append(211); jacobian.append(pid)
    row_ind.append(61); col_ind.append(212); jacobian.append(pid/mult2)
    row_ind.append(61); col_ind.append(232); jacobian.append(-1)
    row_ind.append(62); col_ind.append(140); jacobian.append(-1/csF__**2)
    row_ind.append(62); col_ind.append(141); jacobian.append(iF__m1_*lamtauF__*pi1)
    row_ind.append(62); col_ind.append(146); jacobian.append(-1)
    row_ind.append(62); col_ind.append(147); jacobian.append(ciF__*iF__m1_*pi1)
    row_ind.append(62); col_ind.append(210); jacobian.append(ciF__*lamtauF__*pi1)
    row_ind.append(63); col_ind.append(141); jacobian.append(-1/ciF__**2)
    row_ind.append(63); col_ind.append(146); jacobian.append(-1)
    row_ind.append(64); col_ind.append(142); jacobian.append(-1/crF__**2)
    row_ind.append(64); col_ind.append(146); jacobian.append(-1)
    row_ind.append(65); col_ind.append(123); jacobian.append(-lambtildeF__*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(65); col_ind.append(137); jacobian.append(theta)
    row_ind.append(65); col_ind.append(138); jacobian.append(-iF__m1_*lamtauF__*pi2*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(65); col_ind.append(146); jacobian.append(-wF__*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(65); col_ind.append(147); jacobian.append(-iF__m1_*niF__*pi2*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(65); col_ind.append(210); jacobian.append(-lamtauF__*niF__*pi2*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(66); col_ind.append(123); jacobian.append(-lambtildeF__*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(66); col_ind.append(138); jacobian.append(theta)
    row_ind.append(66); col_ind.append(146); jacobian.append(-wF__*(-lockdown_policy*theta_lockdown + 1))
    row_ind.append(67); col_ind.append(123); jacobian.append(-lambtildeF__)
    row_ind.append(67); col_ind.append(139); jacobian.append(theta)
    row_ind.append(67); col_ind.append(146); jacobian.append(-wF__)
    row_ind.append(68); col_ind.append(44); jacobian.append(-betta*lambtildeF__p1_)
    row_ind.append(68); col_ind.append(66); jacobian.append(-betta*(-delta + rkF__p1_ + 1))
    row_ind.append(68); col_ind.append(146); jacobian.append(1)
    row_ind.append(69); col_ind.append(147); jacobian.append(-1)
    row_ind.append(69); col_ind.append(148); jacobian.append(1)
    row_ind.append(69); col_ind.append(149); jacobian.append(-1)
    row_ind.append(70); col_ind.append(43); jacobian.append(lambtildeF__p1_*nsF__p1_)
    row_ind.append(70); col_ind.append(57); jacobian.append(iF__*lamtauF__p1_*niF__p1_*pi2 + lambtildeF__p1_*wF__p1_ - nsF__p1_*theta)
    row_ind.append(70); col_ind.append(58); jacobian.append(iF__*lamtauF__p1_*nsF__p1_*pi2)
    row_ind.append(70); col_ind.append(60); jacobian.append(ciF__p1_*iF__*lamtauF__p1_*pi1 - lambtildeF__p1_ + 1/csF__p1_)
    row_ind.append(70); col_ind.append(61); jacobian.append(csF__p1_*iF__*lamtauF__p1_*pi1)
    row_ind.append(70); col_ind.append(66); jacobian.append(-csF__p1_ + nsF__p1_*wF__p1_)
    row_ind.append(70); col_ind.append(67); jacobian.append(ciF__p1_*csF__p1_*iF__*pi1 + iF__*niF__p1_*nsF__p1_*pi2 + iF__*pi3)
    row_ind.append(70); col_ind.append(69); jacobian.append(1)
    row_ind.append(70); col_ind.append(130); jacobian.append(lamtauF__p1_*(ciF__p1_*csF__p1_*pi1 + niF__p1_*nsF__p1_*pi2 + pi3))
    row_ind.append(70); col_ind.append(149); jacobian.append(-1/betta)
    row_ind.append(71); col_ind.append(43); jacobian.append(lambtildeF__p1_*niF__p1_)
    row_ind.append(71); col_ind.append(58); jacobian.append(lambtildeF__p1_*wF__p1_ - niF__p1_*theta)
    row_ind.append(71); col_ind.append(61); jacobian.append(-lambtildeF__p1_ + 1/ciF__p1_)
    row_ind.append(71); col_ind.append(66); jacobian.append(-ciF__p1_ + niF__p1_*wF__p1_)
    row_ind.append(71); col_ind.append(70); jacobian.append(pir)
    row_ind.append(71); col_ind.append(148); jacobian.append(-pid - pir + 1 - 1/betta)
    row_ind.append(72); col_ind.append(43); jacobian.append(lambtildeF__p1_*nrF__p1_)
    row_ind.append(72); col_ind.append(59); jacobian.append(lambtildeF__p1_*wF__p1_ - nrF__p1_*theta)
    row_ind.append(72); col_ind.append(62); jacobian.append(-lambtildeF__p1_ + 1/crF__p1_)
    row_ind.append(72); col_ind.append(66); jacobian.append(-crF__p1_ + nrF__p1_*wF__p1_)
    row_ind.append(72); col_ind.append(70); jacobian.append(1)
    row_ind.append(72); col_ind.append(150); jacobian.append(-1/betta)
    row_ind.append(73); col_ind.append(66); jacobian.append(-RbF__*betta/pieF__p1_)
    row_ind.append(73); col_ind.append(74); jacobian.append(RbF__*betta*lambtildeF__p1_/pieF__p1_**2)
    row_ind.append(73); col_ind.append(146); jacobian.append(1)
    row_ind.append(73); col_ind.append(153); jacobian.append(-betta*lambtildeF__p1_/pieF__p1_)
    row_ind.append(74); col_ind.append(74); jacobian.append(RbF__/pieF__p1_**2)
    row_ind.append(74); col_ind.append(153); jacobian.append(-1/pieF__p1_)
    row_ind.append(74); col_ind.append(158); jacobian.append(1)
    row_ind.append(75); col_ind.append(74); jacobian.append(-KfF__p1_*betta*gam*pieF__p1_**(gam/(gam - 1))*xi_flex/(pieF__p1_*(gam - 1)))
    row_ind.append(75); col_ind.append(77); jacobian.append(-betta*pieF__p1_**(gam/(gam - 1))*xi_flex)
    row_ind.append(75); col_ind.append(120); jacobian.append(-gam*lambtildeF__*mcF__)
    row_ind.append(75); col_ind.append(146); jacobian.append(-gam*mcF__*yF__)
    row_ind.append(75); col_ind.append(155); jacobian.append(-gam*lambtildeF__*yF__)
    row_ind.append(75); col_ind.append(157); jacobian.append(1)
    row_ind.append(76); col_ind.append(74); jacobian.append(-FF__p1_*betta*pieF__p1_**(1/(gam - 1))*xi_flex/(pieF__p1_*(gam - 1)))
    row_ind.append(76); col_ind.append(76); jacobian.append(-betta*pieF__p1_**(1/(gam - 1))*xi_flex)
    row_ind.append(76); col_ind.append(120); jacobian.append(-lambtildeF__)
    row_ind.append(76); col_ind.append(146); jacobian.append(-yF__)
    row_ind.append(76); col_ind.append(156); jacobian.append(1)
    row_ind.append(77); col_ind.append(154); jacobian.append(FF__*pieF__**(1/(gam - 1))*xi_flex*((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**(1 - gam)*(1 - gam)/(pieF__*(gam - 1)*(-pieF__**(1/(gam - 1))*xi_flex + 1)))
    row_ind.append(77); col_ind.append(156); jacobian.append(-((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**(1 - gam))
    row_ind.append(77); col_ind.append(157); jacobian.append(1)
    row_ind.append(78); col_ind.append(154); jacobian.append(gam*pieF__**(1/(gam - 1))*xi_flex*((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**gam*(1 - xi_flex)/(pieF__*(gam - 1)*(-pieF__**(1/(gam - 1))*xi_flex + 1)) - gam*pieF__**(gam/(gam - 1))*xi_flex/(pbreveF__m1_*pieF__*(gam - 1)))
    row_ind.append(78); col_ind.append(159); jacobian.append(-1/pbreveF__**2)
    row_ind.append(78); col_ind.append(239); jacobian.append(pieF__**(gam/(gam - 1))*xi_flex/pbreveF__m1_**2)
    row_ind.append(79); col_ind.append(153); jacobian.append(1)
    row_ind.append(79); col_ind.append(154); jacobian.append(-rpi/pieF__)

    if order == 1:
        return [function, jacobian, row_ind, col_ind]
