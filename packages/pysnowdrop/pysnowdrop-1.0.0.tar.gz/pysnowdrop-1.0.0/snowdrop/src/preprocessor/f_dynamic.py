from numba import njit
    
@njit
def f_dynamic(x, p, exog=[0], order=1, ind=None):
        
    ### This code was generated by Python.
    ### Eichenbaum, Rebelo and Trabandt Model with Resistant Virus Strain.
    
    # First order derivatives are employed in most of the models to compute Jacobian.
    # Higher order derivatives are used in nonlinear rational expectations models.
    
    from scipy.special import lambertw as LambertW
    from snowdrop.src.preprocessor.functions import Heaviside,Max,Min,Abs,DiracDelta
    from snowdrop.src.preprocessor.condition import IfThenElse,IfThen,Derivative,Subs,Positive,Negative,myzif

    import numpy as np
    from numpy import exp, sin, cos, tan, sqrt, sign, log
        
    # Initialize variables
    _xi_1 = 0 
    _xi_2 = 0 
    _xi_3 = 0 
    w__p1_ = x[3]
    rk__p1_ = x[4]
    ns__p1_ = x[17]
    ni__p1_ = x[18]
    nr__p1_ = x[19]
    cs__p1_ = x[20]
    ci__p1_ = x[21]
    cr__p1_ = x[22]
    lambtilde__p1_ = x[26]
    lamtau__p1_ = x[27]
    lami__p1_ = x[28]
    lams__p1_ = x[29]
    lamr__p1_ = x[30]
    pie__p1_ = x[34]
    F__p1_ = x[36]
    Kf__p1_ = x[37]
    wF__p1_ = x[43]
    rkF__p1_ = x[44]
    nsF__p1_ = x[57]
    niF__p1_ = x[58]
    nrF__p1_ = x[59]
    csF__p1_ = x[60]
    ciF__p1_ = x[61]
    crF__p1_ = x[62]
    lambtildeF__p1_ = x[66]
    lamtauF__p1_ = x[67]
    lamsF__p1_ = x[69]
    lamrF__p1_ = x[70]
    pieF__p1_ = x[74]
    FF__p1_ = x[76]
    KfF__p1_ = x[77]
    y__ = x[80]
    k__ = x[81]
    n__ = x[82]
    w__ = x[83]
    rk__ = x[84]
    x__ = x[85]
    c__ = x[86]
    s__ = x[87]
    s1__ = x[88]
    s2__ = x[89]
    i__ = x[90]
    i1__ = x[91]
    i2__ = x[92]
    r__ = x[93]
    r1__ = x[94]
    r2__ = x[95]
    v__ = x[96]
    ns__ = x[97]
    ni__ = x[98]
    nr__ = x[99]
    cs__ = x[100]
    ci__ = x[101]
    cr__ = x[102]
    tau__ = x[103]
    tau1__ = x[104]
    tau2__ = x[105]
    lambtilde__ = x[106]
    lamtau__ = x[107]
    lami__ = x[108]
    lams__ = x[109]
    lamr__ = x[110]
    dd__ = x[111]
    pop__ = x[112]
    Rb__ = x[113]
    pie__ = x[114]
    mc__ = x[115]
    F__ = x[116]
    Kf__ = x[117]
    rr__ = x[118]
    pbreve__ = x[119]
    yF__ = x[120]
    kF__ = x[121]
    nF__ = x[122]
    wF__ = x[123]
    rkF__ = x[124]
    xF__ = x[125]
    cF__ = x[126]
    sF__ = x[127]
    sF1__ = x[128]
    sF2__ = x[129]
    iF__ = x[130]
    iF1__ = x[131]
    iF2__ = x[132]
    rF__ = x[133]
    rF1__ = x[134]
    rF2__ = x[135]
    vF__ = x[136]
    nsF__ = x[137]
    niF__ = x[138]
    nrF__ = x[139]
    csF__ = x[140]
    ciF__ = x[141]
    crF__ = x[142]
    tauF__ = x[143]
    tauF1__ = x[144]
    tauF2__ = x[145]
    lambtildeF__ = x[146]
    lamtauF__ = x[147]
    lamiF__ = x[148]
    lamsF__ = x[149]
    lamrF__ = x[150]
    ddF__ = x[151]
    popF__ = x[152]
    RbF__ = x[153]
    pieF__ = x[154]
    mcF__ = x[155]
    FF__ = x[156]
    KfF__ = x[157]
    rrF__ = x[158]
    pbreveF__ = x[159]
    k__m1_ = x[161]
    s__m1_ = x[167]
    s1__m1_ = x[168]
    s2__m1_ = x[169]
    i__m1_ = x[170]
    i1__m1_ = x[171]
    i2__m1_ = x[172]
    r1__m1_ = x[174]
    r2__m1_ = x[175]
    dd__m1_ = x[191]
    pop__m1_ = x[192]
    pbreve__m1_ = x[199]
    kF__m1_ = x[201]
    sF__m1_ = x[207]
    sF1__m1_ = x[208]
    sF2__m1_ = x[209]
    iF__m1_ = x[210]
    iF1__m1_ = x[211]
    iF2__m1_ = x[212]
    rF1__m1_ = x[214]
    rF2__m1_ = x[215]
    ddF__m1_ = x[231]
    popF__m1_ = x[232]
    pbreveF__m1_ = x[239]
    ei1__ = x[240]
    ei2__ = x[241]
    ed__ = x[242]

    # Set parameters
    xi = p[0]
    rpi = p[1]
    rx = p[2]
    gam = p[3]
    pi1 = p[4]
    pi2 = p[5]
    pi3 = p[6]
    mult = p[7]
    mult2 = p[8]
    pir = p[9]
    pid = p[10]
    betta = p[11]
    i_ini = p[12]
    d_ini = p[13]
    A = p[14]
    theta = p[15]
    alfa = p[16]
    inc_target = p[17]
    n_target = p[18]
    delta = p[19]
    g_ss = p[20]
    eta = p[21]
    xi_flex = p[22]
    pie_ss = p[23]
    rr_ss = p[24]
    Rb_ss = p[25]
    lockdown_policy = p[26]
    sigma = p[27]
    theta_lockdown = p[28]
    vaccination_policy = p[29]
    vaccination_rate = p[30]
    virus_resistant_strain = p[31]
    virus_variant_start = p[32]
    ex = p[33]

    # Function:
    function = np.zeros(80)
    function[0] = -A*k__m1_**(1 - alfa)*n__**alfa*pbreve__ + y__
    function[1] = mc__ - rk__**(1 - alfa)*w__**alfa*(1 - alfa)**(alfa - 1)/(A*alfa**alfa)
    function[2] = -A*alfa*k__m1_**(1 - alfa)*mc__*n__**(alfa - 1) + w__
    function[3] = k__ - k__m1_*(1 - delta) - x__
    function[4] = -c__ - g_ss - x__ + y__
    function[5] = -i1__m1_*ni__ + n__ - nr__*r1__m1_ - ns__*s1__m1_
    function[6] = c__ - ci__*i1__m1_ - cr__*r1__m1_ - cs__*s1__m1_
    function[7] = tau1__ - (-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*i1__m1_*pi1*s1__m1_ + i1__m1_*ni__*ns__*pi2*s1__m1_ + i1__m1_*pi3*s1__m1_)
    function[8] = tau2__ - virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*i2__m1_*pi1*s2__m1_ + i2__m1_*mult*pi3*s2__m1_ + i2__m1_*ni__*ns__*pi2*s2__m1_)
    function[9] = -tau1__ - tau2__ + tau__
    function[10] = s1__ - s1__m1_ + tau1__ + v__
    function[11] = s2__ - s2__m1_ + tau2__
    function[12] = s__ - s__m1_ + tau__ + v__
    function[13] = -ei1__ + i1__ + i1__m1_*(pid + pir) - i1__m1_ - tau1__
    function[14] = -ei2__ + i2__ - i2__m1_ - virus_resistant_strain*(-i2__m1_*(pir + pid/mult2) + tau2__)
    function[15] = -ex*i2__ - i1__ + i__
    function[16] = -i1__m1_*pir + r1__ - r1__m1_ - v__
    function[17] = -i2__m1_*pir + r2__ - r2__m1_
    function[18] = -r1__ - r2__ + r__
    function[19] = -s1__m1_*vaccination_rate + v__
    function[20] = dd__ - dd__m1_ - ed__ - i1__m1_*pid - i2__m1_*pid/mult2
    function[21] = i1__m1_*pid + i2__m1_*pid/mult2 + pop__ - pop__m1_
    function[22] = ci__*i__m1_*lamtau__*pi1 - lambtilde__ + 1/cs__
    function[23] = -lambtilde__ + 1/ci__
    function[24] = -lambtilde__ + 1/cr__
    function[25] = ns__*theta - (-lockdown_policy*theta_lockdown + 1)*(i__m1_*lamtau__*ni__*pi2 + lambtilde__*w__)
    function[26] = -lambtilde__*w__*(-lockdown_policy*theta_lockdown + 1) + ni__*theta
    function[27] = -lambtilde__*w__ + nr__*theta
    function[28] = -betta*lambtilde__p1_*(-delta + rk__p1_ + 1) + lambtilde__
    function[29] = lami__ - lams__ - lamtau__
    function[30] = lambtilde__p1_*(-cs__p1_ + ns__p1_*w__p1_) + lams__p1_ + lamtau__p1_*(ci__p1_*cs__p1_*i__*pi1 + i__*ni__p1_*ns__p1_*pi2 + i__*pi3) - ns__p1_**2*theta/2 + log(cs__p1_) - lams__/betta
    function[31] = lambtilde__p1_*(-ci__p1_ + ni__p1_*w__p1_) + lami__p1_*(-pid - pir + 1) + lamr__p1_*pir - ni__p1_**2*theta/2 + log(ci__p1_) - lami__/betta
    function[32] = lambtilde__p1_*(-cr__p1_ + nr__p1_*w__p1_) + lamr__p1_ - nr__p1_**2*theta/2 + log(cr__p1_) - lamr__/betta
    function[33] = -Rb__*betta*lambtilde__p1_/pie__p1_ + lambtilde__
    function[34] = -Rb__/pie__p1_ + rr__
    function[35] = Kf__ - Kf__p1_*betta*pie__p1_**(gam/(gam - 1))*xi - gam*lambtilde__*mc__*y__
    function[36] = F__ - F__p1_*betta*pie__p1_**(1/(gam - 1))*xi - lambtilde__*y__
    function[37] = -F__*((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**(1 - gam) + Kf__
    function[38] = -((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**gam*(1 - xi) - pie__**(gam/(gam - 1))*xi/pbreve__m1_ + 1/pbreve__
    function[39] = Rb__ - rpi*log(pie__/pie_ss) - rr_ss - rx*log(y__/yF__)
    function[40] = -A*kF__m1_**(1 - alfa)*nF__**alfa*pbreveF__ + yF__
    function[41] = mcF__ - rkF__**(1 - alfa)*wF__**alfa*(1 - alfa)**(alfa - 1)/(A*alfa**alfa)
    function[42] = -A*alfa*kF__m1_**(1 - alfa)*mcF__*nF__**(alfa - 1) + wF__
    function[43] = kF__ - kF__m1_*(1 - delta) - xF__
    function[44] = -cF__ - g_ss - xF__ + yF__
    function[45] = -iF1__m1_*niF__ + nF__ - nrF__*rF1__m1_ - nsF__*sF1__m1_
    function[46] = cF__ - ciF__*iF1__m1_ - crF__*rF1__m1_ - csF__*sF1__m1_
    function[47] = tauF1__ - (-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*iF1__m1_*pi1*sF1__m1_ + iF1__m1_*niF__*nsF__*pi2*sF1__m1_ + iF1__m1_*pi3*sF1__m1_)
    function[48] = tauF2__ - virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*iF2__m1_*pi1*sF2__m1_ + iF2__m1_*mult*pi3*sF2__m1_ + iF2__m1_*niF__*nsF__*pi2*sF2__m1_)
    function[49] = -tauF1__ - tauF2__ + tauF__
    function[50] = sF1__ - sF1__m1_ + tauF1__ + vF__
    function[51] = sF2__ - sF2__m1_ + tauF2__
    function[52] = sF__ - sF__m1_ + tauF__ + vF__
    function[53] = -ei1__ + iF1__ + iF1__m1_*(pid + pir) - iF1__m1_ - tauF1__
    function[54] = -ei2__ + iF2__ - iF2__m1_ - virus_resistant_strain*(-iF2__m1_*(pir + pid/mult2) + tauF2__)
    function[55] = -ex*iF2__ - iF1__ + iF__
    function[56] = -iF1__m1_*pir + rF1__ - rF1__m1_ - vF__
    function[57] = -iF2__m1_*pir + rF2__ - rF2__m1_
    function[58] = -rF1__ - rF2__ + rF__
    function[59] = -sF1__m1_*vaccination_rate + vF__
    function[60] = ddF__ - ddF__m1_ - ed__ - iF1__m1_*pid - iF2__m1_*pid/mult2
    function[61] = iF1__m1_*pid + iF2__m1_*pid/mult2 + popF__ - popF__m1_
    function[62] = ciF__*iF__m1_*lamtauF__*pi1 - lambtildeF__ + 1/csF__
    function[63] = -lambtildeF__ + 1/ciF__
    function[64] = -lambtildeF__ + 1/crF__
    function[65] = nsF__*theta - (-lockdown_policy*theta_lockdown + 1)*(iF__m1_*lamtauF__*niF__*pi2 + lambtildeF__*wF__)
    function[66] = -lambtildeF__*wF__*(-lockdown_policy*theta_lockdown + 1) + niF__*theta
    function[67] = -lambtildeF__*wF__ + nrF__*theta
    function[68] = -betta*lambtildeF__p1_*(-delta + rkF__p1_ + 1) + lambtildeF__
    function[69] = lamiF__ - lamsF__ - lamtauF__
    function[70] = lambtildeF__p1_*(-csF__p1_ + nsF__p1_*wF__p1_) + lamsF__p1_ + lamtauF__p1_*(ciF__p1_*csF__p1_*iF__*pi1 + iF__*niF__p1_*nsF__p1_*pi2 + iF__*pi3) - nsF__p1_**2*theta/2 + log(csF__p1_) - lamsF__/betta
    function[71] = lambtildeF__p1_*(-ciF__p1_ + niF__p1_*wF__p1_) + lamiF__*(-pid - pir + 1) + lamrF__p1_*pir - niF__p1_**2*theta/2 + log(ciF__p1_) - lamiF__/betta
    function[72] = lambtildeF__p1_*(-crF__p1_ + nrF__p1_*wF__p1_) + lamrF__p1_ - nrF__p1_**2*theta/2 + log(crF__p1_) - lamrF__/betta
    function[73] = -RbF__*betta*lambtildeF__p1_/pieF__p1_ + lambtildeF__
    function[74] = -RbF__/pieF__p1_ + rrF__
    function[75] = KfF__ - KfF__p1_*betta*pieF__p1_**(gam/(gam - 1))*xi_flex - gam*lambtildeF__*mcF__*yF__
    function[76] = FF__ - FF__p1_*betta*pieF__p1_**(1/(gam - 1))*xi_flex - lambtildeF__*yF__
    function[77] = -FF__*((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**(1 - gam) + KfF__
    function[78] = -((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**gam*(1 - xi_flex) - pieF__**(gam/(gam - 1))*xi_flex/pbreveF__m1_ + 1/pbreveF__
    function[79] = RbF__ - Rb_ss - rpi*log(pieF__/pie_ss)

    if order == 0:
        return function
    
    # Jacobian: 
    jacobian = np.zeros((80,243))
    jacobian[0,80] = 1
    jacobian[0,82] = -A*alfa*k__m1_**(1 - alfa)*n__**alfa*pbreve__/n__
    jacobian[0,119] = -A*k__m1_**(1 - alfa)*n__**alfa
    jacobian[0,161] = -A*k__m1_**(1 - alfa)*n__**alfa*pbreve__*(1 - alfa)/k__m1_
    jacobian[1,83] = -alfa*rk__**(1 - alfa)*w__**alfa*(1 - alfa)**(alfa - 1)/(A*alfa**alfa*w__)
    jacobian[1,84] = -rk__**(1 - alfa)*w__**alfa*(1 - alfa)*(1 - alfa)**(alfa - 1)/(A*alfa**alfa*rk__)
    jacobian[1,115] = 1
    jacobian[2,82] = -A*alfa*k__m1_**(1 - alfa)*mc__*n__**(alfa - 1)*(alfa - 1)/n__
    jacobian[2,83] = 1
    jacobian[2,115] = -A*alfa*k__m1_**(1 - alfa)*n__**(alfa - 1)
    jacobian[2,161] = -A*alfa*k__m1_**(1 - alfa)*mc__*n__**(alfa - 1)*(1 - alfa)/k__m1_
    jacobian[3,81] = 1
    jacobian[3,85] = -1
    jacobian[3,161] = delta - 1
    jacobian[4,80] = 1
    jacobian[4,85] = -1
    jacobian[4,86] = -1
    jacobian[5,82] = 1
    jacobian[5,97] = -s1__m1_
    jacobian[5,98] = -i1__m1_
    jacobian[5,99] = -r1__m1_
    jacobian[5,168] = -ns__
    jacobian[5,171] = -ni__
    jacobian[5,174] = -nr__
    jacobian[6,86] = 1
    jacobian[6,100] = -s1__m1_
    jacobian[6,101] = -i1__m1_
    jacobian[6,102] = -r1__m1_
    jacobian[6,168] = -cs__
    jacobian[6,171] = -ci__
    jacobian[6,174] = -cr__
    jacobian[7,97] = -i1__m1_*ni__*pi2*s1__m1_*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[7,98] = -i1__m1_*ns__*pi2*s1__m1_*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[7,100] = -ci__*i1__m1_*pi1*s1__m1_*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[7,101] = -cs__*i1__m1_*pi1*s1__m1_*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[7,104] = 1
    jacobian[7,168] = -(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*i1__m1_*pi1 + i1__m1_*ni__*ns__*pi2 + i1__m1_*pi3)
    jacobian[7,171] = -(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*pi1*s1__m1_ + ni__*ns__*pi2*s1__m1_ + pi3*s1__m1_)
    jacobian[8,97] = -i2__m1_*ni__*pi2*s2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[8,98] = -i2__m1_*ns__*pi2*s2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[8,100] = -ci__*i2__m1_*pi1*s2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[8,101] = -cs__*i2__m1_*pi1*s2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[8,105] = 1
    jacobian[8,169] = -virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*i2__m1_*pi1 + i2__m1_*mult*pi3 + i2__m1_*ni__*ns__*pi2)
    jacobian[8,172] = -virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ci__*cs__*pi1*s2__m1_ + mult*pi3*s2__m1_ + ni__*ns__*pi2*s2__m1_)
    jacobian[9,103] = 1
    jacobian[9,104] = -1
    jacobian[9,105] = -1
    jacobian[10,88] = 1
    jacobian[10,96] = 1
    jacobian[10,104] = 1
    jacobian[10,168] = -1
    jacobian[11,89] = 1
    jacobian[11,105] = 1
    jacobian[11,169] = -1
    jacobian[12,87] = 1
    jacobian[12,96] = 1
    jacobian[12,103] = 1
    jacobian[12,167] = -1
    jacobian[13,91] = 1
    jacobian[13,104] = -1
    jacobian[13,171] = pid + pir - 1
    jacobian[13,240] = -1
    jacobian[14,92] = 1
    jacobian[14,105] = -virus_resistant_strain
    jacobian[14,172] = -virus_resistant_strain*(-pir - pid/mult2) - 1
    jacobian[14,241] = -1
    jacobian[15,90] = 1
    jacobian[15,91] = -1
    jacobian[15,92] = -ex
    jacobian[16,94] = 1
    jacobian[16,96] = -1
    jacobian[16,171] = -pir
    jacobian[16,174] = -1
    jacobian[17,95] = 1
    jacobian[17,172] = -pir
    jacobian[17,175] = -1
    jacobian[18,93] = 1
    jacobian[18,94] = -1
    jacobian[18,95] = -1
    jacobian[19,96] = 1
    jacobian[19,168] = -vaccination_rate
    jacobian[20,111] = 1
    jacobian[20,171] = -pid
    jacobian[20,172] = -pid/mult2
    jacobian[20,191] = -1
    jacobian[20,242] = -1
    jacobian[21,112] = 1
    jacobian[21,171] = pid
    jacobian[21,172] = pid/mult2
    jacobian[21,192] = -1
    jacobian[22,100] = -1/cs__**2
    jacobian[22,101] = i__m1_*lamtau__*pi1
    jacobian[22,106] = -1
    jacobian[22,107] = ci__*i__m1_*pi1
    jacobian[22,170] = ci__*lamtau__*pi1
    jacobian[23,101] = -1/ci__**2
    jacobian[23,106] = -1
    jacobian[24,102] = -1/cr__**2
    jacobian[24,106] = -1
    jacobian[25,83] = -lambtilde__*(-lockdown_policy*theta_lockdown + 1)
    jacobian[25,97] = theta
    jacobian[25,98] = -i__m1_*lamtau__*pi2*(-lockdown_policy*theta_lockdown + 1)
    jacobian[25,106] = -w__*(-lockdown_policy*theta_lockdown + 1)
    jacobian[25,107] = -i__m1_*ni__*pi2*(-lockdown_policy*theta_lockdown + 1)
    jacobian[25,170] = -lamtau__*ni__*pi2*(-lockdown_policy*theta_lockdown + 1)
    jacobian[26,83] = -lambtilde__*(-lockdown_policy*theta_lockdown + 1)
    jacobian[26,98] = theta
    jacobian[26,106] = -w__*(-lockdown_policy*theta_lockdown + 1)
    jacobian[27,83] = -lambtilde__
    jacobian[27,99] = theta
    jacobian[27,106] = -w__
    jacobian[28,4] = -betta*lambtilde__p1_
    jacobian[28,26] = -betta*(-delta + rk__p1_ + 1)
    jacobian[28,106] = 1
    jacobian[29,107] = -1
    jacobian[29,108] = 1
    jacobian[29,109] = -1
    jacobian[30,3] = lambtilde__p1_*ns__p1_
    jacobian[30,17] = i__*lamtau__p1_*ni__p1_*pi2 + lambtilde__p1_*w__p1_ - ns__p1_*theta
    jacobian[30,18] = i__*lamtau__p1_*ns__p1_*pi2
    jacobian[30,20] = ci__p1_*i__*lamtau__p1_*pi1 - lambtilde__p1_ + 1/cs__p1_
    jacobian[30,21] = cs__p1_*i__*lamtau__p1_*pi1
    jacobian[30,26] = -cs__p1_ + ns__p1_*w__p1_
    jacobian[30,27] = ci__p1_*cs__p1_*i__*pi1 + i__*ni__p1_*ns__p1_*pi2 + i__*pi3
    jacobian[30,29] = 1
    jacobian[30,90] = lamtau__p1_*(ci__p1_*cs__p1_*pi1 + ni__p1_*ns__p1_*pi2 + pi3)
    jacobian[30,109] = -1/betta
    jacobian[31,3] = lambtilde__p1_*ni__p1_
    jacobian[31,18] = lambtilde__p1_*w__p1_ - ni__p1_*theta
    jacobian[31,21] = -lambtilde__p1_ + 1/ci__p1_
    jacobian[31,26] = -ci__p1_ + ni__p1_*w__p1_
    jacobian[31,28] = -pid - pir + 1
    jacobian[31,30] = pir
    jacobian[31,108] = -1/betta
    jacobian[32,3] = lambtilde__p1_*nr__p1_
    jacobian[32,19] = lambtilde__p1_*w__p1_ - nr__p1_*theta
    jacobian[32,22] = -lambtilde__p1_ + 1/cr__p1_
    jacobian[32,26] = -cr__p1_ + nr__p1_*w__p1_
    jacobian[32,30] = 1
    jacobian[32,110] = -1/betta
    jacobian[33,26] = -Rb__*betta/pie__p1_
    jacobian[33,34] = Rb__*betta*lambtilde__p1_/pie__p1_**2
    jacobian[33,106] = 1
    jacobian[33,113] = -betta*lambtilde__p1_/pie__p1_
    jacobian[34,34] = Rb__/pie__p1_**2
    jacobian[34,113] = -1/pie__p1_
    jacobian[34,118] = 1
    jacobian[35,34] = -Kf__p1_*betta*gam*pie__p1_**(gam/(gam - 1))*xi/(pie__p1_*(gam - 1))
    jacobian[35,37] = -betta*pie__p1_**(gam/(gam - 1))*xi
    jacobian[35,80] = -gam*lambtilde__*mc__
    jacobian[35,106] = -gam*mc__*y__
    jacobian[35,115] = -gam*lambtilde__*y__
    jacobian[35,117] = 1
    jacobian[36,34] = -F__p1_*betta*pie__p1_**(1/(gam - 1))*xi/(pie__p1_*(gam - 1))
    jacobian[36,36] = -betta*pie__p1_**(1/(gam - 1))*xi
    jacobian[36,80] = -lambtilde__
    jacobian[36,106] = -y__
    jacobian[36,116] = 1
    jacobian[37,114] = F__*pie__**(1/(gam - 1))*xi*((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**(1 - gam)*(1 - gam)/(pie__*(gam - 1)*(-pie__**(1/(gam - 1))*xi + 1))
    jacobian[37,116] = -((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**(1 - gam)
    jacobian[37,117] = 1
    jacobian[38,114] = gam*pie__**(1/(gam - 1))*xi*((-pie__**(1/(gam - 1))*xi + 1)/(1 - xi))**gam*(1 - xi)/(pie__*(gam - 1)*(-pie__**(1/(gam - 1))*xi + 1)) - gam*pie__**(gam/(gam - 1))*xi/(pbreve__m1_*pie__*(gam - 1))
    jacobian[38,119] = -1/pbreve__**2
    jacobian[38,199] = pie__**(gam/(gam - 1))*xi/pbreve__m1_**2
    jacobian[39,80] = -rx/y__
    jacobian[39,113] = 1
    jacobian[39,114] = -rpi/pie__
    jacobian[39,120] = rx/yF__
    jacobian[40,120] = 1
    jacobian[40,122] = -A*alfa*kF__m1_**(1 - alfa)*nF__**alfa*pbreveF__/nF__
    jacobian[40,159] = -A*kF__m1_**(1 - alfa)*nF__**alfa
    jacobian[40,201] = -A*kF__m1_**(1 - alfa)*nF__**alfa*pbreveF__*(1 - alfa)/kF__m1_
    jacobian[41,123] = -alfa*rkF__**(1 - alfa)*wF__**alfa*(1 - alfa)**(alfa - 1)/(A*alfa**alfa*wF__)
    jacobian[41,124] = -rkF__**(1 - alfa)*wF__**alfa*(1 - alfa)*(1 - alfa)**(alfa - 1)/(A*alfa**alfa*rkF__)
    jacobian[41,155] = 1
    jacobian[42,122] = -A*alfa*kF__m1_**(1 - alfa)*mcF__*nF__**(alfa - 1)*(alfa - 1)/nF__
    jacobian[42,123] = 1
    jacobian[42,155] = -A*alfa*kF__m1_**(1 - alfa)*nF__**(alfa - 1)
    jacobian[42,201] = -A*alfa*kF__m1_**(1 - alfa)*mcF__*nF__**(alfa - 1)*(1 - alfa)/kF__m1_
    jacobian[43,121] = 1
    jacobian[43,125] = -1
    jacobian[43,201] = delta - 1
    jacobian[44,120] = 1
    jacobian[44,125] = -1
    jacobian[44,126] = -1
    jacobian[45,122] = 1
    jacobian[45,137] = -sF1__m1_
    jacobian[45,138] = -iF1__m1_
    jacobian[45,139] = -rF1__m1_
    jacobian[45,208] = -nsF__
    jacobian[45,211] = -niF__
    jacobian[45,214] = -nrF__
    jacobian[46,126] = 1
    jacobian[46,140] = -sF1__m1_
    jacobian[46,141] = -iF1__m1_
    jacobian[46,142] = -rF1__m1_
    jacobian[46,208] = -csF__
    jacobian[46,211] = -ciF__
    jacobian[46,214] = -crF__
    jacobian[47,137] = -iF1__m1_*niF__*pi2*sF1__m1_*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[47,138] = -iF1__m1_*nsF__*pi2*sF1__m1_*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[47,140] = -ciF__*iF1__m1_*pi1*sF1__m1_*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[47,141] = -csF__*iF1__m1_*pi1*sF1__m1_*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[47,144] = 1
    jacobian[47,208] = -(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*iF1__m1_*pi1 + iF1__m1_*niF__*nsF__*pi2 + iF1__m1_*pi3)
    jacobian[47,211] = -(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*pi1*sF1__m1_ + niF__*nsF__*pi2*sF1__m1_ + pi3*sF1__m1_)
    jacobian[48,137] = -iF2__m1_*niF__*pi2*sF2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[48,138] = -iF2__m1_*nsF__*pi2*sF2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[48,140] = -ciF__*iF2__m1_*pi1*sF2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[48,141] = -csF__*iF2__m1_*pi1*sF2__m1_*virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2
    jacobian[48,145] = 1
    jacobian[48,209] = -virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*iF2__m1_*pi1 + iF2__m1_*mult*pi3 + iF2__m1_*niF__*nsF__*pi2)
    jacobian[48,212] = -virus_resistant_strain*(-lockdown_policy*theta_lockdown + 1)**2*(ciF__*csF__*pi1*sF2__m1_ + mult*pi3*sF2__m1_ + niF__*nsF__*pi2*sF2__m1_)
    jacobian[49,143] = 1
    jacobian[49,144] = -1
    jacobian[49,145] = -1
    jacobian[50,128] = 1
    jacobian[50,136] = 1
    jacobian[50,144] = 1
    jacobian[50,208] = -1
    jacobian[51,129] = 1
    jacobian[51,145] = 1
    jacobian[51,209] = -1
    jacobian[52,127] = 1
    jacobian[52,136] = 1
    jacobian[52,143] = 1
    jacobian[52,207] = -1
    jacobian[53,131] = 1
    jacobian[53,144] = -1
    jacobian[53,211] = pid + pir - 1
    jacobian[53,240] = -1
    jacobian[54,132] = 1
    jacobian[54,145] = -virus_resistant_strain
    jacobian[54,212] = -virus_resistant_strain*(-pir - pid/mult2) - 1
    jacobian[54,241] = -1
    jacobian[55,130] = 1
    jacobian[55,131] = -1
    jacobian[55,132] = -ex
    jacobian[56,134] = 1
    jacobian[56,136] = -1
    jacobian[56,211] = -pir
    jacobian[56,214] = -1
    jacobian[57,135] = 1
    jacobian[57,212] = -pir
    jacobian[57,215] = -1
    jacobian[58,133] = 1
    jacobian[58,134] = -1
    jacobian[58,135] = -1
    jacobian[59,136] = 1
    jacobian[59,208] = -vaccination_rate
    jacobian[60,151] = 1
    jacobian[60,211] = -pid
    jacobian[60,212] = -pid/mult2
    jacobian[60,231] = -1
    jacobian[60,242] = -1
    jacobian[61,152] = 1
    jacobian[61,211] = pid
    jacobian[61,212] = pid/mult2
    jacobian[61,232] = -1
    jacobian[62,140] = -1/csF__**2
    jacobian[62,141] = iF__m1_*lamtauF__*pi1
    jacobian[62,146] = -1
    jacobian[62,147] = ciF__*iF__m1_*pi1
    jacobian[62,210] = ciF__*lamtauF__*pi1
    jacobian[63,141] = -1/ciF__**2
    jacobian[63,146] = -1
    jacobian[64,142] = -1/crF__**2
    jacobian[64,146] = -1
    jacobian[65,123] = -lambtildeF__*(-lockdown_policy*theta_lockdown + 1)
    jacobian[65,137] = theta
    jacobian[65,138] = -iF__m1_*lamtauF__*pi2*(-lockdown_policy*theta_lockdown + 1)
    jacobian[65,146] = -wF__*(-lockdown_policy*theta_lockdown + 1)
    jacobian[65,147] = -iF__m1_*niF__*pi2*(-lockdown_policy*theta_lockdown + 1)
    jacobian[65,210] = -lamtauF__*niF__*pi2*(-lockdown_policy*theta_lockdown + 1)
    jacobian[66,123] = -lambtildeF__*(-lockdown_policy*theta_lockdown + 1)
    jacobian[66,138] = theta
    jacobian[66,146] = -wF__*(-lockdown_policy*theta_lockdown + 1)
    jacobian[67,123] = -lambtildeF__
    jacobian[67,139] = theta
    jacobian[67,146] = -wF__
    jacobian[68,44] = -betta*lambtildeF__p1_
    jacobian[68,66] = -betta*(-delta + rkF__p1_ + 1)
    jacobian[68,146] = 1
    jacobian[69,147] = -1
    jacobian[69,148] = 1
    jacobian[69,149] = -1
    jacobian[70,43] = lambtildeF__p1_*nsF__p1_
    jacobian[70,57] = iF__*lamtauF__p1_*niF__p1_*pi2 + lambtildeF__p1_*wF__p1_ - nsF__p1_*theta
    jacobian[70,58] = iF__*lamtauF__p1_*nsF__p1_*pi2
    jacobian[70,60] = ciF__p1_*iF__*lamtauF__p1_*pi1 - lambtildeF__p1_ + 1/csF__p1_
    jacobian[70,61] = csF__p1_*iF__*lamtauF__p1_*pi1
    jacobian[70,66] = -csF__p1_ + nsF__p1_*wF__p1_
    jacobian[70,67] = ciF__p1_*csF__p1_*iF__*pi1 + iF__*niF__p1_*nsF__p1_*pi2 + iF__*pi3
    jacobian[70,69] = 1
    jacobian[70,130] = lamtauF__p1_*(ciF__p1_*csF__p1_*pi1 + niF__p1_*nsF__p1_*pi2 + pi3)
    jacobian[70,149] = -1/betta
    jacobian[71,43] = lambtildeF__p1_*niF__p1_
    jacobian[71,58] = lambtildeF__p1_*wF__p1_ - niF__p1_*theta
    jacobian[71,61] = -lambtildeF__p1_ + 1/ciF__p1_
    jacobian[71,66] = -ciF__p1_ + niF__p1_*wF__p1_
    jacobian[71,70] = pir
    jacobian[71,148] = -pid - pir + 1 - 1/betta
    jacobian[72,43] = lambtildeF__p1_*nrF__p1_
    jacobian[72,59] = lambtildeF__p1_*wF__p1_ - nrF__p1_*theta
    jacobian[72,62] = -lambtildeF__p1_ + 1/crF__p1_
    jacobian[72,66] = -crF__p1_ + nrF__p1_*wF__p1_
    jacobian[72,70] = 1
    jacobian[72,150] = -1/betta
    jacobian[73,66] = -RbF__*betta/pieF__p1_
    jacobian[73,74] = RbF__*betta*lambtildeF__p1_/pieF__p1_**2
    jacobian[73,146] = 1
    jacobian[73,153] = -betta*lambtildeF__p1_/pieF__p1_
    jacobian[74,74] = RbF__/pieF__p1_**2
    jacobian[74,153] = -1/pieF__p1_
    jacobian[74,158] = 1
    jacobian[75,74] = -KfF__p1_*betta*gam*pieF__p1_**(gam/(gam - 1))*xi_flex/(pieF__p1_*(gam - 1))
    jacobian[75,77] = -betta*pieF__p1_**(gam/(gam - 1))*xi_flex
    jacobian[75,120] = -gam*lambtildeF__*mcF__
    jacobian[75,146] = -gam*mcF__*yF__
    jacobian[75,155] = -gam*lambtildeF__*yF__
    jacobian[75,157] = 1
    jacobian[76,74] = -FF__p1_*betta*pieF__p1_**(1/(gam - 1))*xi_flex/(pieF__p1_*(gam - 1))
    jacobian[76,76] = -betta*pieF__p1_**(1/(gam - 1))*xi_flex
    jacobian[76,120] = -lambtildeF__
    jacobian[76,146] = -yF__
    jacobian[76,156] = 1
    jacobian[77,154] = FF__*pieF__**(1/(gam - 1))*xi_flex*((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**(1 - gam)*(1 - gam)/(pieF__*(gam - 1)*(-pieF__**(1/(gam - 1))*xi_flex + 1))
    jacobian[77,156] = -((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**(1 - gam)
    jacobian[77,157] = 1
    jacobian[78,154] = gam*pieF__**(1/(gam - 1))*xi_flex*((-pieF__**(1/(gam - 1))*xi_flex + 1)/(1 - xi_flex))**gam*(1 - xi_flex)/(pieF__*(gam - 1)*(-pieF__**(1/(gam - 1))*xi_flex + 1)) - gam*pieF__**(gam/(gam - 1))*xi_flex/(pbreveF__m1_*pieF__*(gam - 1))
    jacobian[78,159] = -1/pbreveF__**2
    jacobian[78,239] = pieF__**(gam/(gam - 1))*xi_flex/pbreveF__m1_**2
    jacobian[79,153] = 1
    jacobian[79,154] = -rpi/pieF__

    if order == 1:
        return [function, jacobian]
