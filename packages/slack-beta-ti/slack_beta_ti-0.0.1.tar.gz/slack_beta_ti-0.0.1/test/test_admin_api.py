# coding: utf-8

"""
    Slack Web API

    One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from slack_beta_ti.api.admin_api import AdminApi


class TestAdminApi(unittest.TestCase):
    """AdminApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AdminApi()

    def tearDown(self) -> None:
        pass

    def test_admin_apps_approve(self) -> None:
        """Test case for admin_apps_approve

        """
        pass

    def test_admin_apps_approved_list(self) -> None:
        """Test case for admin_apps_approved_list

        """
        pass

    def test_admin_apps_requests_list(self) -> None:
        """Test case for admin_apps_requests_list

        """
        pass

    def test_admin_apps_restrict(self) -> None:
        """Test case for admin_apps_restrict

        """
        pass

    def test_admin_apps_restricted_list(self) -> None:
        """Test case for admin_apps_restricted_list

        """
        pass

    def test_admin_conversations_archive(self) -> None:
        """Test case for admin_conversations_archive

        """
        pass

    def test_admin_conversations_convert_to_private(self) -> None:
        """Test case for admin_conversations_convert_to_private

        """
        pass

    def test_admin_conversations_create(self) -> None:
        """Test case for admin_conversations_create

        """
        pass

    def test_admin_conversations_delete(self) -> None:
        """Test case for admin_conversations_delete

        """
        pass

    def test_admin_conversations_disconnect_shared(self) -> None:
        """Test case for admin_conversations_disconnect_shared

        """
        pass

    def test_admin_conversations_ekm_list_original_connected_channel_info(self) -> None:
        """Test case for admin_conversations_ekm_list_original_connected_channel_info

        """
        pass

    def test_admin_conversations_get_conversation_prefs(self) -> None:
        """Test case for admin_conversations_get_conversation_prefs

        """
        pass

    def test_admin_conversations_get_teams(self) -> None:
        """Test case for admin_conversations_get_teams

        """
        pass

    def test_admin_conversations_invite(self) -> None:
        """Test case for admin_conversations_invite

        """
        pass

    def test_admin_conversations_rename(self) -> None:
        """Test case for admin_conversations_rename

        """
        pass

    def test_admin_conversations_restrict_access_add_group(self) -> None:
        """Test case for admin_conversations_restrict_access_add_group

        """
        pass

    def test_admin_conversations_restrict_access_list_groups(self) -> None:
        """Test case for admin_conversations_restrict_access_list_groups

        """
        pass

    def test_admin_conversations_restrict_access_remove_group(self) -> None:
        """Test case for admin_conversations_restrict_access_remove_group

        """
        pass

    def test_admin_conversations_search(self) -> None:
        """Test case for admin_conversations_search

        """
        pass

    def test_admin_conversations_set_conversation_prefs(self) -> None:
        """Test case for admin_conversations_set_conversation_prefs

        """
        pass

    def test_admin_conversations_set_teams(self) -> None:
        """Test case for admin_conversations_set_teams

        """
        pass

    def test_admin_conversations_unarchive(self) -> None:
        """Test case for admin_conversations_unarchive

        """
        pass

    def test_admin_emoji_add(self) -> None:
        """Test case for admin_emoji_add

        """
        pass

    def test_admin_emoji_add_alias(self) -> None:
        """Test case for admin_emoji_add_alias

        """
        pass

    def test_admin_emoji_list(self) -> None:
        """Test case for admin_emoji_list

        """
        pass

    def test_admin_emoji_remove(self) -> None:
        """Test case for admin_emoji_remove

        """
        pass

    def test_admin_emoji_rename(self) -> None:
        """Test case for admin_emoji_rename

        """
        pass

    def test_admin_invite_requests_approve(self) -> None:
        """Test case for admin_invite_requests_approve

        """
        pass

    def test_admin_invite_requests_approved_list(self) -> None:
        """Test case for admin_invite_requests_approved_list

        """
        pass

    def test_admin_invite_requests_denied_list(self) -> None:
        """Test case for admin_invite_requests_denied_list

        """
        pass

    def test_admin_invite_requests_deny(self) -> None:
        """Test case for admin_invite_requests_deny

        """
        pass

    def test_admin_invite_requests_list(self) -> None:
        """Test case for admin_invite_requests_list

        """
        pass

    def test_admin_teams_admins_list(self) -> None:
        """Test case for admin_teams_admins_list

        """
        pass

    def test_admin_teams_create(self) -> None:
        """Test case for admin_teams_create

        """
        pass

    def test_admin_teams_list(self) -> None:
        """Test case for admin_teams_list

        """
        pass

    def test_admin_teams_owners_list(self) -> None:
        """Test case for admin_teams_owners_list

        """
        pass

    def test_admin_teams_settings_info(self) -> None:
        """Test case for admin_teams_settings_info

        """
        pass

    def test_admin_teams_settings_set_default_channels(self) -> None:
        """Test case for admin_teams_settings_set_default_channels

        """
        pass

    def test_admin_teams_settings_set_description(self) -> None:
        """Test case for admin_teams_settings_set_description

        """
        pass

    def test_admin_teams_settings_set_discoverability(self) -> None:
        """Test case for admin_teams_settings_set_discoverability

        """
        pass

    def test_admin_teams_settings_set_icon(self) -> None:
        """Test case for admin_teams_settings_set_icon

        """
        pass

    def test_admin_teams_settings_set_name(self) -> None:
        """Test case for admin_teams_settings_set_name

        """
        pass

    def test_admin_usergroups_add_channels(self) -> None:
        """Test case for admin_usergroups_add_channels

        """
        pass

    def test_admin_usergroups_add_teams(self) -> None:
        """Test case for admin_usergroups_add_teams

        """
        pass

    def test_admin_usergroups_list_channels(self) -> None:
        """Test case for admin_usergroups_list_channels

        """
        pass

    def test_admin_usergroups_remove_channels(self) -> None:
        """Test case for admin_usergroups_remove_channels

        """
        pass

    def test_admin_users_assign(self) -> None:
        """Test case for admin_users_assign

        """
        pass

    def test_admin_users_invite(self) -> None:
        """Test case for admin_users_invite

        """
        pass

    def test_admin_users_list(self) -> None:
        """Test case for admin_users_list

        """
        pass

    def test_admin_users_remove(self) -> None:
        """Test case for admin_users_remove

        """
        pass

    def test_admin_users_session_invalidate(self) -> None:
        """Test case for admin_users_session_invalidate

        """
        pass

    def test_admin_users_session_reset(self) -> None:
        """Test case for admin_users_session_reset

        """
        pass

    def test_admin_users_set_admin(self) -> None:
        """Test case for admin_users_set_admin

        """
        pass

    def test_admin_users_set_expiration(self) -> None:
        """Test case for admin_users_set_expiration

        """
        pass

    def test_admin_users_set_owner(self) -> None:
        """Test case for admin_users_set_owner

        """
        pass

    def test_admin_users_set_regular(self) -> None:
        """Test case for admin_users_set_regular

        """
        pass


if __name__ == '__main__':
    unittest.main()
