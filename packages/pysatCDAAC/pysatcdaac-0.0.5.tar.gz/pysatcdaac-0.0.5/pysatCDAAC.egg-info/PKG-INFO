Metadata-Version: 2.2
Name: pysatCDAAC
Version: 0.0.5
Summary: pysat support for CDAAC Instruments
Author-email: "Jeff Klenzing, et al." <pysat.developers@gmail.com>
License: BSD 3-Clause License
        
        Copyright (c) 2023, pysat
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: Documentation, https://pysatcdaac.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/pysat/pysatCDAAC
Keywords: pysat,ionosphere,cosmic,radio occultation
Classifier: Development Status :: 3 - Alpha
Classifier: Topic :: Scientific/Engineering :: Astronomy
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Atmospheric Science
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: netCDF4
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: pysat>=3.2.1
Requires-Dist: requests
Requires-Dist: xarray
Provides-Extra: test
Requires-Dist: coveralls<3.3; extra == "test"
Requires-Dist: flake8; extra == "test"
Requires-Dist: flake8-docstrings; extra == "test"
Requires-Dist: hacking>=1.0; extra == "test"
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: pytest-ordering; extra == "test"
Provides-Extra: doc
Requires-Dist: extras_require; extra == "doc"
Requires-Dist: ipython; extra == "doc"
Requires-Dist: m2r2; extra == "doc"
Requires-Dist: numpydoc; extra == "doc"
Requires-Dist: sphinx<7.0; extra == "doc"
Requires-Dist: sphinx-autoapi; extra == "doc"
Requires-Dist: sphinx_rtd_theme<2.0.0,>=1.2.2; extra == "doc"

<div align="center">
        <img height="0" width="0px">
        <img width="20%" src="https://raw.githubusercontent.com/pysat/pysatCDAAC/main/docs/figures/logo.png" alt="pysat" title="pysatCDAAC"</img>
</div>

# pysatCDAAC: pysat support for COSMIC Data Analysis and Archive Center instruments
[![PyPI Package latest release](https://img.shields.io/pypi/v/pysatCDAAC.svg)](https://pypi.python.org/pypi/pysatCDAAC)
[![Build Status](https://github.com/pysat/pysatCDAAC/actions/workflows/main.yml/badge.svg)](https://github.com/pysat/pysatCDAAC/actions/workflows/main.yml/badge.svg)
[![Coverage Status](https://coveralls.io/repos/github/pysat/pysatCDAAC/badge.svg?branch=main)](https://coveralls.io/github/pysat/pysatCDAAC?branch=main)
[![DOI](https://zenodo.org/badge/287322558.svg)](https://zenodo.org/badge/latestdoi/287322558)

### Prerequisites

pysatCDAAC uses common Python modules, as well as modules developed by
and for the Space Physics community.  This module officially supports
Python 3.7+.

| Common modules | Community modules   |
| -------------- | ------------------- |
| netCDF4        | pysat>=3.2.1        |
| numpy          |                     |
| pandas         |                     |
| requests       |                     |
| xarray         |                     |

# Installation

Currently, the main way to get pysatCDAAC is through github.

```
git clone https://github.com/pysat/pysatCDAAC.git
```

Change directories into the repository folder and run the setup.py file.  For
a local install use the "--user" flag after "install".

```
cd pysatCDAAC/
pip install .
```

Note: pre-1.0.0 version
-----------------------
pysatCDAAC is currently in an initial development phase and requires pysat 3.0.0+.


# Using with pysat

The instrument modules are portable and designed to be run like any pysat instrument.

```
import pysat
from pysatCDAAC.instruments import cosmic_gps

cosmic = pysat.Instrument(inst_module=cosmic_gps, tag='ionprf')
```
Another way to use the instruments in an external repository is to register the instruments.  This only needs to be done the first time you load an instrument.  Afterward, pysat will identify them using the `platform` and `name` keywords.

```
import pysat

pysat.utils.registry.register(‘pysatCDAAC.instruments.cosmic_gps’)
cosmic = pysat.Instrument('cosmic', 'gps', tag='ionprf')
```
