# coding: utf-8

"""
    Perplexity API

    API for generating chat completions using Perplexity's AI models

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from perplexity_dev_ti.models.choice import Choice

class TestChoice(unittest.TestCase):
    """Choice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Choice:
        """Test Choice
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Choice`
        """
        model = Choice()
        if include_optional:
            return Choice(
                index = 56,
                finish_reason = '',
                message = perplexity_dev_ti.models.message.Message(
                    role = 'system', 
                    content = '', ),
                delta = perplexity_dev_ti.models.choice_delta.Choice_delta(
                    role = '', 
                    content = '', )
            )
        else:
            return Choice(
        )
        """

    def testChoice(self):
        """Test Choice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
