# coding: utf-8

"""
    Perplexity API

    API for generating chat completions using Perplexity's AI models

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from perplexity_dev_ti.models.chat_completion_request import ChatCompletionRequest

class TestChatCompletionRequest(unittest.TestCase):
    """ChatCompletionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatCompletionRequest:
        """Test ChatCompletionRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChatCompletionRequest`
        """
        model = ChatCompletionRequest()
        if include_optional:
            return ChatCompletionRequest(
                messages = [
                    perplexity_dev_ti.models.message.Message(
                        role = 'system', 
                        content = '', )
                    ],
                model = '',
                frequency_penalty = 0,
                max_tokens = 56,
                presence_penalty = -2,
                response_format = None,
                return_images = True,
                return_related_questions = True,
                search_domain_filter = [
                    ''
                    ],
                search_recency_filter = 'month',
                stream = True,
                temperature = 0,
                top_k = 0,
                top_p = 0
            )
        else:
            return ChatCompletionRequest(
                messages = [
                    perplexity_dev_ti.models.message.Message(
                        role = 'system', 
                        content = '', )
                    ],
                model = '',
        )
        """

    def testChatCompletionRequest(self):
        """Test ChatCompletionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
