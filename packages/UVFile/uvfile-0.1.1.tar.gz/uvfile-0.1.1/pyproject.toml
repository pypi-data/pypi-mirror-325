[project]
name = "UVFile"
version = "0.1.1"
description = "Like Brewfile but for UV"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "Bobronium", email = "write@bobronium.me" },
]
license = { text = "MIT" }
keywords = ["uv", "tools", "brewfile", "uvfile", "pipx", "uvx"]
homepage = "https://github.com/Bobronium/uvfile/"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "packaging",
]

[project.scripts]
uvfile = "uvfile.__main__:main"

[dependency-groups]
dev = [
    "lefthook>=1.10.10",
    "pytest>=8.3.4",
    "ruff>=0.9.3",
    "testcontainers>=4.9.1",
]

[tool.setuptools.dynamic]
version = { vcs = "git", style = "semver" }

[tool.hatch.build.targets.wheel]
packages = ["uvfile"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"
vcs = "git"
style = "semver"



[tool.ruff]
# Ruff config: https://docs.astral.sh/ruff/settings
preview = true
fix = true
target-version = "py312"
line-length = 100
extend-exclude = [
    # Intentionally bad code:
    "tests/**/__snapshots__/**",
    "tests/fixtures/**",
]

[tool.ruff.format]
docstring-code-format = false

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # maccabe
    "COM", # flake8-commas
    "D", # pydocstyle
    "DTZ", # flake8-datetimez
    "E", # pycodestyle
    "ERA", # flake8-eradicate
    "EXE", # flake8-executable
    "F", # pyflakes
    "FBT", # flake8-boolean-trap
    "FLY", # pyflint
    "FURB", # refurb
    "G", # flake8-logging-format
    "I", # isort
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging
    "N", # pep8-naming
    "PERF", # perflint
    "PIE", # flake8-pie
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # ruff
    "S", # flake8-bandit
    "SIM", # flake8-simpify
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "T100", # flake8-debugger
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # pycodestyle
    "YTT", # flake8-2020
]
ignore = [
    "A005", # allow to shadow stdlib and builtin module names
    "COM812", # trailing comma, conflicts with `ruff format`
    # Different doc rules that we don't really care about:
    "D100",
    "D104",
    "D106",
    "D203",
    "D212",
    "D401",
    "D404",
    "D405",
    "ISC001", # implicit string concat conflicts with `ruff format`
    "ISC003", # prefer explicit string concat over implicit concat
    "PLR09", # we have our own complexity rules
    "PLR2004", # do not report magic numbers
    "PLR6301", # do not require classmethod / staticmethod when self not used
    "TRY003", # long exception messages from `tryceratops`
]
