# coding: utf-8

"""
    Giphy API

    Giphy API

    The version of the OpenAPI document: 1.0
    Contact: support@giphy.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from testing_compose_deployment_v0_ti.models.gif import Gif

class TestGif(unittest.TestCase):
    """Gif unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Gif:
        """Test Gif
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Gif`
        """
        model = Gif()
        if include_optional:
            return Gif(
                bitly_url = 'http://gph.is/1gsWDcL',
                content_url = '',
                create_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                embded_url = 'http://giphy.com/embed/YsTs5ltWtEhnq',
                featured_tags = [
                    ''
                    ],
                id = 'YsTs5ltWtEhnq',
                images = testing_compose_deployment_v0_ti.models.gif_images.Gif_images(
                    downsized = null, 
                    downsized_large = null, 
                    downsized_medium = null, 
                    downsized_small = null, 
                    downsized_still = null, 
                    fixed_height = null, 
                    fixed_height_downsampled = null, 
                    fixed_height_small = null, 
                    fixed_height_small_still = null, 
                    fixed_height_still = null, 
                    fixed_width = null, 
                    fixed_width_downsampled = null, 
                    fixed_width_small = null, 
                    fixed_width_small_still = null, 
                    fixed_width_still = null, 
                    looping = null, 
                    original = null, 
                    original_still = null, 
                    preview = null, 
                    preview_gif = null, ),
                import_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                rating = 'g',
                slug = 'confused-flying-YsTs5ltWtEhnq',
                source = 'http://www.reddit.com/r/reactiongifs/comments/1xpyaa/superman_goes_to_hollywood/',
                source_post_url = 'http://cheezburger.com/5282328320',
                source_tld = 'cheezburger.com',
                tags = [
                    ''
                    ],
                type = 'gif',
                update_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                url = 'http://giphy.com/gifs/confused-flying-YsTs5ltWtEhnq',
                user = testing_compose_deployment_v0_ti.models.user.User(
                    avatar_url = 'https://media1.giphy.com/avatars/election2016/XwYrZi5H87o6.gif', 
                    banner_url = 'https://media4.giphy.com/avatars/cheezburger/XkuejOhoGLE6.jpg', 
                    display_name = 'JoeCool4000', 
                    profile_url = 'https://giphy.com/cheezburger/', 
                    twitter = '@joecool4000', 
                    username = 'joecool4000', ),
                username = 'JoeCool4000'
            )
        else:
            return Gif(
        )
        """

    def testGif(self):
        """Test Gif"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
