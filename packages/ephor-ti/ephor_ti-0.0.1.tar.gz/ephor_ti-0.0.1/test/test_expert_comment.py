# coding: utf-8

"""
    Ephor.ai

    Collaborative AI

    The version of the OpenAPI document: 1.9.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ephor_ti.models.expert_comment import ExpertComment

class TestExpertComment(unittest.TestCase):
    """ExpertComment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExpertComment:
        """Test ExpertComment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExpertComment`
        """
        model = ExpertComment()
        if include_optional:
            return ExpertComment(
                id = '',
                message_id = '',
                project_id = '',
                channel_id = '',
                expert_type = '',
                content = '',
                spov_truths_violated = [
                    ''
                    ],
                spov_myths_violated = [
                    ''
                    ],
                agreement = '',
                pinned = True,
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                metadata = ephor_ti.models.metadata.metadata()
            )
        else:
            return ExpertComment(
                id = '',
                message_id = '',
                project_id = '',
                channel_id = '',
                expert_type = '',
                content = '',
                spov_truths_violated = [
                    ''
                    ],
                spov_myths_violated = [
                    ''
                    ],
                agreement = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testExpertComment(self):
        """Test ExpertComment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
