# coding: utf-8

"""
    Ephor.ai

    Collaborative AI

    The version of the OpenAPI document: 1.9.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ephor_ti.models.library_item import LibraryItem

class TestLibraryItem(unittest.TestCase):
    """LibraryItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LibraryItem:
        """Test LibraryItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LibraryItem`
        """
        model = LibraryItem()
        if include_optional:
            return LibraryItem(
                index_reference = '',
                name = '',
                manifest = [
                    ephor_ti.models.manifest_item.ManifestItem(
                        id = '', 
                        mime_type = '', 
                        name = '', 
                        web_view_link = '', 
                        starred = True, 
                        priority = 56, 
                        ingested = True, 
                        ingestion_status = '', 
                        ingestion_error = '', 
                        updated_at = '', 
                        content_hash = '', 
                        type = '', )
                    ],
                is_multipart = True,
                last_part = 56
            )
        else:
            return LibraryItem(
                index_reference = '',
                manifest = [
                    ephor_ti.models.manifest_item.ManifestItem(
                        id = '', 
                        mime_type = '', 
                        name = '', 
                        web_view_link = '', 
                        starred = True, 
                        priority = 56, 
                        ingested = True, 
                        ingestion_status = '', 
                        ingestion_error = '', 
                        updated_at = '', 
                        content_hash = '', 
                        type = '', )
                    ],
        )
        """

    def testLibraryItem(self):
        """Test LibraryItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
