Metadata-Version: 2.1
Name: signal_processing_basics
Version: 0.1.6
Summary: Signal Processing Basics for Condition Monitoring Engineers
Author: Justin Smith
Author-email: 66smithjustin@gmail.com
Requires-Python: >=3.11,<4.0
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Requires-Dist: ipykernel (>=6.29.5,<7.0.0)
Requires-Dist: matplotlib (>=3.10.0,<4.0.0)
Requires-Dist: numpy (<2.2)
Requires-Dist: scikit-learn (>=1.6.1,<2.0.0)
Requires-Dist: scipy (>=1.15.1,<2.0.0)
Requires-Dist: statistics (>=1.0.3.5,<2.0.0.0)
Description-Content-Type: text/markdown

# Signal Processing for Condition Monitoring
This repository contains the signalprocessing.py file, which is a Python library for signal processing in condition monitoring.

This module is focused on the signal processing methods which are commonly used in vibration based condition monitorig. For example the processing methods used in MEV781 - Vibration Based Condition Montioring.

Last Update 4 February 2025.

# Installation
To use this library, clone the repository and import the signalprocessing.py file in your Python script.

# Errors:
Please feel free to contact me, Justin Smith, through 66smithjustin@gmail.com if you notice any issues.

# About the Author:
I am currently a mechanical engineering Masters candidate at the University of Pretoria performing research in the Center for Asset Integrity Management. I am focusing on vibration based condition monitoring systems for axial fans. Linkedin: https://www.linkedin.com/in/justin-s-507338116/

# To Do's
Add references for all the functions and ask Dr Diamond if i can publish the get_rpm BGC code
Add useful code from BTT test notebooks (such as the get_threshold function, get_dataframe function and so on)
Update the get_displacement_signal function to handle a MPR signal and not just an OPR signal
Update filter funtion to use filtfilt as its a function of past and future so the filter wont lag the input (https://stackoverflow.com/questions/13740348/how-to-apply-a-filter-to-a-signal-in-python/13740532#13740532)
might be a good idea to have more filtering options
