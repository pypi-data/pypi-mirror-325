[project]
name = "scicookie"
version = "0.12.0"  # semantic-release
description = "Cookiecutter template for a Python package"
readme = "docs/description.md"
authors = [
  {name = "Ivan Ogasawara", email = "ivan.ogasawara@gmail.com"}
]
license = "BSD-3-Clause"
requires-python = ">=3.9,<4"
dependencies = [
  "cookiecutter >= 2.6.0",
  "colorama >= 0.4.6",
  "inquirer >= 3.1.3",
  "pyyaml >= 6.0.1",
  "nodejs-wheel >= 20.13.0-1",
  "pre-commit-hooks >= 0.4.6"
]

[project.scripts]
"scicookie" = "scicookie.__main__:app"

[build-system]
requires = ["poetry-core>=2", "poetry>=2"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
include = [
    {path = "src/scicookie/cookiecutter.json"},
    {path = "src/scicookie/{{cookiecutter.project_slug}}"},
    {path = "src/scicookie/hooks"},
    {path = "src/scicookie/profiles"},
]

[tool.poetry.group.dev.dependencies]
pytest = ">=7"
pre-commit = ">=3"
ruff = ">=0.2.0"
mypy = ">=1.5"
pytest-cov = ">=3"
pytest-cookies = ">=0.6.1"
markdown-callouts = ">=0.2"
mkdocs = ">=1.3.1"
mkdocs-include-exclude-files = ">=0.0.1"
mkdocs-jupyter = ">=0.24.7"
mkdocs-material = ">=8.3.9"
mkdocstrings-python = ">=0.7.1"
mkdocstrings-python-legacy = ">=0.2.3"
pymdown-extensions = ">=9.5"
makim = "1.20.0"
pexpect = ">=4.9.0"
ensureconda = ">=1.4"

[tool.mypy]
python_version = "3.9"
no_strict_optional = false
exclude = '''(?x)(
      src/scicookie/{{cookiecutter.project_slug}}/
    | src/scicookie/hooks/*
)'''  # TOML's single-quoted strings do not require escaping backslashes

[[tool.mypy.overrides]]
module = [
  "colorama",
  "inquirer",
  "cookiecutter.main",
  "yaml",
  "pre_commit_hooks",
]
ignore_missing_imports = true

[tool.ruff]
line-length = 79
force-exclude = true
src = ["./"]
exclude = [
   'src/scicookie/\{\{cookiecutter.project_slug\}\}',
   'src/scicookie/hooks',
]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "D",   # pydocstyle
  "YTT", # flake8-2020
  "PL",  # PL
  "RUF", # Ruff-specific rules
  "I001", # isort
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
# Use a single line between direct and from import
lines-between-types = 1

[tool.ruff.format]
quote-style = "double"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
