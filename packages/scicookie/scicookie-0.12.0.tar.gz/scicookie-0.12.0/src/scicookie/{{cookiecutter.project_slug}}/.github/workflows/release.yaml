name: Release

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
{% if cookiecutter.use_conda == "yes" %}
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: {{ cookiecutter.project_slug }}
          auto-update-conda: true
          conda-solver: libmamba
{% else %}
      - uses: actions/setup-python@v4
        with:
          python-version: "pypy3.9"

      - name: Create virtual environment
        run: python -m venv {{ cookiecutter.project_slug }}

      - name: Activate virtual environment
        run: source {{ cookiecutter.project_slug }}/bin/activate

      - name: Install build-system
        run: pip install -r requests.txt
{% endif %}
      - name: Install deps
        run: |
          {%- if cookiecutter.build_system == "poetry" %}
          poetry install
          {%- elif cookiecutter.build_system == "flit" %}
          flit install
          {%- elif cookiecutter.build_system == "pdm" %}
          pdm install
          {%- elif cookiecutter.build_system == "pixi" %}
          pixi install
          {%- else %}
          pip install .
          {%- endif %}

      - name: Run semantic release (for tests)
        if: {% raw %}${{ github.event_name != 'workflow_dispatch' }}{% endraw %}
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
        run: |
          {%- if cookiecutter.use_makim == "yes" %}
          makim release.dry
          {%- elif cookiecutter.use_make == "yes" %}
          make release-dry
          {%- else %}
          # add your command here to run semantic-release in dry mode
          {%- endif %}

      - name: Release command
        if: {% raw %}${{ github.event_name == 'workflow_dispatch' }}{% endraw %}
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          PYPI_TOKEN: {% raw %}${{ secrets.PYPI_TOKEN }}{% endraw %}
        run: |
          {%- if cookiecutter.build_system == "poetry" %}
          poetry config pypi-token.pypi {% raw %}${PYPI_TOKEN}{% endraw %}
          {%- else %}
          # add here any configuration for setting PYPI_TOKEN
          {% endif -%}
          {%- if cookiecutter.use_makim == "yes" %}
          makim release.ci
          {%- elif cookiecutter.use_make == "yes" -%}
          make release-ci
          {%- else -%}
          # add your command here to run semantic-release for CI
          {%- endif %}

      - name: Generate documentation with changes from semantic-release
        if: {% raw %}${{ github.event_name == 'workflow_dispatch' }}{% endraw %}
        run: |
          {%- if cookiecutter.use_makim == "yes" %}
          makim docs.build
          {%- elif cookiecutter.use_make == "yes" -%}
          make docs-build
          {%- else %}
          # add here your command for generating the documentation
          {%- endif %}

      - name: GitHub Pages action
        if: {% raw %}${{ github.event_name == 'workflow_dispatch' }}{% endraw %}
        uses: peaceiris/actions-gh-pages@v3.5.9
        with:
          github_token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          publish_dir: >-
            {%- if cookiecutter.documentation_engine == "jupyter-book" %}
            ./docs/_build/html
            {%- elif cookiecutter.documentation_engine == "mkdocs" %}
            build/
            {%- elif cookiecutter.documentation_engine == "sphinx" %}
            docs/_build/html/
            {%- else %}
            # add here the path for your documentation static folder
            {%- endif %}
