"""Implements the contextpack topics"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['ctx_docker', 'ctx_fastcore', 'ctx_nbclassic_server', 'ctx_fasthtml', 'ctx_claudette', 'ctx_fastlite_sqlutils',
           'Topic', 'ST', 'CTX_Fastlite_Sqlutils', 'CTX_Claudette', 'CTX_Docker', 'CTX_FastHtml', 'CTX_NBClassicServer',
           'CTX_Fastcore']

# %% ../nbs/00_core.ipynb 3
from typing import Callable
from contextkit import *
from fastcore.utils import *

# %% ../nbs/00_core.ipynb 5
class Topic:
    def _children(self):
        return sorted(list(set(c for c in dir(self) if not c.startswith('_')) - {'get','getter','docs','url'}))
    def __repr__(self):
        s = ''
        if self.__doc__: s += f"doc: {self.__doc__}\n"
        if (cs := self._children()): s += f"sub-topics: {cs}\n"            
        return s


# %% ../nbs/00_core.ipynb 6
class ST:
    def __init__(self,url,getter:Callable=read_url):
        self.url = url
        self.getter = getter
    def get(self):
        return self.getter(self.url)
    def __repr__(self):
        s = ''
        if self.url: s += f"URL: {self.url}\n"
        return s


# %% ../nbs/00_core.ipynb 8
class CTX_Fastlite_Sqlutils(Topic):
    "LLM contexts on fastlite-sqlutils"
    def __init__(self):
        self.fastlite_index    = ST('https://answerdotai.github.io/fastlite/index.html.md')
        self.fastlite_core     = ST('https://answerdotai.github.io/fastlite/core.html.md')
        self.sqlite_utils_docs = ST('https://sqlite-utils.datasette.io/en/stable/python-api.html',
                                    lambda url:read_url(url,sel='#sqlite-utils-python-library'))


# %% ../nbs/00_core.ipynb 12
class CTX_Claudette(Topic):
    def __init__(self):
        self.async_docs    = ST('https://claudette.answer.ai/async.html.md')
        self.core_docs     = ST('https://claudette.answer.ai/core.html.md')
        self.toolloop_docs = ST('https://claudette.answer.ai/toolloop.html.md')



# %% ../nbs/00_core.ipynb 13
class CTX_Docker(Topic):
    def __init__(self):
        self.compose_file       = ST('https://docs.docker.com/reference/compose-file/')
        self.docker_cli         = ST('https://docs.docker.com/reference/cli/docker/')
        self.docker_compose_cli = ST('https://docs.docker.com/reference/cli/docker/compose/')
        self.dockerd            = ST('https://docs.docker.com/reference/cli/dockerd/')
        
        # page-based URLs
        url = 'https://docker-py.readthedocs.io/en/stable/{}.html'
        page_names = ['client','configs','containers','images','networks','nodes',
                 'plugins','secrets','services','swarm','volumes','api','tls',]
        pageurls = [(f"pg_{p}",url.format(p)) for p in page_names]
        for name,url in pageurls: setattr(self,name,ST(url))
        

# %% ../nbs/00_core.ipynb 14
class CTX_FastHtml(Topic):
    "LLM-friendly documentation for FastHtml"
    def __init__(self):
        self.fasthtml_llms_ctx = ST('https://docs.fastht.ml/llms-ctx.txt')
        self.hypermedia_summary = ST('https://gist.github.com/jph00/4ad7d35ad79013aded41b5ba535a12a3',read_gist)


# %% ../nbs/00_core.ipynb 15
class CTX_NBClassicServer(Topic):
    def __init__(self):
        self.nbclassic_server = ST('https://nbclassic.readthedocs.io/en/latest/nbclassic.html',
                                   lambda url:read_url(url,self='bd-article'))


# %% ../nbs/00_core.ipynb 16
class CTX_Fastcore(Topic):
    def __init__(self):
        self.fc_llms_ctx   = ST('https://fastcore.fast.ai/llms-ctx.txt')

# %% ../nbs/00_core.ipynb 18
ctx_docker = CTX_Docker()
ctx_fastcore = CTX_Fastcore()
ctx_nbclassic_server = CTX_NBClassicServer()
ctx_fasthtml = CTX_FastHtml()
ctx_claudette = CTX_Claudette()
ctx_fastlite_sqlutils = CTX_Fastlite_Sqlutils()

