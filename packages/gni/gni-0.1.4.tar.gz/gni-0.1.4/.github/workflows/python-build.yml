name: Python Build and Publish

on:
  push:
  pull_request:

jobs:
  build-wheels:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        manylinux:
          - manylinux2014
          - manylinux_2_28
        target: [x86_64, aarch64, ppc64le, s390x]

    steps:
      - name: Github Checkout
        uses: actions/checkout@v4

      - name: Python Setup
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: --release --features=python --out dist -m Cargo.toml

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels_${{ matrix.manylinux }}_${{ matrix.target }}
          path: dist

  build-sdist:
    name: Build Source Distribution (sdist)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Maturin
        run: pip install --upgrade maturin

      - name: Build sdist
        run: maturin sdist --out dist

      - name: Upload sdist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist
  
  pypi-release:
    name: Publish to Pypi
    runs-on: ubuntu-latest
    # environment: pypi-publish
    # if: startsWith(github.ref, 'refs/tags/')
    needs: [ build-wheels, build-sdist]
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Python Setup
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      # - name: Publish to PyPI
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      #   run: |
      #     pip install --upgrade twine
      #     twine upload --skip-existing dist/**/*.whl dist/**/*.tar.gz
