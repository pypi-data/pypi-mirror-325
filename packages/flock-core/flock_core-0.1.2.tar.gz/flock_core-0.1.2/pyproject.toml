[project]
name = "flock-core"
version = "0.1.2"
description = "An agent framework for the age of agents"
readme = "README.md"
authors = [
    { name = "Andre Ratzenberger", email = "andre.ratzenberger@whiteduck.de" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
    "cloudpickle>=3.1.1",
    "devtools>=0.12.2",
    "dspy>=2.5.42",
    "httpx>=0.28.1",
    "loguru>=0.7.3",
    "marimo>=0.10.15",
    "markdownify>=0.14.1",
    "monsterui>=0.0.23",
    "msgpack>=1.1.0",
    "pydantic>=2.10.5",
    "python-box>=7.3.2",
    "python-fasthtml>=0.12.0",
    "rich>=13.9.4",
    "tavily-python>=0.5.0",
    "temporalio>=1.9.0",
]

[dependency-groups]
dev = [
    "pytest>=8.3.3",
    "pytest-clarity>=1.0.1",
    "pytest-cov>=6.0.0",
    "pytest-sugar>=1.0.0",
    "ipykernel>=6.29.5",
    "ruff>=0.7.2",
    "pytest-asyncio>=0.24.0",
    "ipywidgets>=8.1.5",
    "poethepoet>=0.30.0",
]


[project.scripts]
flock = "flock.app.flock_app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.build.targets.wheel]
packages = ["src/flock"]

# [tool.uv]
# prerelease = "allow"


[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 120
## formatting
format.quote-style = "double"
format.indent-style = "space"
format.skip-magic-trailing-comma = false
format.line-ending = "auto"
format.docstring-code-format = true
format.docstring-code-line-length = "dynamic"
## linting
lint.select = [
    'D',   #pydocstyle
    'E',
    'W',   # pycodestyle
    'F',   #pyflakes
    'I',   # sort imports
    'UP',  #pyupgrade
    "RUF", # ruff dev's own rules
    "SIM", # pyflakes simplicity
    "C90", # more complexity rules
]
lint.ignore = ["E203", "E266", "E501", "F541", "D417"]
lint.exclude = ["logs/", "data/", "tests/", "docs/", "dump/"]
lint.pydocstyle.convention = "google"
lint.isort.combine-as-imports = true
exclude = [
    "logs/",
    "data/",
    "tests/",
    "docs/",
    "src/templates/",
    "dump/",
    "src/frontend/",
]

[tool.pytest.ini_options]
addopts = " -v"
minversion = "6.0"
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test"
verbosity_test_cases = 2
